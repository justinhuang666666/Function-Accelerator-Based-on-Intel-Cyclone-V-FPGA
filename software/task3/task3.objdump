
task3.elf:     file format elf32-littlenios2
task3.elf
architecture: nios2:r1, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x00800244

Program Header:
    LOAD off    0x00001000 vaddr 0x00800000 paddr 0x00800000 align 2**12
         filesz 0x00000020 memsz 0x00000020 flags r-x
    LOAD off    0x00001020 vaddr 0x00800020 paddr 0x00800020 align 2**12
         filesz 0x00010f8c memsz 0x00010f8c flags r-x
    LOAD off    0x00011fac vaddr 0x00810fac paddr 0x00816a60 align 2**12
         filesz 0x00005ab4 memsz 0x00005ab4 flags rw-
    LOAD off    0x00018514 vaddr 0x0081c514 paddr 0x0081c514 align 2**12
         filesz 0x00000000 memsz 0x00000160 flags rw-

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .entry        00000020  00800000  00800000  00001000  2**5
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .exceptions   00000224  00800020  00800020  00001020  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .text         00010a48  00800244  00800244  00001244  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .rodata       00000320  00810c8c  00810c8c  00011c8c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .rwdata       00005ab4  00810fac  00816a60  00011fac  2**2
                  CONTENTS, ALLOC, LOAD, DATA, SMALL_DATA
  5 .bss          00000160  0081c514  0081c514  00018514  2**2
                  ALLOC, SMALL_DATA
  6 .sdram        00000000  0081c674  0081c674  00017a60  2**0
                  CONTENTS
  7 .comment      00000023  00000000  00000000  00017a60  2**0
                  CONTENTS, READONLY
  8 .debug_aranges 00001008  00000000  00000000  00017a88  2**3
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_info   00026e5e  00000000  00000000  00018a90  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_abbrev 00009eb0  00000000  00000000  0003f8ee  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_line   0000c3c1  00000000  00000000  0004979e  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_frame  00002438  00000000  00000000  00055b60  2**2
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_str    00003afb  00000000  00000000  00057f98  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_loc    0001a11b  00000000  00000000  0005ba93  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_alt_sim_info 00000020  00000000  00000000  00075bb0  2**2
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_ranges 00001ba8  00000000  00000000  00075bd0  2**3
                  CONTENTS, READONLY, DEBUGGING
 17 .thread_model 00000003  00000000  00000000  0007aafa  2**0
                  CONTENTS, READONLY
 18 .cpu          00000003  00000000  00000000  0007aafd  2**0
                  CONTENTS, READONLY
 19 .qsys         00000001  00000000  00000000  0007ab00  2**0
                  CONTENTS, READONLY
 20 .simulation_enabled 00000001  00000000  00000000  0007ab01  2**0
                  CONTENTS, READONLY
 21 .sysid_hash   00000004  00000000  00000000  0007ab02  2**0
                  CONTENTS, READONLY
 22 .sysid_base   00000004  00000000  00000000  0007ab06  2**0
                  CONTENTS, READONLY
 23 .sysid_time   00000004  00000000  00000000  0007ab0a  2**0
                  CONTENTS, READONLY
 24 .stderr_dev   00000009  00000000  00000000  0007ab0e  2**0
                  CONTENTS, READONLY
 25 .stdin_dev    00000009  00000000  00000000  0007ab17  2**0
                  CONTENTS, READONLY
 26 .stdout_dev   00000009  00000000  00000000  0007ab20  2**0
                  CONTENTS, READONLY
 27 .sopc_system_name 00000012  00000000  00000000  0007ab29  2**0
                  CONTENTS, READONLY
 28 .quartus_project_dir 00000071  00000000  00000000  0007ab3b  2**0
                  CONTENTS, READONLY
 29 .jdi          000058e3  00000000  00000000  0007abac  2**0
                  CONTENTS, READONLY
 30 .sopcinfo     0003b0d4  00000000  00000000  0008048f  2**0
                  CONTENTS, READONLY
SYMBOL TABLE:
00800000 l    d  .entry	00000000 .entry
00800020 l    d  .exceptions	00000000 .exceptions
00800244 l    d  .text	00000000 .text
00810c8c l    d  .rodata	00000000 .rodata
00810fac l    d  .rwdata	00000000 .rwdata
0081c514 l    d  .bss	00000000 .bss
0081c674 l    d  .sdram	00000000 .sdram
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_alt_sim_info	00000000 .debug_alt_sim_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    df *ABS*	00000000 ../task3_bsp//obj/HAL/src/crt0.o
0080028c l       .text	00000000 alt_after_alt_main
00000000 l    df *ABS*	00000000 alt_irq_handler.c
00000000 l    df *ABS*	00000000 alt_instruction_exception_entry.c
00000000 l    df *ABS*	00000000 hello_world.c
00000000 l    df *ABS*	00000000 addsf3.c
00000000 l    df *ABS*	00000000 adddf3.c
00000000 l    df *ABS*	00000000 muldf3.c
00000000 l    df *ABS*	00000000 floatunsidf.c
00000000 l    df *ABS*	00000000 extendsfdf2.c
00000000 l    df *ABS*	00000000 truncdfsf2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 efgcvt.c
00000000 l    df *ABS*	00000000 impure.c
00814f74 l     O .rwdata	00000424 impure_data
00000000 l    df *ABS*	00000000 printf.c
00000000 l    df *ABS*	00000000 puts.c
00000000 l    df *ABS*	00000000 strlen.c
00000000 l    df *ABS*	00000000 vfprintf.c
00810dfe l     O .rodata	00000010 zeroes.4404
008043c0 l     F .text	000000bc __sbprintf
00810e0e l     O .rodata	00000010 blanks.4403
00000000 l    df *ABS*	00000000 wsetup.c
00000000 l    df *ABS*	00000000 dtoa.c
008045d0 l     F .text	00000200 quorem
00000000 l    df *ABS*	00000000 ecvtbuf.c
00805e58 l     F .text	000001d0 print_e
00000000 l    df *ABS*	00000000 fflush.c
00000000 l    df *ABS*	00000000 findfp.c
00806c28 l     F .text	00000008 __fp_unlock
00806c3c l     F .text	0000019c __sinit.part.1
00806dd8 l     F .text	00000008 __fp_lock
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fvwrite.c
00000000 l    df *ABS*	00000000 fwalk.c
00000000 l    df *ABS*	00000000 locale.c
008153b8 l     O .rwdata	00000020 lc_ctype_charset
00815398 l     O .rwdata	00000020 lc_message_charset
008153d8 l     O .rwdata	00000038 lconv
00000000 l    df *ABS*	00000000 makebuf.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 memchr.c
00000000 l    df *ABS*	00000000 memcpy.c
00000000 l    df *ABS*	00000000 memmove.c
00000000 l    df *ABS*	00000000 memset.c
00000000 l    df *ABS*	00000000 mprec.c
00810e3c l     O .rodata	0000000c p05.2768
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 s_fpclassify.c
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 stdio.c
00000000 l    df *ABS*	00000000 strcmp.c
00000000 l    df *ABS*	00000000 strcpy.c
00000000 l    df *ABS*	00000000 vfprintf.c
0080a264 l     F .text	000000fc __sprint_r.part.0
00810f70 l     O .rodata	00000010 blanks.4348
00810f60 l     O .rodata	00000010 zeroes.4349
0080b7f0 l     F .text	000000bc __sbprintf
00000000 l    df *ABS*	00000000 writer.c
00000000 l    df *ABS*	00000000 closer.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fclose.c
00000000 l    df *ABS*	00000000 fputwc.c
00000000 l    df *ABS*	00000000 fstatr.c
00000000 l    df *ABS*	00000000 int_errno.c
00000000 l    df *ABS*	00000000 isattyr.c
00000000 l    df *ABS*	00000000 lseekr.c
00000000 l    df *ABS*	00000000 readr.c
00000000 l    df *ABS*	00000000 wbuf.c
00000000 l    df *ABS*	00000000 wcrtomb.c
00000000 l    df *ABS*	00000000 wctomb_r.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 lib2-divmod.c
00000000 l    df *ABS*	00000000 divdf3.c
00000000 l    df *ABS*	00000000 eqdf2.c
00000000 l    df *ABS*	00000000 gedf2.c
00000000 l    df *ABS*	00000000 ledf2.c
00000000 l    df *ABS*	00000000 subdf3.c
00000000 l    df *ABS*	00000000 fixdfsi.c
00000000 l    df *ABS*	00000000 floatsidf.c
00000000 l    df *ABS*	00000000 alt_close.c
0080e3dc l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_dev.c
0080e4e8 l     F .text	0000002c alt_dev_null_write
00000000 l    df *ABS*	00000000 alt_errno.c
00000000 l    df *ABS*	00000000 alt_fstat.c
0080e514 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_isatty.c
0080e600 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_load.c
0080e6e0 l     F .text	00000068 alt_load_section
00000000 l    df *ABS*	00000000 alt_lseek.c
0080e7cc l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_main.c
00000000 l    df *ABS*	00000000 alt_malloc_lock.c
00000000 l    df *ABS*	00000000 alt_putstr.c
00000000 l    df *ABS*	00000000 alt_read.c
0080e9dc l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_release_fd.c
00000000 l    df *ABS*	00000000 alt_sbrk.c
00816a50 l     O .rwdata	00000004 heap_end
00000000 l    df *ABS*	00000000 alt_times.c
0080ec28 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_write.c
0080ecdc l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_sys_init.c
0080ee10 l     F .text	00000034 alt_dev_reg
008159c0 l     O .rwdata	00001060 jtag_uart
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_fd.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_init.c
0080f104 l     F .text	0000020c altera_avalon_jtag_uart_irq
0080f310 l     F .text	000000a0 altera_avalon_jtag_uart_timeout
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_ioctl.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_read.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_write.c
00000000 l    df *ABS*	00000000 altera_avalon_timer_sc.c
0080f948 l     F .text	00000078 alt_avalon_timer_sc_irq
00000000 l    df *ABS*	00000000 alt_alarm_start.c
00000000 l    df *ABS*	00000000 alt_dcache_flush_all.c
00000000 l    df *ABS*	00000000 alt_dev_llist_insert.c
0080fbb0 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_do_ctors.c
00000000 l    df *ABS*	00000000 alt_do_dtors.c
00000000 l    df *ABS*	00000000 alt_icache_flush_all.c
00000000 l    df *ABS*	00000000 alt_iic.c
00000000 l    df *ABS*	00000000 alt_iic_isr_register.c
00000000 l    df *ABS*	00000000 alt_io_redirect.c
00810010 l     F .text	000000c4 alt_open_fd
00000000 l    df *ABS*	00000000 alt_irq_vars.c
00000000 l    df *ABS*	00000000 alt_open.c
00810150 l     F .text	0000003c alt_get_errno
0081018c l     F .text	000000c4 alt_file_locked
00000000 l    df *ABS*	00000000 alt_tick.c
00000000 l    df *ABS*	00000000 altera_nios2_gen2_irq.c
00000000 l    df *ABS*	00000000 alt_find_dev.c
00000000 l    df *ABS*	00000000 alt_find_file.c
00000000 l    df *ABS*	00000000 alt_get_fd.c
00000000 l    df *ABS*	00000000 atexit.c
00000000 l    df *ABS*	00000000 exit.c
00000000 l    df *ABS*	00000000 fputs.c
00000000 l    df *ABS*	00000000 memcmp.c
00000000 l    df *ABS*	00000000 __atexit.c
00000000 l    df *ABS*	00000000 __call_atexit.c
00000000 l    df *ABS*	00000000 alt_exit.c
0081c548 g     O .bss	00000004 alt_instruction_exception_handler
00809818 g     F .text	00000074 _mprec_log10
00809904 g     F .text	0000008c __any_on
0080bd8c g     F .text	00000054 _isatty_r
00810e48 g     O .rodata	00000028 __mprec_tinytens
0080e8dc g     F .text	0000007c alt_main
0080a1d4 g     F .text	00000090 strcpy
00802040 g     F .text	000000c0 _puts_r
0081c574 g     O .bss	00000100 alt_irq
0080bde0 g     F .text	00000060 _lseek_r
00816a60 g       *ABS*	00000000 __flash_rwdata_start
0080d72c g     F .text	00000088 .hidden __eqdf2
0081c674 g       *ABS*	00000000 __alt_heap_start
00802004 g     F .text	0000003c printf
0080bff8 g     F .text	0000009c _wcrtomb_r
0080a094 g     F .text	0000005c __sseek
00806f78 g     F .text	00000010 __sinit
00806028 g     F .text	000001a4 fcvtbuf
0080bea0 g     F .text	00000140 __swbuf_r
00807a40 g     F .text	0000007c _setlocale_r
00806de0 g     F .text	00000068 __sfmoreglue
0080e97c g     F .text	00000024 __malloc_unlock
00808710 g     F .text	0000015c memmove
00806f60 g     F .text	00000018 _cleanup
00808994 g     F .text	000000a8 _Balloc
0080e9a0 g     F .text	0000003c alt_putstr
0080d7b4 g     F .text	000000dc .hidden __gtdf2
00810548 g     F .text	00000024 altera_nios2_gen2_irq_init
00800000 g     F .entry	0000000c __reset
0080ec64 g     F .text	00000078 times
00800020 g       *ABS*	00000000 __flash_exceptions_start
0080bd30 g     F .text	0000005c _fstat_r
0081c52c g     O .bss	00000004 errno
0080a010 g     F .text	00000008 __seofread
0081c534 g     O .bss	00000004 alt_argv
0081ea20 g       *ABS*	00000000 _gp
00815840 g     O .rwdata	00000180 alt_fd_list
0081056c g     F .text	00000090 alt_find_dev
008085c8 g     F .text	00000148 memcpy
00806c30 g     F .text	0000000c _cleanup_r
0080e300 g     F .text	000000dc .hidden __floatsidf
008100d4 g     F .text	0000007c alt_io_redirect
0080d890 g     F .text	000000f4 .hidden __ltdf2
00810c8c g       *ABS*	00000000 __DTOR_END__
00802100 g     F .text	00000014 puts
008107a8 g     F .text	0000009c alt_exception_cause_generated_bad_addr
00809ef4 g     F .text	00000074 __fpclassifyd
00809774 g     F .text	000000a4 __ratio
0080b7d4 g     F .text	0000001c __vfiprintf_internal
0080f508 g     F .text	0000021c altera_avalon_jtag_uart_read
00801fd4 g     F .text	00000030 _printf_r
0080cd88 g     F .text	00000064 .hidden __udivsi3
0080e63c g     F .text	000000a4 isatty
00810e98 g     O .rodata	000000c8 __mprec_tens
00807abc g     F .text	0000000c __locale_charset
00801f94 g     F .text	00000040 gcvtf
0081c528 g     O .bss	00000004 __malloc_top_pad
00816a28 g     O .rwdata	00000004 __mb_cur_max
00807aec g     F .text	0000000c _localeconv_r
00808da0 g     F .text	0000003c __i2b
008073fc g     F .text	000004bc __sfvwrite_r
00809f68 g     F .text	00000054 _sbrk_r
0080be40 g     F .text	00000060 _read_r
00816a48 g     O .rwdata	00000004 alt_max_fd
0080ba24 g     F .text	000000f0 _fclose_r
00806bf8 g     F .text	00000030 fflush
0081c524 g     O .bss	00000004 __malloc_max_sbrked_mem
00801ae0 g     F .text	00000110 .hidden __extendsfdf2
00800a74 g     F .text	000008ac .hidden __adddf3
0080951c g     F .text	0000010c __b2d
0080c758 g     F .text	00000538 .hidden __umoddi3
0080e808 g     F .text	000000d4 lseek
00816a20 g     O .rwdata	00000004 _global_impure_ptr
00809990 g     F .text	00000564 _realloc_r
0081c674 g       *ABS*	00000000 __bss_end
0080ff20 g     F .text	000000f0 alt_iic_isr_register
00810440 g     F .text	00000108 alt_tick
0080c1e0 g     F .text	00000578 .hidden __udivdi3
0080bc8c g     F .text	00000024 _fputwc_r
00810e70 g     O .rodata	00000028 __mprec_bigtens
00808b84 g     F .text	00000104 __s2b
00801a38 g     F .text	000000a8 .hidden __floatunsidf
0080925c g     F .text	00000060 __mcmp
00806f98 g     F .text	00000018 __fp_lock_all
0080fed4 g     F .text	0000004c alt_ic_irq_enabled
008103a4 g     F .text	0000009c alt_alarm_stop
0081c53c g     O .bss	00000004 alt_irq_active
008000fc g     F .exceptions	000000d4 alt_irq_handler
00815818 g     O .rwdata	00000028 alt_dev_null
0080fb68 g     F .text	00000048 alt_dcache_flush_all
00808c88 g     F .text	00000068 __hi0bits
0080e280 g     F .text	00000080 .hidden __fixdfsi
00816a60 g       *ABS*	00000000 __ram_rwdata_end
00816a40 g     O .rwdata	00000008 alt_dev_list
0080ed18 g     F .text	000000f8 write
00810fac g       *ABS*	00000000 __ram_rodata_end
0080e550 g     F .text	000000b0 fstat
0080d890 g     F .text	000000f4 .hidden __ledf2
00808fd4 g     F .text	00000140 __pow5mult
0080a378 g     F .text	0000145c ___vfiprintf_internal_r
0081c51c g     O .bss	00000004 __nlocale_changed
0080cdec g     F .text	00000058 .hidden __umodsi3
0081c674 g       *ABS*	00000000 end
0080f044 g     F .text	000000c0 altera_avalon_jtag_uart_init
008001d0 g     F .exceptions	00000074 alt_instruction_exception_entry
00810c8c g       *ABS*	00000000 __CTOR_LIST__
01000000 g       *ABS*	00000000 __alt_stack_pointer
00806670 g     F .text	00000310 _dcvt
0080f9c0 g     F .text	0000007c alt_avalon_timer_sc_init
00801d98 g     F .text	00000064 .hidden __clzsi2
0080f724 g     F .text	00000224 altera_avalon_jtag_uart_write
00806f88 g     F .text	00000004 __sfp_lock_acquire
008084e4 g     F .text	000000e4 memchr
008021ac g     F .text	000021f8 ___vfprintf_internal_r
008070ec g     F .text	00000310 _free_r
00807ac8 g     F .text	00000010 __locale_mb_cur_max
00810ad8 g     F .text	00000180 __call_exitprocs
0081c518 g     O .bss	00000004 __mlocale_changed
00816a2c g     O .rwdata	00000004 __malloc_sbrk_base
00800244 g     F .text	0000004c _start
0081c540 g     O .bss	00000004 _alt_tick_rate
0080630c g     F .text	00000364 _gcvt
00809114 g     F .text	00000148 __lshift
0081c544 g     O .bss	00000004 _alt_nticks
0080ea18 g     F .text	000000fc read
0080ee7c g     F .text	00000064 alt_sys_init
008109c0 g     F .text	00000118 __register_exitproc
00808ddc g     F .text	000001f8 __multiply
0080f3b0 g     F .text	00000068 altera_avalon_jtag_uart_close
00810fac g     O .rwdata	00003fc8 cosine
00810fac g       *ABS*	00000000 __ram_rwdata_start
00810c8c g       *ABS*	00000000 __ram_rodata_start
0081c54c g     O .bss	00000028 __malloc_current_mallinfo
00809628 g     F .text	0000014c __d2b
0080eee0 g     F .text	00000060 altera_avalon_jtag_uart_read_fd
00810704 g     F .text	000000a4 alt_get_fd
0080b90c g     F .text	00000054 _close_r
00800290 g     F .text	000000b8 generateVector
00810944 g     F .text	0000007c memcmp
0080efa0 g     F .text	00000050 altera_avalon_jtag_uart_close_fd
0081c674 g       *ABS*	00000000 __alt_stack_base
0080eff0 g     F .text	00000054 altera_avalon_jtag_uart_ioctl_fd
0080447c g     F .text	00000154 __swsetup_r
0080ce44 g     F .text	000008e8 .hidden __divdf3
00806e48 g     F .text	00000118 __sfp
0080988c g     F .text	00000078 __copybits
00815410 g     O .rwdata	00000408 __malloc_av_
00806f94 g     F .text	00000004 __sinit_lock_release
00801320 g     F .text	00000718 .hidden __muldf3
00809fbc g     F .text	00000054 __sread
008105fc g     F .text	00000108 alt_find_file
0080fbec g     F .text	000000a4 alt_dev_llist_insert
0080e958 g     F .text	00000024 __malloc_lock
0080eb78 g     F .text	000000b0 sbrk
00806b9c g     F .text	0000005c _fflush_r
0080b960 g     F .text	000000c4 _calloc_r
0081c514 g       *ABS*	00000000 __bss_start
0080886c g     F .text	00000128 memset
008004c4 g     F .text	000000e8 main
00801dfc g     F .text	00000024 fcvt
0081c538 g     O .bss	00000004 alt_envp
0081c520 g     O .bss	00000004 __malloc_max_total_mem
0080ef40 g     F .text	00000060 altera_avalon_jtag_uart_write_fd
0080bfe0 g     F .text	00000018 __swbuf
008061cc g     F .text	00000140 ecvtbuf
0080a0f0 g     F .text	00000008 __sclose
01000000 g       *ABS*	00000000 __alt_heap_limit
0080bb14 g     F .text	00000014 fclose
00801bf0 g     F .text	000001a8 .hidden __truncdfsf2
008047d0 g     F .text	00001688 _dtoa_r
00807cd8 g     F .text	0000080c _malloc_r
0080c154 g     F .text	00000030 __ascii_wctomb
00816a4c g     O .rwdata	00000004 alt_errno
00801e9c g     F .text	00000058 ecvtf
008078b8 g     F .text	000000c4 _fwalk
0080cc90 g     F .text	00000084 .hidden __divsi3
00806fc8 g     F .text	00000124 _malloc_trim_r
00810c8c g       *ABS*	00000000 __CTOR_END__
0080a0f8 g     F .text	000000dc strcmp
00810c8c g       *ABS*	00000000 __flash_rodata_start
00810c8c g       *ABS*	00000000 __DTOR_LIST__
0080d72c g     F .text	00000088 .hidden __nedf2
0080ee44 g     F .text	00000038 alt_irq_init
0080eb14 g     F .text	00000064 alt_release_fd
00810cb4 g     O .rodata	00000100 .hidden __clz_tab
0081c514 g     O .bss	00000004 _PathLocale
00810844 g     F .text	00000014 atexit
00800348 g     F .text	0000017c sumVector
0080b8ac g     F .text	00000060 _write_r
00807af8 g     F .text	00000018 setlocale
00816a24 g     O .rwdata	00000004 _impure_ptr
0081c530 g     O .bss	00000004 alt_argc
00806980 g     F .text	0000021c __sflush_r
0080fcf0 g     F .text	00000060 _do_dtors
00807ae4 g     F .text	00000008 __locale_cjk_lang
00800020 g       .exceptions	00000000 alt_irq_entry
008094b8 g     F .text	00000064 __ulp
00806fb0 g     F .text	00000018 __fp_unlock_all
00801e78 g     F .text	00000024 ecvt
00816a38 g     O .rwdata	00000008 alt_fs_list
00800020 g       *ABS*	00000000 __ram_exceptions_start
00807b10 g     F .text	0000000c localeconv
0080fd70 g     F .text	00000050 alt_ic_isr_register
00816a60 g       *ABS*	00000000 _edata
0081c674 g       *ABS*	00000000 _end
0080bb28 g     F .text	00000164 __fputwc
00800244 g       *ABS*	00000000 __ram_exceptions_end
0080f418 g     F .text	000000f0 altera_avalon_jtag_uart_ioctl
00810890 g     F .text	0000009c _fputs_r
0080fe48 g     F .text	0000008c alt_ic_irq_disable
0080a018 g     F .text	0000007c __swrite
00816a30 g     O .rwdata	00000004 __malloc_trim_threshold
00801e20 g     F .text	00000058 fcvtf
00807ad8 g     F .text	0000000c __locale_msgcharset
00810858 g     F .text	00000038 exit
0080797c g     F .text	000000c4 _fwalk_reent
008092bc g     F .text	000001fc __mdiff
0080cd14 g     F .text	00000074 .hidden __modsi3
01000000 g       *ABS*	00000000 __alt_data_end
00800020 g     F .exceptions	00000000 alt_exception
00806f8c g     F .text	00000004 __sfp_lock_release
00800000 g       *ABS*	00000000 __alt_mem_sdram
00801ef4 g     F .text	000000a0 gcvt
00810c58 g     F .text	00000034 _exit
0080fa3c g     F .text	0000012c alt_alarm_start
00807b1c g     F .text	000001bc __smakebuf_r
00802114 g     F .text	00000098 strlen
00810250 g     F .text	00000154 open
0080d7b4 g     F .text	000000dc .hidden __gedf2
00816a34 g     O .rwdata	00000004 __wctomb
0080a360 g     F .text	00000018 __sprint_r
0080fd50 g     F .text	00000020 alt_icache_flush_all
0081092c g     F .text	00000018 fputs
00816a54 g     O .rwdata	00000004 alt_priority_mask
0080fdc0 g     F .text	00000088 alt_ic_irq_enable
008043a4 g     F .text	0000001c __vfprintf_internal
0080c184 g     F .text	0000005c _wctomb_r
0080d984 g     F .text	000008fc .hidden __subdf3
00808cf0 g     F .text	000000b0 __lo0bits
00816a58 g     O .rwdata	00000008 alt_alarm_list
0080fc90 g     F .text	00000060 _do_ctors
0080c094 g     F .text	000000c0 wcrtomb
0080e418 g     F .text	000000d0 close
008005ac g     F .text	000004c8 .hidden __addsf3
0080e748 g     F .text	00000084 alt_load
0080bcb0 g     F .text	00000080 fputwc
00806f90 g     F .text	00000004 __sinit_lock_acquire
00808a64 g     F .text	00000120 __multadd
00808a3c g     F .text	00000028 _Bfree



Disassembly of section .entry:

00800000 <__reset>:
 * Jump to the _start entry point in the .text section if reset code
 * is allowed or if optimizing for RTL simulation.
 */
#if defined(ALT_ALLOW_CODE_AT_RESET) || defined(ALT_SIM_OPTIMIZE)
    /* Jump to the _start entry point in the .text section. */
    movhi r1, %hi(_start)
  800000:	00402034 	movhi	at,128
    ori r1, r1, %lo(_start)
  800004:	08409114 	ori	at,at,580
    jmp r1
  800008:	0800683a 	jmp	at
	...

Disassembly of section .exceptions:

00800020 <alt_exception>:

#else /* ALT_EXCEPTION_STACK disabled */
        /* 
         * Reserve space on normal stack for registers about to be pushed.
         */
        addi  sp, sp, -76
  800020:	deffed04 	addi	sp,sp,-76
         * documentation for details).
         *
         * Leave a gap in the stack frame at 4(sp) for the muldiv handler to
         * store zero into.
         */
        stw   ra,  0(sp)
  800024:	dfc00015 	stw	ra,0(sp)
        stw   r1,   8(sp)
  800028:	d8400215 	stw	at,8(sp)
        stw   r2,  12(sp)
  80002c:	d8800315 	stw	r2,12(sp)
        stw   r3,  16(sp)
  800030:	d8c00415 	stw	r3,16(sp)
        stw   r4,  20(sp)
  800034:	d9000515 	stw	r4,20(sp)
        stw   r5,  24(sp)
  800038:	d9400615 	stw	r5,24(sp)
        stw   r6,  28(sp)
  80003c:	d9800715 	stw	r6,28(sp)
        stw   r7,  32(sp)
  800040:	d9c00815 	stw	r7,32(sp)
        rdctl r5, estatus   /* Read early to avoid usage stall */
  800044:	000b307a 	rdctl	r5,estatus
        stw   r8,  36(sp)
  800048:	da000915 	stw	r8,36(sp)
        stw   r9,  40(sp)
  80004c:	da400a15 	stw	r9,40(sp)
        stw   r10, 44(sp)
  800050:	da800b15 	stw	r10,44(sp)
        stw   r11, 48(sp)
  800054:	dac00c15 	stw	r11,48(sp)
        stw   r12, 52(sp)
  800058:	db000d15 	stw	r12,52(sp)
        stw   r13, 56(sp)
  80005c:	db400e15 	stw	r13,56(sp)
        stw   r14, 60(sp)
  800060:	db800f15 	stw	r14,60(sp)
        stw   r15, 64(sp)
  800064:	dbc01015 	stw	r15,64(sp)
        /*
         * ea-4 contains the address of the instruction being executed
         * when the exception occured. For interrupt exceptions, we will
         * will be re-issue the isntruction. Store it in 72(sp)
         */
        stw   r5,  68(sp)  /* estatus */
  800068:	d9401115 	stw	r5,68(sp)
        addi  r15, ea, -4  /* instruction that caused exception */
  80006c:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
  800070:	dbc01215 	stw	r15,72(sp)
#else
        /*
         * Test to see if the exception was a software exception or caused 
         * by an external interrupt, and vector accordingly.
         */
        rdctl r4, ipending
  800074:	0009313a 	rdctl	r4,ipending
        andi  r2, r5, 1
  800078:	2880004c 	andi	r2,r5,1
        beq   r2, zero, .Lnot_irq
  80007c:	10000326 	beq	r2,zero,80008c <alt_exception+0x6c>
        beq   r4, zero, .Lnot_irq
  800080:	20000226 	beq	r4,zero,80008c <alt_exception+0x6c>
        /*
         * Now that all necessary registers have been preserved, call 
         * alt_irq_handler() to process the interrupts.
         */

        call alt_irq_handler
  800084:	08000fc0 	call	8000fc <alt_irq_handler>

        .section .exceptions.irqreturn, "xa"

        br    .Lexception_exit
  800088:	00000706 	br	8000a8 <alt_exception+0x88>
         * upon completion, so we write ea (address of instruction *after*
         * the one where the exception occured) into 72(sp). The actual
         * instruction that caused the exception is written in r2, which these
         * handlers will utilize.
         */
        stw ea, 72(sp) /* EA is PC+4 so will skip over instruction causing exception */
  80008c:	df401215 	stw	ea,72(sp)
.Lunknown_16bit:
        addi.n r4, r4, 2 /* Need PC+2 to skip over instruction causing exception */
        stw r4, 72(sp)

#else /* CDX is not Enabled and all instructions are 32bits */
        ldw r2, -4(ea) /* Instruction value that caused exception */
  800090:	e8bfff17 	ldw	r2,-4(ea)
         * debugger is present) or go into an infinite loop since the
         * handling behavior is undefined; in that case we will not return here.
         */

        /* Load exception-causing address as first argument (r4) */
        addi   r4, ea, -4
  800094:	e93fff04 	addi	r4,ea,-4

        /* Call the instruction-exception entry */
        call   alt_instruction_exception_entry
  800098:	08001d00 	call	8001d0 <alt_instruction_exception_entry>
         * instruction
         *
         * Return code was 0: Skip. The instruction after the exception is
         * already stored in 72(sp).
         */
        bne   r2, r0, .Lexception_exit
  80009c:	1000021e 	bne	r2,zero,8000a8 <alt_exception+0x88>

        /*
         * Otherwise, modify 72(sp) to re-issue the instruction that caused the
         * exception.
         */
        addi  r15, ea, -4  /* instruction that caused exception */
  8000a0:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
  8000a4:	dbc01215 	stw	r15,72(sp)
        /* 
         * Restore the saved registers, so that all general purpose registers 
         * have been restored to their state at the time the interrupt occured.
         */

        ldw   r5,  68(sp)
  8000a8:	d9401117 	ldw	r5,68(sp)
        ldw   ea,  72(sp)  /* This becomes the PC once eret is executed */
  8000ac:	df401217 	ldw	ea,72(sp)
        ldw   ra,   0(sp)
  8000b0:	dfc00017 	ldw	ra,0(sp)

        wrctl estatus, r5
  8000b4:	2801707a 	wrctl	estatus,r5

        ldw   r1,   8(sp)
  8000b8:	d8400217 	ldw	at,8(sp)
        ldw   r2,  12(sp)
  8000bc:	d8800317 	ldw	r2,12(sp)
        ldw   r3,  16(sp)
  8000c0:	d8c00417 	ldw	r3,16(sp)
        ldw   r4,  20(sp)
  8000c4:	d9000517 	ldw	r4,20(sp)
        ldw   r5,  24(sp)
  8000c8:	d9400617 	ldw	r5,24(sp)
        ldw   r6,  28(sp)
  8000cc:	d9800717 	ldw	r6,28(sp)
        ldw   r7,  32(sp)
  8000d0:	d9c00817 	ldw	r7,32(sp)

#if defined(ALT_EXCEPTION_STACK) && defined(ALT_STACK_CHECK)
        ldw   et, %gprel(alt_exception_old_stack_limit)(gp)
#endif

        ldw   r8,  36(sp)
  8000d4:	da000917 	ldw	r8,36(sp)
        ldw   r9,  40(sp)
  8000d8:	da400a17 	ldw	r9,40(sp)
        ldw   r10, 44(sp)
  8000dc:	da800b17 	ldw	r10,44(sp)
        ldw   r11, 48(sp)
  8000e0:	dac00c17 	ldw	r11,48(sp)
        ldw   r12, 52(sp)
  8000e4:	db000d17 	ldw	r12,52(sp)
        ldw   r13, 56(sp)
  8000e8:	db400e17 	ldw	r13,56(sp)
        ldw   r14, 60(sp)
  8000ec:	db800f17 	ldw	r14,60(sp)
        ldw   r15, 64(sp)
  8000f0:	dbc01017 	ldw	r15,64(sp)
        stw   et, %gprel(alt_stack_limit_value)(gp)
        stw   zero, %gprel(alt_exception_old_stack_limit)(gp)
#endif /* ALT_STACK_CHECK */
        ldw   sp,  76(sp)
#else /* ALT_EXCEPTION_STACK disabled */
        addi  sp, sp, 76
  8000f4:	dec01304 	addi	sp,sp,76

        /*
         * Return to the interrupted instruction.
         */

        eret
  8000f8:	ef80083a 	eret

008000fc <alt_irq_handler>:
 * instruction is present if the macro ALT_CI_INTERRUPT_VECTOR defined.
 */

void alt_irq_handler (void) __attribute__ ((section (".exceptions")));
void alt_irq_handler (void)
{
  8000fc:	defff904 	addi	sp,sp,-28
  800100:	dfc00615 	stw	ra,24(sp)
  800104:	df000515 	stw	fp,20(sp)
  800108:	df000504 	addi	fp,sp,20
  
  /*
   * Notify the operating system that we are at interrupt level.
   */ 
  
  ALT_OS_INT_ENTER();
  80010c:	0001883a 	nop
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
  800110:	0005313a 	rdctl	r2,ipending
  800114:	e0bffe15 	stw	r2,-8(fp)

  return active;
  800118:	e0bffe17 	ldw	r2,-8(fp)
   * Consider the case where the high priority interupt is asserted during
   * the interrupt entry sequence for a lower priority interrupt to see why
   * this is the case.
   */

  active = alt_irq_pending ();
  80011c:	e0bffb15 	stw	r2,-20(fp)

  do
  {
    i = 0;
  800120:	e03ffd15 	stw	zero,-12(fp)
    mask = 1;
  800124:	00800044 	movi	r2,1
  800128:	e0bffc15 	stw	r2,-16(fp)
     * called to clear the interrupt condition.
     */

    do
    {
      if (active & mask)
  80012c:	e0fffb17 	ldw	r3,-20(fp)
  800130:	e0bffc17 	ldw	r2,-16(fp)
  800134:	1884703a 	and	r2,r3,r2
  800138:	10001426 	beq	r2,zero,80018c <alt_irq_handler+0x90>
      { 
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
        alt_irq[i].handler(alt_irq[i].context); 
  80013c:	008020b4 	movhi	r2,130
  800140:	10b15d04 	addi	r2,r2,-14988
  800144:	e0fffd17 	ldw	r3,-12(fp)
  800148:	180690fa 	slli	r3,r3,3
  80014c:	10c5883a 	add	r2,r2,r3
  800150:	10c00017 	ldw	r3,0(r2)
  800154:	008020b4 	movhi	r2,130
  800158:	10b15d04 	addi	r2,r2,-14988
  80015c:	e13ffd17 	ldw	r4,-12(fp)
  800160:	200890fa 	slli	r4,r4,3
  800164:	1105883a 	add	r2,r2,r4
  800168:	10800104 	addi	r2,r2,4
  80016c:	10800017 	ldw	r2,0(r2)
  800170:	1009883a 	mov	r4,r2
  800174:	183ee83a 	callr	r3
#else
        alt_irq[i].handler(alt_irq[i].context, i); 
#endif
        break;
  800178:	0001883a 	nop
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
  80017c:	0005313a 	rdctl	r2,ipending
  800180:	e0bfff15 	stw	r2,-4(fp)

  return active;
  800184:	e0bfff17 	ldw	r2,-4(fp)
  800188:	00000706 	br	8001a8 <alt_irq_handler+0xac>
      }
      mask <<= 1;
  80018c:	e0bffc17 	ldw	r2,-16(fp)
  800190:	1085883a 	add	r2,r2,r2
  800194:	e0bffc15 	stw	r2,-16(fp)
      i++;
  800198:	e0bffd17 	ldw	r2,-12(fp)
  80019c:	10800044 	addi	r2,r2,1
  8001a0:	e0bffd15 	stw	r2,-12(fp)

    } while (1);
  8001a4:	003fe106 	br	80012c <__alt_data_end+0xff80012c>

    active = alt_irq_pending ();
  8001a8:	e0bffb15 	stw	r2,-20(fp)
    
  } while (active);
  8001ac:	e0bffb17 	ldw	r2,-20(fp)
  8001b0:	103fdb1e 	bne	r2,zero,800120 <__alt_data_end+0xff800120>

  /*
   * Notify the operating system that interrupt processing is complete.
   */ 

  ALT_OS_INT_EXIT();
  8001b4:	0001883a 	nop
}
  8001b8:	0001883a 	nop
  8001bc:	e037883a 	mov	sp,fp
  8001c0:	dfc00117 	ldw	ra,4(sp)
  8001c4:	df000017 	ldw	fp,0(sp)
  8001c8:	dec00204 	addi	sp,sp,8
  8001cc:	f800283a 	ret

008001d0 <alt_instruction_exception_entry>:
 * that handler if it has been registered. Absent a handler, it will
 * break break or hang as discussed below.
 */
int 
alt_instruction_exception_entry (alt_u32 exception_pc)
{
  8001d0:	defffb04 	addi	sp,sp,-20
  8001d4:	dfc00415 	stw	ra,16(sp)
  8001d8:	df000315 	stw	fp,12(sp)
  8001dc:	df000304 	addi	fp,sp,12
  8001e0:	e13fff15 	stw	r4,-4(fp)
 * NIOS2_EXCEPTION_CAUSE_NOT_PRESENT. Your handling routine should
 * check the validity of the cause argument before proceeding.
 */
#ifdef NIOS2_HAS_EXTRA_EXCEPTION_INFO
  /* Get exception cause & "badaddr" */
  NIOS2_READ_EXCEPTION(cause);
  8001e4:	000531fa 	rdctl	r2,exception
  8001e8:	e0bffd15 	stw	r2,-12(fp)
  cause = ( (cause & NIOS2_EXCEPTION_REG_CAUSE_MASK) >>
  8001ec:	e0bffd17 	ldw	r2,-12(fp)
  8001f0:	10801f0c 	andi	r2,r2,124
  8001f4:	1004d0ba 	srli	r2,r2,2
  8001f8:	e0bffd15 	stw	r2,-12(fp)
              NIOS2_EXCEPTION_REG_CAUSE_OFST );

  NIOS2_READ_BADADDR(badaddr);
  8001fc:	0005333a 	rdctl	r2,badaddr
  800200:	e0bffe15 	stw	r2,-8(fp)
#else
  cause = NIOS2_EXCEPTION_CAUSE_NOT_PRESENT;
  badaddr = 0;
#endif /* NIOS2_HAS_EXTRA_EXCEPTION_INFO */

  if(alt_instruction_exception_handler) {
  800204:	d0b6ca17 	ldw	r2,-9432(gp)
  800208:	10000726 	beq	r2,zero,800228 <alt_instruction_exception_entry+0x58>
     * Call handler. Its return value indicates whether the exception-causing
     * instruction should be re-issued. The code that called us,
     * alt_eceptions_entry.S, will look at this value and adjust the ea
     * register as necessary
     */
    return alt_instruction_exception_handler(cause, exception_pc, badaddr);
  80020c:	d0b6ca17 	ldw	r2,-9432(gp)
  800210:	e0fffd17 	ldw	r3,-12(fp)
  800214:	e1bffe17 	ldw	r6,-8(fp)
  800218:	e17fff17 	ldw	r5,-4(fp)
  80021c:	1809883a 	mov	r4,r3
  800220:	103ee83a 	callr	r2
  800224:	00000206 	br	800230 <alt_instruction_exception_entry+0x60>
   *    (a peripheral which negates its interrupt output before its
   *    interrupt handler has been executed will cause spurious interrupts)
   */
  else {
#ifdef NIOS2_HAS_DEBUG_STUB
    NIOS2_BREAK();
  800228:	003da03a 	break	0
      ;
#endif /* NIOS2_HAS_DEBUG_STUB */
  }

  /* We should not get here. Remove compiler warning. */
  return NIOS2_EXCEPTION_RETURN_REISSUE_INST;
  80022c:	0005883a 	mov	r2,zero
}
  800230:	e037883a 	mov	sp,fp
  800234:	dfc00117 	ldw	ra,4(sp)
  800238:	df000017 	ldw	fp,0(sp)
  80023c:	dec00204 	addi	sp,sp,8
  800240:	f800283a 	ret

Disassembly of section .text:

00800244 <_start>:

    /* Assume the data cache size is always a power of two. */
#if NIOS2_DCACHE_SIZE > 0x8000
    movhi r2, %hi(NIOS2_DCACHE_SIZE)
#else
    movui r2, NIOS2_DCACHE_SIZE
  800244:	00820014 	movui	r2,2048
#endif

0:
    initd 0(r2)
  800248:	10000033 	initd	0(r2)
#ifdef NIOS2_ECC_PRESENT
    addi r2, r2, -4
#else
    addi r2, r2, -NIOS2_DCACHE_LINE_SIZE
  80024c:	10bff804 	addi	r2,r2,-32
#endif
    bgt r2, zero, 0b
  800250:	00bffd16 	blt	zero,r2,800248 <__alt_data_end+0xff800248>

    /*
     * Now that the caches are initialized, set up the stack pointer and global pointer.
     * The values provided by the linker are assumed to be correctly aligned.
     */
    movhi sp, %hi(__alt_stack_pointer)
  800254:	06c04034 	movhi	sp,256
    ori sp, sp, %lo(__alt_stack_pointer)
  800258:	dec00014 	ori	sp,sp,0
    movhi gp, %hi(_gp)
  80025c:	06802074 	movhi	gp,129
    ori gp, gp, %lo(_gp)
  800260:	d6ba8814 	ori	gp,gp,59936
 */
#ifndef ALT_SIM_OPTIMIZE
    /* Log that the BSS is about to be cleared. */
    ALT_LOG_PUTS(alt_log_msg_bss)

    movhi r2, %hi(__bss_start)
  800264:	00802074 	movhi	r2,129
    ori r2, r2, %lo(__bss_start)
  800268:	10b14514 	ori	r2,r2,50452

    movhi r3, %hi(__bss_end)
  80026c:	00c02074 	movhi	r3,129
    ori r3, r3, %lo(__bss_end)
  800270:	18f19d14 	ori	r3,r3,50804

    beq r2, r3, 1f
  800274:	10c00326 	beq	r2,r3,800284 <_start+0x40>

0:
    stw zero, (r2)
  800278:	10000015 	stw	zero,0(r2)
    addi r2, r2, 4
  80027c:	10800104 	addi	r2,r2,4
    bltu r2, r3, 0b
  800280:	10fffd36 	bltu	r2,r3,800278 <__alt_data_end+0xff800278>
     * section aren't defined until alt_load() has been called).
     */
    mov   et, zero
#endif

    call alt_load
  800284:	080e7480 	call	80e748 <alt_load>

    /* Log that alt_main is about to be called. */
    ALT_LOG_PUTS(alt_log_msg_alt_main)

    /* Call the C entry point. It should never return. */
    call alt_main
  800288:	080e8dc0 	call	80e8dc <alt_main>

0080028c <alt_after_alt_main>:

    /* Wait in infinite loop in case alt_main does return. */
alt_after_alt_main:
    br alt_after_alt_main
  80028c:	003fff06 	br	80028c <__alt_data_end+0xff80028c>

00800290 <generateVector>:
//#define step 5
//#define N 261121
double cosine[2041] = {};
// Generates the vector x and stores it in the memory
void generateVector(float x[N])
{
  800290:	defffb04 	addi	sp,sp,-20
  800294:	dfc00415 	stw	ra,16(sp)
  800298:	df000315 	stw	fp,12(sp)
  80029c:	dc000215 	stw	r16,8(sp)
  8002a0:	df000304 	addi	fp,sp,12
  8002a4:	e13ffe15 	stw	r4,-8(fp)
	int i;
	x[0] = 0;
  8002a8:	e0bffe17 	ldw	r2,-8(fp)
  8002ac:	10000015 	stw	zero,0(r2)
	for (i=1; i<N; i++)
  8002b0:	00800044 	movi	r2,1
  8002b4:	e0bffd15 	stw	r2,-12(fp)
  8002b8:	00001906 	br	800320 <generateVector+0x90>
		x[i] = x[i-1] + step;
  8002bc:	e0bffd17 	ldw	r2,-12(fp)
  8002c0:	1085883a 	add	r2,r2,r2
  8002c4:	1085883a 	add	r2,r2,r2
  8002c8:	1007883a 	mov	r3,r2
  8002cc:	e0bffe17 	ldw	r2,-8(fp)
  8002d0:	10e1883a 	add	r16,r2,r3
  8002d4:	e0fffd17 	ldw	r3,-12(fp)
  8002d8:	00900034 	movhi	r2,16384
  8002dc:	10bfffc4 	addi	r2,r2,-1
  8002e0:	1885883a 	add	r2,r3,r2
  8002e4:	1085883a 	add	r2,r2,r2
  8002e8:	1085883a 	add	r2,r2,r2
  8002ec:	1007883a 	mov	r3,r2
  8002f0:	e0bffe17 	ldw	r2,-8(fp)
  8002f4:	10c5883a 	add	r2,r2,r3
  8002f8:	10c00017 	ldw	r3,0(r2)
  8002fc:	014f8034 	movhi	r5,15872
  800300:	1809883a 	mov	r4,r3
  800304:	08005ac0 	call	8005ac <__addsf3>
  800308:	1007883a 	mov	r3,r2
  80030c:	1805883a 	mov	r2,r3
  800310:	80800015 	stw	r2,0(r16)
// Generates the vector x and stores it in the memory
void generateVector(float x[N])
{
	int i;
	x[0] = 0;
	for (i=1; i<N; i++)
  800314:	e0bffd17 	ldw	r2,-12(fp)
  800318:	10800044 	addi	r2,r2,1
  80031c:	e0bffd15 	stw	r2,-12(fp)
  800320:	e0bffd17 	ldw	r2,-12(fp)
  800324:	1081fe50 	cmplti	r2,r2,2041
  800328:	103fe41e 	bne	r2,zero,8002bc <__alt_data_end+0xff8002bc>
		x[i] = x[i-1] + step;
}
  80032c:	0001883a 	nop
  800330:	e6ffff04 	addi	sp,fp,-4
  800334:	dfc00217 	ldw	ra,8(sp)
  800338:	df000117 	ldw	fp,4(sp)
  80033c:	dc000017 	ldw	r16,0(sp)
  800340:	dec00304 	addi	sp,sp,12
  800344:	f800283a 	ret

00800348 <sumVector>:
float sumVector(float x[], int M)
{
  800348:	defff704 	addi	sp,sp,-36
  80034c:	dfc00815 	stw	ra,32(sp)
  800350:	df000715 	stw	fp,28(sp)
  800354:	dc400615 	stw	r17,24(sp)
  800358:	dc000515 	stw	r16,20(sp)
  80035c:	df000704 	addi	fp,sp,28
  800360:	e13ffc15 	stw	r4,-16(fp)
  800364:	e17ffd15 	stw	r5,-12(fp)
 double y = 0;
  800368:	e03ff915 	stw	zero,-28(fp)
  80036c:	e03ffa15 	stw	zero,-24(fp)
 int j;
 for(j=0;j<M;j++){
  800370:	e03ffb15 	stw	zero,-20(fp)
  800374:	00004406 	br	800488 <sumVector+0x140>
	 y = y + x[j] * (0.5 + x[j] * cosine[j]);}
  800378:	e0bffb17 	ldw	r2,-20(fp)
  80037c:	1085883a 	add	r2,r2,r2
  800380:	1085883a 	add	r2,r2,r2
  800384:	1007883a 	mov	r3,r2
  800388:	e0bffc17 	ldw	r2,-16(fp)
  80038c:	10c5883a 	add	r2,r2,r3
  800390:	10c00017 	ldw	r3,0(r2)
  800394:	1809883a 	mov	r4,r3
  800398:	0801ae00 	call	801ae0 <__extendsfdf2>
  80039c:	1021883a 	mov	r16,r2
  8003a0:	1823883a 	mov	r17,r3
  8003a4:	e0bffb17 	ldw	r2,-20(fp)
  8003a8:	1085883a 	add	r2,r2,r2
  8003ac:	1085883a 	add	r2,r2,r2
  8003b0:	1007883a 	mov	r3,r2
  8003b4:	e0bffc17 	ldw	r2,-16(fp)
  8003b8:	10c5883a 	add	r2,r2,r3
  8003bc:	10c00017 	ldw	r3,0(r2)
  8003c0:	1809883a 	mov	r4,r3
  8003c4:	0801ae00 	call	801ae0 <__extendsfdf2>
  8003c8:	1011883a 	mov	r8,r2
  8003cc:	1813883a 	mov	r9,r3
  8003d0:	00802074 	movhi	r2,129
  8003d4:	1083eb04 	addi	r2,r2,4012
  8003d8:	e0fffb17 	ldw	r3,-20(fp)
  8003dc:	180690fa 	slli	r3,r3,3
  8003e0:	10c9883a 	add	r4,r2,r3
  8003e4:	20800017 	ldw	r2,0(r4)
  8003e8:	20c00117 	ldw	r3,4(r4)
  8003ec:	100d883a 	mov	r6,r2
  8003f0:	180f883a 	mov	r7,r3
  8003f4:	4009883a 	mov	r4,r8
  8003f8:	480b883a 	mov	r5,r9
  8003fc:	08013200 	call	801320 <__muldf3>
  800400:	1009883a 	mov	r4,r2
  800404:	180b883a 	mov	r5,r3
  800408:	2005883a 	mov	r2,r4
  80040c:	2807883a 	mov	r3,r5
  800410:	000d883a 	mov	r6,zero
  800414:	01cff834 	movhi	r7,16352
  800418:	1009883a 	mov	r4,r2
  80041c:	180b883a 	mov	r5,r3
  800420:	0800a740 	call	800a74 <__adddf3>
  800424:	1009883a 	mov	r4,r2
  800428:	180b883a 	mov	r5,r3
  80042c:	2005883a 	mov	r2,r4
  800430:	2807883a 	mov	r3,r5
  800434:	100d883a 	mov	r6,r2
  800438:	180f883a 	mov	r7,r3
  80043c:	8009883a 	mov	r4,r16
  800440:	880b883a 	mov	r5,r17
  800444:	08013200 	call	801320 <__muldf3>
  800448:	1009883a 	mov	r4,r2
  80044c:	180b883a 	mov	r5,r3
  800450:	2005883a 	mov	r2,r4
  800454:	2807883a 	mov	r3,r5
  800458:	100d883a 	mov	r6,r2
  80045c:	180f883a 	mov	r7,r3
  800460:	e13ff917 	ldw	r4,-28(fp)
  800464:	e17ffa17 	ldw	r5,-24(fp)
  800468:	0800a740 	call	800a74 <__adddf3>
  80046c:	1009883a 	mov	r4,r2
  800470:	180b883a 	mov	r5,r3
  800474:	e13ff915 	stw	r4,-28(fp)
  800478:	e17ffa15 	stw	r5,-24(fp)
}
float sumVector(float x[], int M)
{
 double y = 0;
 int j;
 for(j=0;j<M;j++){
  80047c:	e0bffb17 	ldw	r2,-20(fp)
  800480:	10800044 	addi	r2,r2,1
  800484:	e0bffb15 	stw	r2,-20(fp)
  800488:	e0fffb17 	ldw	r3,-20(fp)
  80048c:	e0bffd17 	ldw	r2,-12(fp)
  800490:	18bfb916 	blt	r3,r2,800378 <__alt_data_end+0xff800378>
	 y = y + x[j] * (0.5 + x[j] * cosine[j]);}
 return y;
  800494:	e13ff917 	ldw	r4,-28(fp)
  800498:	e17ffa17 	ldw	r5,-24(fp)
  80049c:	0801bf00 	call	801bf0 <__truncdfsf2>
  8004a0:	1007883a 	mov	r3,r2
  8004a4:	1805883a 	mov	r2,r3
}
  8004a8:	e6fffe04 	addi	sp,fp,-8
  8004ac:	dfc00317 	ldw	ra,12(sp)
  8004b0:	df000217 	ldw	fp,8(sp)
  8004b4:	dc400117 	ldw	r17,4(sp)
  8004b8:	dc000017 	ldw	r16,0(sp)
  8004bc:	dec00404 	addi	sp,sp,16
  8004c0:	f800283a 	ret

008004c4 <main>:
int main()
{
  8004c4:	def7f504 	addi	sp,sp,-8236
  8004c8:	dfc80a15 	stw	ra,8232(sp)
  8004cc:	df080915 	stw	fp,8228(sp)
  8004d0:	df080904 	addi	fp,sp,8228
	printf("Task 3!\n");
  8004d4:	01002074 	movhi	r4,129
  8004d8:	21032304 	addi	r4,r4,3212
  8004dc:	08021000 	call	802100 <puts>
	// Define input vector
	float x[N];
	// Returned result
	float y;
	generateVector(x);
  8004e0:	e0b7fa04 	addi	r2,fp,-8216
  8004e4:	1009883a 	mov	r4,r2
  8004e8:	08002900 	call	800290 <generateVector>
	// The following is used for timing
	char buf[50];
	clock_t exec_t1, exec_t2;
	exec_t1 = times(NULL); // get system time before starting the process
  8004ec:	0009883a 	mov	r4,zero
  8004f0:	080ec640 	call	80ec64 <times>
  8004f4:	e0b7f715 	stw	r2,-8228(fp)
	// The code that you want to time goes here
	y = sumVector(x, N);
  8004f8:	e0b7fa04 	addi	r2,fp,-8216
  8004fc:	0141fe44 	movi	r5,2041
  800500:	1009883a 	mov	r4,r2
  800504:	08003480 	call	800348 <sumVector>
  800508:	e0b7f815 	stw	r2,-8224(fp)
	// till here
	exec_t2 = times(NULL); // get system time after finishing the process
  80050c:	0009883a 	mov	r4,zero
  800510:	080ec640 	call	80ec64 <times>
  800514:	e0b7f915 	stw	r2,-8220(fp)
	gcvt((exec_t2 - exec_t1), 10, buf);
  800518:	e0f7f917 	ldw	r3,-8220(fp)
  80051c:	e0b7f717 	ldw	r2,-8228(fp)
  800520:	1885c83a 	sub	r2,r3,r2
  800524:	1009883a 	mov	r4,r2
  800528:	0801a380 	call	801a38 <__floatunsidf>
  80052c:	1011883a 	mov	r8,r2
  800530:	1813883a 	mov	r9,r3
  800534:	e0bff304 	addi	r2,fp,-52
  800538:	100f883a 	mov	r7,r2
  80053c:	01800284 	movi	r6,10
  800540:	4009883a 	mov	r4,r8
  800544:	480b883a 	mov	r5,r9
  800548:	0801ef40 	call	801ef4 <gcvt>
	alt_putstr(" proc time = ");
  80054c:	01002074 	movhi	r4,129
  800550:	21032504 	addi	r4,r4,3220
  800554:	080e9a00 	call	80e9a0 <alt_putstr>
	alt_putstr(buf);
  800558:	e0bff304 	addi	r2,fp,-52
  80055c:	1009883a 	mov	r4,r2
  800560:	080e9a00 	call	80e9a0 <alt_putstr>
	alt_putstr(" ticks \n");
  800564:	01002074 	movhi	r4,129
  800568:	21032904 	addi	r4,r4,3236
  80056c:	080e9a00 	call	80e9a0 <alt_putstr>

	printf("%f\n",y);
  800570:	e137f817 	ldw	r4,-8224(fp)
  800574:	0801ae00 	call	801ae0 <__extendsfdf2>
  800578:	100d883a 	mov	r6,r2
  80057c:	180f883a 	mov	r7,r3
  800580:	300b883a 	mov	r5,r6
  800584:	380d883a 	mov	r6,r7
  800588:	01002074 	movhi	r4,129
  80058c:	21032c04 	addi	r4,r4,3248
  800590:	08020040 	call	802004 <printf>
	return 0;
  800594:	0005883a 	mov	r2,zero
}
  800598:	e037883a 	mov	sp,fp
  80059c:	dfc00117 	ldw	ra,4(sp)
  8005a0:	df000017 	ldw	fp,0(sp)
  8005a4:	dec00204 	addi	sp,sp,8
  8005a8:	f800283a 	ret

008005ac <__addsf3>:
  8005ac:	defffc04 	addi	sp,sp,-16
  8005b0:	2004d7fa 	srli	r2,r4,31
  8005b4:	280cd5fa 	srli	r6,r5,23
  8005b8:	dc000015 	stw	r16,0(sp)
  8005bc:	00c02034 	movhi	r3,128
  8005c0:	2020d5fa 	srli	r16,r4,23
  8005c4:	280ed7fa 	srli	r7,r5,31
  8005c8:	18ffffc4 	addi	r3,r3,-1
  8005cc:	dc400115 	stw	r17,4(sp)
  8005d0:	1908703a 	and	r4,r3,r4
  8005d4:	194a703a 	and	r5,r3,r5
  8005d8:	dfc00315 	stw	ra,12(sp)
  8005dc:	dc800215 	stw	r18,8(sp)
  8005e0:	14403fcc 	andi	r17,r2,255
  8005e4:	84003fcc 	andi	r16,r16,255
  8005e8:	200890fa 	slli	r4,r4,3
  8005ec:	31803fcc 	andi	r6,r6,255
  8005f0:	280a90fa 	slli	r5,r5,3
  8005f4:	89c05026 	beq	r17,r7,800738 <__addsf3+0x18c>
  8005f8:	8185c83a 	sub	r2,r16,r6
  8005fc:	00807a0e 	bge	zero,r2,8007e8 <__addsf3+0x23c>
  800600:	30001e1e 	bne	r6,zero,80067c <__addsf3+0xd0>
  800604:	28006d1e 	bne	r5,zero,8007bc <__addsf3+0x210>
  800608:	208001cc 	andi	r2,r4,7
  80060c:	10000426 	beq	r2,zero,800620 <__addsf3+0x74>
  800610:	208003cc 	andi	r2,r4,15
  800614:	00c00104 	movi	r3,4
  800618:	10c00126 	beq	r2,r3,800620 <__addsf3+0x74>
  80061c:	20c9883a 	add	r4,r4,r3
  800620:	2081002c 	andhi	r2,r4,1024
  800624:	10003926 	beq	r2,zero,80070c <__addsf3+0x160>
  800628:	84000044 	addi	r16,r16,1
  80062c:	00803fc4 	movi	r2,255
  800630:	80807826 	beq	r16,r2,800814 <__addsf3+0x268>
  800634:	200891ba 	slli	r4,r4,6
  800638:	8805883a 	mov	r2,r17
  80063c:	2008d27a 	srli	r4,r4,9
  800640:	84003fcc 	andi	r16,r16,255
  800644:	800695fa 	slli	r3,r16,23
  800648:	10803fcc 	andi	r2,r2,255
  80064c:	04002034 	movhi	r16,128
  800650:	843fffc4 	addi	r16,r16,-1
  800654:	100497fa 	slli	r2,r2,31
  800658:	2408703a 	and	r4,r4,r16
  80065c:	20e0b03a 	or	r16,r4,r3
  800660:	8084b03a 	or	r2,r16,r2
  800664:	dfc00317 	ldw	ra,12(sp)
  800668:	dc800217 	ldw	r18,8(sp)
  80066c:	dc400117 	ldw	r17,4(sp)
  800670:	dc000017 	ldw	r16,0(sp)
  800674:	dec00404 	addi	sp,sp,16
  800678:	f800283a 	ret
  80067c:	00c03fc4 	movi	r3,255
  800680:	80ffe126 	beq	r16,r3,800608 <__alt_data_end+0xff800608>
  800684:	29410034 	orhi	r5,r5,1024
  800688:	00c006c4 	movi	r3,27
  80068c:	18807516 	blt	r3,r2,800864 <__addsf3+0x2b8>
  800690:	00c00804 	movi	r3,32
  800694:	1887c83a 	sub	r3,r3,r2
  800698:	28c6983a 	sll	r3,r5,r3
  80069c:	288ad83a 	srl	r5,r5,r2
  8006a0:	1804c03a 	cmpne	r2,r3,zero
  8006a4:	288ab03a 	or	r5,r5,r2
  8006a8:	2149c83a 	sub	r4,r4,r5
  8006ac:	2081002c 	andhi	r2,r4,1024
  8006b0:	10001426 	beq	r2,zero,800704 <__addsf3+0x158>
  8006b4:	04810034 	movhi	r18,1024
  8006b8:	94bfffc4 	addi	r18,r18,-1
  8006bc:	24a4703a 	and	r18,r4,r18
  8006c0:	9009883a 	mov	r4,r18
  8006c4:	0801d980 	call	801d98 <__clzsi2>
  8006c8:	10bffec4 	addi	r2,r2,-5
  8006cc:	90a4983a 	sll	r18,r18,r2
  8006d0:	14005416 	blt	r2,r16,800824 <__addsf3+0x278>
  8006d4:	1405c83a 	sub	r2,r2,r16
  8006d8:	11000044 	addi	r4,r2,1
  8006dc:	00800804 	movi	r2,32
  8006e0:	1105c83a 	sub	r2,r2,r4
  8006e4:	9084983a 	sll	r2,r18,r2
  8006e8:	9124d83a 	srl	r18,r18,r4
  8006ec:	0021883a 	mov	r16,zero
  8006f0:	1008c03a 	cmpne	r4,r2,zero
  8006f4:	9108b03a 	or	r4,r18,r4
  8006f8:	003fc306 	br	800608 <__alt_data_end+0xff800608>
  8006fc:	1000db26 	beq	r2,zero,800a6c <__addsf3+0x4c0>
  800700:	1009883a 	mov	r4,r2
  800704:	208001cc 	andi	r2,r4,7
  800708:	103fc11e 	bne	r2,zero,800610 <__alt_data_end+0xff800610>
  80070c:	2006d0fa 	srli	r3,r4,3
  800710:	01003fc4 	movi	r4,255
  800714:	8805883a 	mov	r2,r17
  800718:	8100241e 	bne	r16,r4,8007ac <__addsf3+0x200>
  80071c:	18006e26 	beq	r3,zero,8008d8 <__addsf3+0x32c>
  800720:	19001034 	orhi	r4,r3,64
  800724:	00c02034 	movhi	r3,128
  800728:	18ffffc4 	addi	r3,r3,-1
  80072c:	043fffc4 	movi	r16,-1
  800730:	20c8703a 	and	r4,r4,r3
  800734:	003fc206 	br	800640 <__alt_data_end+0xff800640>
  800738:	8187c83a 	sub	r3,r16,r6
  80073c:	00c03e0e 	bge	zero,r3,800838 <__addsf3+0x28c>
  800740:	30002326 	beq	r6,zero,8007d0 <__addsf3+0x224>
  800744:	01803fc4 	movi	r6,255
  800748:	81bfaf26 	beq	r16,r6,800608 <__alt_data_end+0xff800608>
  80074c:	29410034 	orhi	r5,r5,1024
  800750:	018006c4 	movi	r6,27
  800754:	30c07416 	blt	r6,r3,800928 <__addsf3+0x37c>
  800758:	01800804 	movi	r6,32
  80075c:	30cdc83a 	sub	r6,r6,r3
  800760:	298c983a 	sll	r6,r5,r6
  800764:	28cad83a 	srl	r5,r5,r3
  800768:	3006c03a 	cmpne	r3,r6,zero
  80076c:	28cab03a 	or	r5,r5,r3
  800770:	2149883a 	add	r4,r4,r5
  800774:	20c1002c 	andhi	r3,r4,1024
  800778:	183fe226 	beq	r3,zero,800704 <__alt_data_end+0xff800704>
  80077c:	84000044 	addi	r16,r16,1
  800780:	00c03fc4 	movi	r3,255
  800784:	80c05426 	beq	r16,r3,8008d8 <__addsf3+0x32c>
  800788:	00bf0034 	movhi	r2,64512
  80078c:	10bfffc4 	addi	r2,r2,-1
  800790:	20c0004c 	andi	r3,r4,1
  800794:	2088703a 	and	r4,r4,r2
  800798:	2008d07a 	srli	r4,r4,1
  80079c:	20c8b03a 	or	r4,r4,r3
  8007a0:	003f9906 	br	800608 <__alt_data_end+0xff800608>
  8007a4:	0007883a 	mov	r3,zero
  8007a8:	0005883a 	mov	r2,zero
  8007ac:	01002034 	movhi	r4,128
  8007b0:	213fffc4 	addi	r4,r4,-1
  8007b4:	1908703a 	and	r4,r3,r4
  8007b8:	003fa106 	br	800640 <__alt_data_end+0xff800640>
  8007bc:	10bfffc4 	addi	r2,r2,-1
  8007c0:	103fb926 	beq	r2,zero,8006a8 <__alt_data_end+0xff8006a8>
  8007c4:	00c03fc4 	movi	r3,255
  8007c8:	80ffaf1e 	bne	r16,r3,800688 <__alt_data_end+0xff800688>
  8007cc:	003f8e06 	br	800608 <__alt_data_end+0xff800608>
  8007d0:	283f8d26 	beq	r5,zero,800608 <__alt_data_end+0xff800608>
  8007d4:	18ffffc4 	addi	r3,r3,-1
  8007d8:	183fe526 	beq	r3,zero,800770 <__alt_data_end+0xff800770>
  8007dc:	01803fc4 	movi	r6,255
  8007e0:	81bfdb1e 	bne	r16,r6,800750 <__alt_data_end+0xff800750>
  8007e4:	003f8806 	br	800608 <__alt_data_end+0xff800608>
  8007e8:	1000201e 	bne	r2,zero,80086c <__addsf3+0x2c0>
  8007ec:	80800044 	addi	r2,r16,1
  8007f0:	10803fcc 	andi	r2,r2,255
  8007f4:	01800044 	movi	r6,1
  8007f8:	3080450e 	bge	r6,r2,800910 <__addsf3+0x364>
  8007fc:	2165c83a 	sub	r18,r4,r5
  800800:	90c1002c 	andhi	r3,r18,1024
  800804:	18002b26 	beq	r3,zero,8008b4 <__addsf3+0x308>
  800808:	2925c83a 	sub	r18,r5,r4
  80080c:	3823883a 	mov	r17,r7
  800810:	003fab06 	br	8006c0 <__alt_data_end+0xff8006c0>
  800814:	8805883a 	mov	r2,r17
  800818:	043fffc4 	movi	r16,-1
  80081c:	0009883a 	mov	r4,zero
  800820:	003f8706 	br	800640 <__alt_data_end+0xff800640>
  800824:	013f0034 	movhi	r4,64512
  800828:	213fffc4 	addi	r4,r4,-1
  80082c:	80a1c83a 	sub	r16,r16,r2
  800830:	9108703a 	and	r4,r18,r4
  800834:	003f7406 	br	800608 <__alt_data_end+0xff800608>
  800838:	1800411e 	bne	r3,zero,800940 <__addsf3+0x394>
  80083c:	80c00044 	addi	r3,r16,1
  800840:	19c03fcc 	andi	r7,r3,255
  800844:	01800044 	movi	r6,1
  800848:	31c0260e 	bge	r6,r7,8008e4 <__addsf3+0x338>
  80084c:	01803fc4 	movi	r6,255
  800850:	19802126 	beq	r3,r6,8008d8 <__addsf3+0x32c>
  800854:	2149883a 	add	r4,r4,r5
  800858:	2008d07a 	srli	r4,r4,1
  80085c:	1821883a 	mov	r16,r3
  800860:	003f6906 	br	800608 <__alt_data_end+0xff800608>
  800864:	01400044 	movi	r5,1
  800868:	003f8f06 	br	8006a8 <__alt_data_end+0xff8006a8>
  80086c:	8000151e 	bne	r16,zero,8008c4 <__addsf3+0x318>
  800870:	20002f26 	beq	r4,zero,800930 <__addsf3+0x384>
  800874:	0084303a 	nor	r2,zero,r2
  800878:	10000a26 	beq	r2,zero,8008a4 <__addsf3+0x2f8>
  80087c:	00c03fc4 	movi	r3,255
  800880:	30c02b26 	beq	r6,r3,800930 <__addsf3+0x384>
  800884:	00c006c4 	movi	r3,27
  800888:	18806d16 	blt	r3,r2,800a40 <__addsf3+0x494>
  80088c:	00c00804 	movi	r3,32
  800890:	1887c83a 	sub	r3,r3,r2
  800894:	20c6983a 	sll	r3,r4,r3
  800898:	2084d83a 	srl	r2,r4,r2
  80089c:	1808c03a 	cmpne	r4,r3,zero
  8008a0:	1108b03a 	or	r4,r2,r4
  8008a4:	2909c83a 	sub	r4,r5,r4
  8008a8:	3021883a 	mov	r16,r6
  8008ac:	3823883a 	mov	r17,r7
  8008b0:	003f7e06 	br	8006ac <__alt_data_end+0xff8006ac>
  8008b4:	903f821e 	bne	r18,zero,8006c0 <__alt_data_end+0xff8006c0>
  8008b8:	0005883a 	mov	r2,zero
  8008bc:	0021883a 	mov	r16,zero
  8008c0:	003fba06 	br	8007ac <__alt_data_end+0xff8007ac>
  8008c4:	00c03fc4 	movi	r3,255
  8008c8:	30c01926 	beq	r6,r3,800930 <__addsf3+0x384>
  8008cc:	0085c83a 	sub	r2,zero,r2
  8008d0:	21010034 	orhi	r4,r4,1024
  8008d4:	003feb06 	br	800884 <__alt_data_end+0xff800884>
  8008d8:	043fffc4 	movi	r16,-1
  8008dc:	0009883a 	mov	r4,zero
  8008e0:	003f5706 	br	800640 <__alt_data_end+0xff800640>
  8008e4:	80004a1e 	bne	r16,zero,800a10 <__addsf3+0x464>
  8008e8:	20005926 	beq	r4,zero,800a50 <__addsf3+0x4a4>
  8008ec:	283f4626 	beq	r5,zero,800608 <__alt_data_end+0xff800608>
  8008f0:	2149883a 	add	r4,r4,r5
  8008f4:	2081002c 	andhi	r2,r4,1024
  8008f8:	103f8226 	beq	r2,zero,800704 <__alt_data_end+0xff800704>
  8008fc:	00bf0034 	movhi	r2,64512
  800900:	10bfffc4 	addi	r2,r2,-1
  800904:	3021883a 	mov	r16,r6
  800908:	2088703a 	and	r4,r4,r2
  80090c:	003f3e06 	br	800608 <__alt_data_end+0xff800608>
  800910:	8000121e 	bne	r16,zero,80095c <__addsf3+0x3b0>
  800914:	2000261e 	bne	r4,zero,8009b0 <__addsf3+0x404>
  800918:	283fa226 	beq	r5,zero,8007a4 <__alt_data_end+0xff8007a4>
  80091c:	2809883a 	mov	r4,r5
  800920:	3823883a 	mov	r17,r7
  800924:	003f3806 	br	800608 <__alt_data_end+0xff800608>
  800928:	01400044 	movi	r5,1
  80092c:	003f9006 	br	800770 <__alt_data_end+0xff800770>
  800930:	2809883a 	mov	r4,r5
  800934:	3021883a 	mov	r16,r6
  800938:	3823883a 	mov	r17,r7
  80093c:	003f3206 	br	800608 <__alt_data_end+0xff800608>
  800940:	80000c1e 	bne	r16,zero,800974 <__addsf3+0x3c8>
  800944:	20002f26 	beq	r4,zero,800a04 <__addsf3+0x458>
  800948:	00c6303a 	nor	r3,zero,r3
  80094c:	18002b1e 	bne	r3,zero,8009fc <__addsf3+0x450>
  800950:	2149883a 	add	r4,r4,r5
  800954:	3021883a 	mov	r16,r6
  800958:	003f8606 	br	800774 <__alt_data_end+0xff800774>
  80095c:	20001b1e 	bne	r4,zero,8009cc <__addsf3+0x420>
  800960:	28003926 	beq	r5,zero,800a48 <__addsf3+0x49c>
  800964:	2809883a 	mov	r4,r5
  800968:	3823883a 	mov	r17,r7
  80096c:	04003fc4 	movi	r16,255
  800970:	003f2506 	br	800608 <__alt_data_end+0xff800608>
  800974:	01c03fc4 	movi	r7,255
  800978:	31c02226 	beq	r6,r7,800a04 <__addsf3+0x458>
  80097c:	00c7c83a 	sub	r3,zero,r3
  800980:	21010034 	orhi	r4,r4,1024
  800984:	01c006c4 	movi	r7,27
  800988:	38c03616 	blt	r7,r3,800a64 <__addsf3+0x4b8>
  80098c:	01c00804 	movi	r7,32
  800990:	38cfc83a 	sub	r7,r7,r3
  800994:	21ce983a 	sll	r7,r4,r7
  800998:	20c6d83a 	srl	r3,r4,r3
  80099c:	3808c03a 	cmpne	r4,r7,zero
  8009a0:	1906b03a 	or	r3,r3,r4
  8009a4:	1949883a 	add	r4,r3,r5
  8009a8:	3021883a 	mov	r16,r6
  8009ac:	003f7106 	br	800774 <__alt_data_end+0xff800774>
  8009b0:	283f1526 	beq	r5,zero,800608 <__alt_data_end+0xff800608>
  8009b4:	2145c83a 	sub	r2,r4,r5
  8009b8:	10c1002c 	andhi	r3,r2,1024
  8009bc:	183f4f26 	beq	r3,zero,8006fc <__alt_data_end+0xff8006fc>
  8009c0:	2909c83a 	sub	r4,r5,r4
  8009c4:	3823883a 	mov	r17,r7
  8009c8:	003f0f06 	br	800608 <__alt_data_end+0xff800608>
  8009cc:	28001a26 	beq	r5,zero,800a38 <__addsf3+0x48c>
  8009d0:	2008d0fa 	srli	r4,r4,3
  8009d4:	2080102c 	andhi	r2,r4,64
  8009d8:	10000526 	beq	r2,zero,8009f0 <__addsf3+0x444>
  8009dc:	280ad0fa 	srli	r5,r5,3
  8009e0:	2880102c 	andhi	r2,r5,64
  8009e4:	1000021e 	bne	r2,zero,8009f0 <__addsf3+0x444>
  8009e8:	2809883a 	mov	r4,r5
  8009ec:	3823883a 	mov	r17,r7
  8009f0:	200890fa 	slli	r4,r4,3
  8009f4:	04003fc4 	movi	r16,255
  8009f8:	003f0306 	br	800608 <__alt_data_end+0xff800608>
  8009fc:	01c03fc4 	movi	r7,255
  800a00:	31ffe01e 	bne	r6,r7,800984 <__alt_data_end+0xff800984>
  800a04:	2809883a 	mov	r4,r5
  800a08:	3021883a 	mov	r16,r6
  800a0c:	003efe06 	br	800608 <__alt_data_end+0xff800608>
  800a10:	20001126 	beq	r4,zero,800a58 <__addsf3+0x4ac>
  800a14:	28000826 	beq	r5,zero,800a38 <__addsf3+0x48c>
  800a18:	2008d0fa 	srli	r4,r4,3
  800a1c:	2080102c 	andhi	r2,r4,64
  800a20:	103ff326 	beq	r2,zero,8009f0 <__alt_data_end+0xff8009f0>
  800a24:	280ad0fa 	srli	r5,r5,3
  800a28:	2880102c 	andhi	r2,r5,64
  800a2c:	103ff01e 	bne	r2,zero,8009f0 <__alt_data_end+0xff8009f0>
  800a30:	2809883a 	mov	r4,r5
  800a34:	003fee06 	br	8009f0 <__alt_data_end+0xff8009f0>
  800a38:	04003fc4 	movi	r16,255
  800a3c:	003ef206 	br	800608 <__alt_data_end+0xff800608>
  800a40:	01000044 	movi	r4,1
  800a44:	003f9706 	br	8008a4 <__alt_data_end+0xff8008a4>
  800a48:	0005883a 	mov	r2,zero
  800a4c:	003f3406 	br	800720 <__alt_data_end+0xff800720>
  800a50:	2809883a 	mov	r4,r5
  800a54:	003eec06 	br	800608 <__alt_data_end+0xff800608>
  800a58:	2809883a 	mov	r4,r5
  800a5c:	04003fc4 	movi	r16,255
  800a60:	003ee906 	br	800608 <__alt_data_end+0xff800608>
  800a64:	00c00044 	movi	r3,1
  800a68:	003fce06 	br	8009a4 <__alt_data_end+0xff8009a4>
  800a6c:	0005883a 	mov	r2,zero
  800a70:	003f4e06 	br	8007ac <__alt_data_end+0xff8007ac>

00800a74 <__adddf3>:
  800a74:	02c00434 	movhi	r11,16
  800a78:	5affffc4 	addi	r11,r11,-1
  800a7c:	2806d7fa 	srli	r3,r5,31
  800a80:	2ad4703a 	and	r10,r5,r11
  800a84:	3ad2703a 	and	r9,r7,r11
  800a88:	3804d53a 	srli	r2,r7,20
  800a8c:	3018d77a 	srli	r12,r6,29
  800a90:	280ad53a 	srli	r5,r5,20
  800a94:	501490fa 	slli	r10,r10,3
  800a98:	2010d77a 	srli	r8,r4,29
  800a9c:	481290fa 	slli	r9,r9,3
  800aa0:	380ed7fa 	srli	r7,r7,31
  800aa4:	defffb04 	addi	sp,sp,-20
  800aa8:	dc800215 	stw	r18,8(sp)
  800aac:	dc400115 	stw	r17,4(sp)
  800ab0:	dc000015 	stw	r16,0(sp)
  800ab4:	dfc00415 	stw	ra,16(sp)
  800ab8:	dcc00315 	stw	r19,12(sp)
  800abc:	1c803fcc 	andi	r18,r3,255
  800ac0:	2c01ffcc 	andi	r16,r5,2047
  800ac4:	5210b03a 	or	r8,r10,r8
  800ac8:	202290fa 	slli	r17,r4,3
  800acc:	1081ffcc 	andi	r2,r2,2047
  800ad0:	4b12b03a 	or	r9,r9,r12
  800ad4:	300c90fa 	slli	r6,r6,3
  800ad8:	91c07526 	beq	r18,r7,800cb0 <__adddf3+0x23c>
  800adc:	8087c83a 	sub	r3,r16,r2
  800ae0:	00c0ab0e 	bge	zero,r3,800d90 <__adddf3+0x31c>
  800ae4:	10002a1e 	bne	r2,zero,800b90 <__adddf3+0x11c>
  800ae8:	4984b03a 	or	r2,r9,r6
  800aec:	1000961e 	bne	r2,zero,800d48 <__adddf3+0x2d4>
  800af0:	888001cc 	andi	r2,r17,7
  800af4:	10000726 	beq	r2,zero,800b14 <__adddf3+0xa0>
  800af8:	888003cc 	andi	r2,r17,15
  800afc:	00c00104 	movi	r3,4
  800b00:	10c00426 	beq	r2,r3,800b14 <__adddf3+0xa0>
  800b04:	88c7883a 	add	r3,r17,r3
  800b08:	1c63803a 	cmpltu	r17,r3,r17
  800b0c:	4451883a 	add	r8,r8,r17
  800b10:	1823883a 	mov	r17,r3
  800b14:	4080202c 	andhi	r2,r8,128
  800b18:	10005926 	beq	r2,zero,800c80 <__adddf3+0x20c>
  800b1c:	84000044 	addi	r16,r16,1
  800b20:	0081ffc4 	movi	r2,2047
  800b24:	8080ba26 	beq	r16,r2,800e10 <__adddf3+0x39c>
  800b28:	00bfe034 	movhi	r2,65408
  800b2c:	10bfffc4 	addi	r2,r2,-1
  800b30:	4090703a 	and	r8,r8,r2
  800b34:	4004977a 	slli	r2,r8,29
  800b38:	4010927a 	slli	r8,r8,9
  800b3c:	8822d0fa 	srli	r17,r17,3
  800b40:	8401ffcc 	andi	r16,r16,2047
  800b44:	4010d33a 	srli	r8,r8,12
  800b48:	9007883a 	mov	r3,r18
  800b4c:	1444b03a 	or	r2,r2,r17
  800b50:	8401ffcc 	andi	r16,r16,2047
  800b54:	8020953a 	slli	r16,r16,20
  800b58:	18c03fcc 	andi	r3,r3,255
  800b5c:	01000434 	movhi	r4,16
  800b60:	213fffc4 	addi	r4,r4,-1
  800b64:	180697fa 	slli	r3,r3,31
  800b68:	4110703a 	and	r8,r8,r4
  800b6c:	4410b03a 	or	r8,r8,r16
  800b70:	40c6b03a 	or	r3,r8,r3
  800b74:	dfc00417 	ldw	ra,16(sp)
  800b78:	dcc00317 	ldw	r19,12(sp)
  800b7c:	dc800217 	ldw	r18,8(sp)
  800b80:	dc400117 	ldw	r17,4(sp)
  800b84:	dc000017 	ldw	r16,0(sp)
  800b88:	dec00504 	addi	sp,sp,20
  800b8c:	f800283a 	ret
  800b90:	0081ffc4 	movi	r2,2047
  800b94:	80bfd626 	beq	r16,r2,800af0 <__alt_data_end+0xff800af0>
  800b98:	4a402034 	orhi	r9,r9,128
  800b9c:	00800e04 	movi	r2,56
  800ba0:	10c09f16 	blt	r2,r3,800e20 <__adddf3+0x3ac>
  800ba4:	008007c4 	movi	r2,31
  800ba8:	10c0c216 	blt	r2,r3,800eb4 <__adddf3+0x440>
  800bac:	00800804 	movi	r2,32
  800bb0:	10c5c83a 	sub	r2,r2,r3
  800bb4:	488a983a 	sll	r5,r9,r2
  800bb8:	30c8d83a 	srl	r4,r6,r3
  800bbc:	3084983a 	sll	r2,r6,r2
  800bc0:	48c6d83a 	srl	r3,r9,r3
  800bc4:	290cb03a 	or	r6,r5,r4
  800bc8:	1004c03a 	cmpne	r2,r2,zero
  800bcc:	308cb03a 	or	r6,r6,r2
  800bd0:	898dc83a 	sub	r6,r17,r6
  800bd4:	89a3803a 	cmpltu	r17,r17,r6
  800bd8:	40d1c83a 	sub	r8,r8,r3
  800bdc:	4451c83a 	sub	r8,r8,r17
  800be0:	3023883a 	mov	r17,r6
  800be4:	4080202c 	andhi	r2,r8,128
  800be8:	10002326 	beq	r2,zero,800c78 <__adddf3+0x204>
  800bec:	04c02034 	movhi	r19,128
  800bf0:	9cffffc4 	addi	r19,r19,-1
  800bf4:	44e6703a 	and	r19,r8,r19
  800bf8:	98007626 	beq	r19,zero,800dd4 <__adddf3+0x360>
  800bfc:	9809883a 	mov	r4,r19
  800c00:	0801d980 	call	801d98 <__clzsi2>
  800c04:	10fffe04 	addi	r3,r2,-8
  800c08:	010007c4 	movi	r4,31
  800c0c:	20c07716 	blt	r4,r3,800dec <__adddf3+0x378>
  800c10:	00800804 	movi	r2,32
  800c14:	10c5c83a 	sub	r2,r2,r3
  800c18:	8884d83a 	srl	r2,r17,r2
  800c1c:	98d0983a 	sll	r8,r19,r3
  800c20:	88e2983a 	sll	r17,r17,r3
  800c24:	1204b03a 	or	r2,r2,r8
  800c28:	1c007416 	blt	r3,r16,800dfc <__adddf3+0x388>
  800c2c:	1c21c83a 	sub	r16,r3,r16
  800c30:	82000044 	addi	r8,r16,1
  800c34:	00c007c4 	movi	r3,31
  800c38:	1a009116 	blt	r3,r8,800e80 <__adddf3+0x40c>
  800c3c:	00c00804 	movi	r3,32
  800c40:	1a07c83a 	sub	r3,r3,r8
  800c44:	8a08d83a 	srl	r4,r17,r8
  800c48:	88e2983a 	sll	r17,r17,r3
  800c4c:	10c6983a 	sll	r3,r2,r3
  800c50:	1210d83a 	srl	r8,r2,r8
  800c54:	8804c03a 	cmpne	r2,r17,zero
  800c58:	1906b03a 	or	r3,r3,r4
  800c5c:	18a2b03a 	or	r17,r3,r2
  800c60:	0021883a 	mov	r16,zero
  800c64:	003fa206 	br	800af0 <__alt_data_end+0xff800af0>
  800c68:	1890b03a 	or	r8,r3,r2
  800c6c:	40017d26 	beq	r8,zero,801264 <__adddf3+0x7f0>
  800c70:	1011883a 	mov	r8,r2
  800c74:	1823883a 	mov	r17,r3
  800c78:	888001cc 	andi	r2,r17,7
  800c7c:	103f9e1e 	bne	r2,zero,800af8 <__alt_data_end+0xff800af8>
  800c80:	4004977a 	slli	r2,r8,29
  800c84:	8822d0fa 	srli	r17,r17,3
  800c88:	4010d0fa 	srli	r8,r8,3
  800c8c:	9007883a 	mov	r3,r18
  800c90:	1444b03a 	or	r2,r2,r17
  800c94:	0101ffc4 	movi	r4,2047
  800c98:	81002426 	beq	r16,r4,800d2c <__adddf3+0x2b8>
  800c9c:	8120703a 	and	r16,r16,r4
  800ca0:	01000434 	movhi	r4,16
  800ca4:	213fffc4 	addi	r4,r4,-1
  800ca8:	4110703a 	and	r8,r8,r4
  800cac:	003fa806 	br	800b50 <__alt_data_end+0xff800b50>
  800cb0:	8089c83a 	sub	r4,r16,r2
  800cb4:	01005e0e 	bge	zero,r4,800e30 <__adddf3+0x3bc>
  800cb8:	10002b26 	beq	r2,zero,800d68 <__adddf3+0x2f4>
  800cbc:	0081ffc4 	movi	r2,2047
  800cc0:	80bf8b26 	beq	r16,r2,800af0 <__alt_data_end+0xff800af0>
  800cc4:	4a402034 	orhi	r9,r9,128
  800cc8:	00800e04 	movi	r2,56
  800ccc:	1100a40e 	bge	r2,r4,800f60 <__adddf3+0x4ec>
  800cd0:	498cb03a 	or	r6,r9,r6
  800cd4:	300ac03a 	cmpne	r5,r6,zero
  800cd8:	0013883a 	mov	r9,zero
  800cdc:	2c4b883a 	add	r5,r5,r17
  800ce0:	2c63803a 	cmpltu	r17,r5,r17
  800ce4:	4a11883a 	add	r8,r9,r8
  800ce8:	8a11883a 	add	r8,r17,r8
  800cec:	2823883a 	mov	r17,r5
  800cf0:	4080202c 	andhi	r2,r8,128
  800cf4:	103fe026 	beq	r2,zero,800c78 <__alt_data_end+0xff800c78>
  800cf8:	84000044 	addi	r16,r16,1
  800cfc:	0081ffc4 	movi	r2,2047
  800d00:	8080d226 	beq	r16,r2,80104c <__adddf3+0x5d8>
  800d04:	00bfe034 	movhi	r2,65408
  800d08:	10bfffc4 	addi	r2,r2,-1
  800d0c:	4090703a 	and	r8,r8,r2
  800d10:	880ad07a 	srli	r5,r17,1
  800d14:	400897fa 	slli	r4,r8,31
  800d18:	88c0004c 	andi	r3,r17,1
  800d1c:	28e2b03a 	or	r17,r5,r3
  800d20:	4010d07a 	srli	r8,r8,1
  800d24:	2462b03a 	or	r17,r4,r17
  800d28:	003f7106 	br	800af0 <__alt_data_end+0xff800af0>
  800d2c:	4088b03a 	or	r4,r8,r2
  800d30:	20014526 	beq	r4,zero,801248 <__adddf3+0x7d4>
  800d34:	01000434 	movhi	r4,16
  800d38:	42000234 	orhi	r8,r8,8
  800d3c:	213fffc4 	addi	r4,r4,-1
  800d40:	4110703a 	and	r8,r8,r4
  800d44:	003f8206 	br	800b50 <__alt_data_end+0xff800b50>
  800d48:	18ffffc4 	addi	r3,r3,-1
  800d4c:	1800491e 	bne	r3,zero,800e74 <__adddf3+0x400>
  800d50:	898bc83a 	sub	r5,r17,r6
  800d54:	8963803a 	cmpltu	r17,r17,r5
  800d58:	4251c83a 	sub	r8,r8,r9
  800d5c:	4451c83a 	sub	r8,r8,r17
  800d60:	2823883a 	mov	r17,r5
  800d64:	003f9f06 	br	800be4 <__alt_data_end+0xff800be4>
  800d68:	4984b03a 	or	r2,r9,r6
  800d6c:	103f6026 	beq	r2,zero,800af0 <__alt_data_end+0xff800af0>
  800d70:	213fffc4 	addi	r4,r4,-1
  800d74:	2000931e 	bne	r4,zero,800fc4 <__adddf3+0x550>
  800d78:	898d883a 	add	r6,r17,r6
  800d7c:	3463803a 	cmpltu	r17,r6,r17
  800d80:	4251883a 	add	r8,r8,r9
  800d84:	8a11883a 	add	r8,r17,r8
  800d88:	3023883a 	mov	r17,r6
  800d8c:	003fd806 	br	800cf0 <__alt_data_end+0xff800cf0>
  800d90:	1800541e 	bne	r3,zero,800ee4 <__adddf3+0x470>
  800d94:	80800044 	addi	r2,r16,1
  800d98:	1081ffcc 	andi	r2,r2,2047
  800d9c:	00c00044 	movi	r3,1
  800da0:	1880a00e 	bge	r3,r2,801024 <__adddf3+0x5b0>
  800da4:	8989c83a 	sub	r4,r17,r6
  800da8:	8905803a 	cmpltu	r2,r17,r4
  800dac:	4267c83a 	sub	r19,r8,r9
  800db0:	98a7c83a 	sub	r19,r19,r2
  800db4:	9880202c 	andhi	r2,r19,128
  800db8:	10006326 	beq	r2,zero,800f48 <__adddf3+0x4d4>
  800dbc:	3463c83a 	sub	r17,r6,r17
  800dc0:	4a07c83a 	sub	r3,r9,r8
  800dc4:	344d803a 	cmpltu	r6,r6,r17
  800dc8:	19a7c83a 	sub	r19,r3,r6
  800dcc:	3825883a 	mov	r18,r7
  800dd0:	983f8a1e 	bne	r19,zero,800bfc <__alt_data_end+0xff800bfc>
  800dd4:	8809883a 	mov	r4,r17
  800dd8:	0801d980 	call	801d98 <__clzsi2>
  800ddc:	10800804 	addi	r2,r2,32
  800de0:	10fffe04 	addi	r3,r2,-8
  800de4:	010007c4 	movi	r4,31
  800de8:	20ff890e 	bge	r4,r3,800c10 <__alt_data_end+0xff800c10>
  800dec:	10bff604 	addi	r2,r2,-40
  800df0:	8884983a 	sll	r2,r17,r2
  800df4:	0023883a 	mov	r17,zero
  800df8:	1c3f8c0e 	bge	r3,r16,800c2c <__alt_data_end+0xff800c2c>
  800dfc:	023fe034 	movhi	r8,65408
  800e00:	423fffc4 	addi	r8,r8,-1
  800e04:	80e1c83a 	sub	r16,r16,r3
  800e08:	1210703a 	and	r8,r2,r8
  800e0c:	003f3806 	br	800af0 <__alt_data_end+0xff800af0>
  800e10:	9007883a 	mov	r3,r18
  800e14:	0011883a 	mov	r8,zero
  800e18:	0005883a 	mov	r2,zero
  800e1c:	003f4c06 	br	800b50 <__alt_data_end+0xff800b50>
  800e20:	498cb03a 	or	r6,r9,r6
  800e24:	300cc03a 	cmpne	r6,r6,zero
  800e28:	0007883a 	mov	r3,zero
  800e2c:	003f6806 	br	800bd0 <__alt_data_end+0xff800bd0>
  800e30:	20009c1e 	bne	r4,zero,8010a4 <__adddf3+0x630>
  800e34:	80800044 	addi	r2,r16,1
  800e38:	1141ffcc 	andi	r5,r2,2047
  800e3c:	01000044 	movi	r4,1
  800e40:	2140670e 	bge	r4,r5,800fe0 <__adddf3+0x56c>
  800e44:	0101ffc4 	movi	r4,2047
  800e48:	11007f26 	beq	r2,r4,801048 <__adddf3+0x5d4>
  800e4c:	898d883a 	add	r6,r17,r6
  800e50:	4247883a 	add	r3,r8,r9
  800e54:	3451803a 	cmpltu	r8,r6,r17
  800e58:	40d1883a 	add	r8,r8,r3
  800e5c:	402297fa 	slli	r17,r8,31
  800e60:	300cd07a 	srli	r6,r6,1
  800e64:	4010d07a 	srli	r8,r8,1
  800e68:	1021883a 	mov	r16,r2
  800e6c:	89a2b03a 	or	r17,r17,r6
  800e70:	003f1f06 	br	800af0 <__alt_data_end+0xff800af0>
  800e74:	0081ffc4 	movi	r2,2047
  800e78:	80bf481e 	bne	r16,r2,800b9c <__alt_data_end+0xff800b9c>
  800e7c:	003f1c06 	br	800af0 <__alt_data_end+0xff800af0>
  800e80:	843ff844 	addi	r16,r16,-31
  800e84:	01000804 	movi	r4,32
  800e88:	1406d83a 	srl	r3,r2,r16
  800e8c:	41005026 	beq	r8,r4,800fd0 <__adddf3+0x55c>
  800e90:	01001004 	movi	r4,64
  800e94:	2211c83a 	sub	r8,r4,r8
  800e98:	1204983a 	sll	r2,r2,r8
  800e9c:	88a2b03a 	or	r17,r17,r2
  800ea0:	8822c03a 	cmpne	r17,r17,zero
  800ea4:	1c62b03a 	or	r17,r3,r17
  800ea8:	0011883a 	mov	r8,zero
  800eac:	0021883a 	mov	r16,zero
  800eb0:	003f7106 	br	800c78 <__alt_data_end+0xff800c78>
  800eb4:	193ff804 	addi	r4,r3,-32
  800eb8:	00800804 	movi	r2,32
  800ebc:	4908d83a 	srl	r4,r9,r4
  800ec0:	18804526 	beq	r3,r2,800fd8 <__adddf3+0x564>
  800ec4:	00801004 	movi	r2,64
  800ec8:	10c5c83a 	sub	r2,r2,r3
  800ecc:	4886983a 	sll	r3,r9,r2
  800ed0:	198cb03a 	or	r6,r3,r6
  800ed4:	300cc03a 	cmpne	r6,r6,zero
  800ed8:	218cb03a 	or	r6,r4,r6
  800edc:	0007883a 	mov	r3,zero
  800ee0:	003f3b06 	br	800bd0 <__alt_data_end+0xff800bd0>
  800ee4:	80002a26 	beq	r16,zero,800f90 <__adddf3+0x51c>
  800ee8:	0101ffc4 	movi	r4,2047
  800eec:	11006826 	beq	r2,r4,801090 <__adddf3+0x61c>
  800ef0:	00c7c83a 	sub	r3,zero,r3
  800ef4:	42002034 	orhi	r8,r8,128
  800ef8:	01000e04 	movi	r4,56
  800efc:	20c07c16 	blt	r4,r3,8010f0 <__adddf3+0x67c>
  800f00:	010007c4 	movi	r4,31
  800f04:	20c0da16 	blt	r4,r3,801270 <__adddf3+0x7fc>
  800f08:	01000804 	movi	r4,32
  800f0c:	20c9c83a 	sub	r4,r4,r3
  800f10:	4114983a 	sll	r10,r8,r4
  800f14:	88cad83a 	srl	r5,r17,r3
  800f18:	8908983a 	sll	r4,r17,r4
  800f1c:	40c6d83a 	srl	r3,r8,r3
  800f20:	5162b03a 	or	r17,r10,r5
  800f24:	2008c03a 	cmpne	r4,r4,zero
  800f28:	8922b03a 	or	r17,r17,r4
  800f2c:	3463c83a 	sub	r17,r6,r17
  800f30:	48c7c83a 	sub	r3,r9,r3
  800f34:	344d803a 	cmpltu	r6,r6,r17
  800f38:	1991c83a 	sub	r8,r3,r6
  800f3c:	1021883a 	mov	r16,r2
  800f40:	3825883a 	mov	r18,r7
  800f44:	003f2706 	br	800be4 <__alt_data_end+0xff800be4>
  800f48:	24d0b03a 	or	r8,r4,r19
  800f4c:	40001b1e 	bne	r8,zero,800fbc <__adddf3+0x548>
  800f50:	0005883a 	mov	r2,zero
  800f54:	0007883a 	mov	r3,zero
  800f58:	0021883a 	mov	r16,zero
  800f5c:	003f4d06 	br	800c94 <__alt_data_end+0xff800c94>
  800f60:	008007c4 	movi	r2,31
  800f64:	11003c16 	blt	r2,r4,801058 <__adddf3+0x5e4>
  800f68:	00800804 	movi	r2,32
  800f6c:	1105c83a 	sub	r2,r2,r4
  800f70:	488e983a 	sll	r7,r9,r2
  800f74:	310ad83a 	srl	r5,r6,r4
  800f78:	3084983a 	sll	r2,r6,r2
  800f7c:	4912d83a 	srl	r9,r9,r4
  800f80:	394ab03a 	or	r5,r7,r5
  800f84:	1004c03a 	cmpne	r2,r2,zero
  800f88:	288ab03a 	or	r5,r5,r2
  800f8c:	003f5306 	br	800cdc <__alt_data_end+0xff800cdc>
  800f90:	4448b03a 	or	r4,r8,r17
  800f94:	20003e26 	beq	r4,zero,801090 <__adddf3+0x61c>
  800f98:	00c6303a 	nor	r3,zero,r3
  800f9c:	18003a1e 	bne	r3,zero,801088 <__adddf3+0x614>
  800fa0:	3463c83a 	sub	r17,r6,r17
  800fa4:	4a07c83a 	sub	r3,r9,r8
  800fa8:	344d803a 	cmpltu	r6,r6,r17
  800fac:	1991c83a 	sub	r8,r3,r6
  800fb0:	1021883a 	mov	r16,r2
  800fb4:	3825883a 	mov	r18,r7
  800fb8:	003f0a06 	br	800be4 <__alt_data_end+0xff800be4>
  800fbc:	2023883a 	mov	r17,r4
  800fc0:	003f0d06 	br	800bf8 <__alt_data_end+0xff800bf8>
  800fc4:	0081ffc4 	movi	r2,2047
  800fc8:	80bf3f1e 	bne	r16,r2,800cc8 <__alt_data_end+0xff800cc8>
  800fcc:	003ec806 	br	800af0 <__alt_data_end+0xff800af0>
  800fd0:	0005883a 	mov	r2,zero
  800fd4:	003fb106 	br	800e9c <__alt_data_end+0xff800e9c>
  800fd8:	0007883a 	mov	r3,zero
  800fdc:	003fbc06 	br	800ed0 <__alt_data_end+0xff800ed0>
  800fe0:	4444b03a 	or	r2,r8,r17
  800fe4:	8000871e 	bne	r16,zero,801204 <__adddf3+0x790>
  800fe8:	1000ba26 	beq	r2,zero,8012d4 <__adddf3+0x860>
  800fec:	4984b03a 	or	r2,r9,r6
  800ff0:	103ebf26 	beq	r2,zero,800af0 <__alt_data_end+0xff800af0>
  800ff4:	8985883a 	add	r2,r17,r6
  800ff8:	4247883a 	add	r3,r8,r9
  800ffc:	1451803a 	cmpltu	r8,r2,r17
  801000:	40d1883a 	add	r8,r8,r3
  801004:	40c0202c 	andhi	r3,r8,128
  801008:	1023883a 	mov	r17,r2
  80100c:	183f1a26 	beq	r3,zero,800c78 <__alt_data_end+0xff800c78>
  801010:	00bfe034 	movhi	r2,65408
  801014:	10bfffc4 	addi	r2,r2,-1
  801018:	2021883a 	mov	r16,r4
  80101c:	4090703a 	and	r8,r8,r2
  801020:	003eb306 	br	800af0 <__alt_data_end+0xff800af0>
  801024:	4444b03a 	or	r2,r8,r17
  801028:	8000291e 	bne	r16,zero,8010d0 <__adddf3+0x65c>
  80102c:	10004b1e 	bne	r2,zero,80115c <__adddf3+0x6e8>
  801030:	4990b03a 	or	r8,r9,r6
  801034:	40008b26 	beq	r8,zero,801264 <__adddf3+0x7f0>
  801038:	4811883a 	mov	r8,r9
  80103c:	3023883a 	mov	r17,r6
  801040:	3825883a 	mov	r18,r7
  801044:	003eaa06 	br	800af0 <__alt_data_end+0xff800af0>
  801048:	1021883a 	mov	r16,r2
  80104c:	0011883a 	mov	r8,zero
  801050:	0005883a 	mov	r2,zero
  801054:	003f0f06 	br	800c94 <__alt_data_end+0xff800c94>
  801058:	217ff804 	addi	r5,r4,-32
  80105c:	00800804 	movi	r2,32
  801060:	494ad83a 	srl	r5,r9,r5
  801064:	20807d26 	beq	r4,r2,80125c <__adddf3+0x7e8>
  801068:	00801004 	movi	r2,64
  80106c:	1109c83a 	sub	r4,r2,r4
  801070:	4912983a 	sll	r9,r9,r4
  801074:	498cb03a 	or	r6,r9,r6
  801078:	300cc03a 	cmpne	r6,r6,zero
  80107c:	298ab03a 	or	r5,r5,r6
  801080:	0013883a 	mov	r9,zero
  801084:	003f1506 	br	800cdc <__alt_data_end+0xff800cdc>
  801088:	0101ffc4 	movi	r4,2047
  80108c:	113f9a1e 	bne	r2,r4,800ef8 <__alt_data_end+0xff800ef8>
  801090:	4811883a 	mov	r8,r9
  801094:	3023883a 	mov	r17,r6
  801098:	1021883a 	mov	r16,r2
  80109c:	3825883a 	mov	r18,r7
  8010a0:	003e9306 	br	800af0 <__alt_data_end+0xff800af0>
  8010a4:	8000161e 	bne	r16,zero,801100 <__adddf3+0x68c>
  8010a8:	444ab03a 	or	r5,r8,r17
  8010ac:	28005126 	beq	r5,zero,8011f4 <__adddf3+0x780>
  8010b0:	0108303a 	nor	r4,zero,r4
  8010b4:	20004d1e 	bne	r4,zero,8011ec <__adddf3+0x778>
  8010b8:	89a3883a 	add	r17,r17,r6
  8010bc:	4253883a 	add	r9,r8,r9
  8010c0:	898d803a 	cmpltu	r6,r17,r6
  8010c4:	3251883a 	add	r8,r6,r9
  8010c8:	1021883a 	mov	r16,r2
  8010cc:	003f0806 	br	800cf0 <__alt_data_end+0xff800cf0>
  8010d0:	1000301e 	bne	r2,zero,801194 <__adddf3+0x720>
  8010d4:	4984b03a 	or	r2,r9,r6
  8010d8:	10007126 	beq	r2,zero,8012a0 <__adddf3+0x82c>
  8010dc:	4811883a 	mov	r8,r9
  8010e0:	3023883a 	mov	r17,r6
  8010e4:	3825883a 	mov	r18,r7
  8010e8:	0401ffc4 	movi	r16,2047
  8010ec:	003e8006 	br	800af0 <__alt_data_end+0xff800af0>
  8010f0:	4462b03a 	or	r17,r8,r17
  8010f4:	8822c03a 	cmpne	r17,r17,zero
  8010f8:	0007883a 	mov	r3,zero
  8010fc:	003f8b06 	br	800f2c <__alt_data_end+0xff800f2c>
  801100:	0141ffc4 	movi	r5,2047
  801104:	11403b26 	beq	r2,r5,8011f4 <__adddf3+0x780>
  801108:	0109c83a 	sub	r4,zero,r4
  80110c:	42002034 	orhi	r8,r8,128
  801110:	01400e04 	movi	r5,56
  801114:	29006716 	blt	r5,r4,8012b4 <__adddf3+0x840>
  801118:	014007c4 	movi	r5,31
  80111c:	29007016 	blt	r5,r4,8012e0 <__adddf3+0x86c>
  801120:	01400804 	movi	r5,32
  801124:	290bc83a 	sub	r5,r5,r4
  801128:	4154983a 	sll	r10,r8,r5
  80112c:	890ed83a 	srl	r7,r17,r4
  801130:	894a983a 	sll	r5,r17,r5
  801134:	4108d83a 	srl	r4,r8,r4
  801138:	51e2b03a 	or	r17,r10,r7
  80113c:	280ac03a 	cmpne	r5,r5,zero
  801140:	8962b03a 	or	r17,r17,r5
  801144:	89a3883a 	add	r17,r17,r6
  801148:	2253883a 	add	r9,r4,r9
  80114c:	898d803a 	cmpltu	r6,r17,r6
  801150:	3251883a 	add	r8,r6,r9
  801154:	1021883a 	mov	r16,r2
  801158:	003ee506 	br	800cf0 <__alt_data_end+0xff800cf0>
  80115c:	4984b03a 	or	r2,r9,r6
  801160:	103e6326 	beq	r2,zero,800af0 <__alt_data_end+0xff800af0>
  801164:	8987c83a 	sub	r3,r17,r6
  801168:	88c9803a 	cmpltu	r4,r17,r3
  80116c:	4245c83a 	sub	r2,r8,r9
  801170:	1105c83a 	sub	r2,r2,r4
  801174:	1100202c 	andhi	r4,r2,128
  801178:	203ebb26 	beq	r4,zero,800c68 <__alt_data_end+0xff800c68>
  80117c:	3463c83a 	sub	r17,r6,r17
  801180:	4a07c83a 	sub	r3,r9,r8
  801184:	344d803a 	cmpltu	r6,r6,r17
  801188:	1991c83a 	sub	r8,r3,r6
  80118c:	3825883a 	mov	r18,r7
  801190:	003e5706 	br	800af0 <__alt_data_end+0xff800af0>
  801194:	4984b03a 	or	r2,r9,r6
  801198:	10002e26 	beq	r2,zero,801254 <__adddf3+0x7e0>
  80119c:	4004d0fa 	srli	r2,r8,3
  8011a0:	8822d0fa 	srli	r17,r17,3
  8011a4:	4010977a 	slli	r8,r8,29
  8011a8:	10c0022c 	andhi	r3,r2,8
  8011ac:	4462b03a 	or	r17,r8,r17
  8011b0:	18000826 	beq	r3,zero,8011d4 <__adddf3+0x760>
  8011b4:	4808d0fa 	srli	r4,r9,3
  8011b8:	20c0022c 	andhi	r3,r4,8
  8011bc:	1800051e 	bne	r3,zero,8011d4 <__adddf3+0x760>
  8011c0:	300cd0fa 	srli	r6,r6,3
  8011c4:	4806977a 	slli	r3,r9,29
  8011c8:	2005883a 	mov	r2,r4
  8011cc:	3825883a 	mov	r18,r7
  8011d0:	19a2b03a 	or	r17,r3,r6
  8011d4:	8810d77a 	srli	r8,r17,29
  8011d8:	100490fa 	slli	r2,r2,3
  8011dc:	882290fa 	slli	r17,r17,3
  8011e0:	0401ffc4 	movi	r16,2047
  8011e4:	4090b03a 	or	r8,r8,r2
  8011e8:	003e4106 	br	800af0 <__alt_data_end+0xff800af0>
  8011ec:	0141ffc4 	movi	r5,2047
  8011f0:	117fc71e 	bne	r2,r5,801110 <__alt_data_end+0xff801110>
  8011f4:	4811883a 	mov	r8,r9
  8011f8:	3023883a 	mov	r17,r6
  8011fc:	1021883a 	mov	r16,r2
  801200:	003e3b06 	br	800af0 <__alt_data_end+0xff800af0>
  801204:	10002f26 	beq	r2,zero,8012c4 <__adddf3+0x850>
  801208:	4984b03a 	or	r2,r9,r6
  80120c:	10001126 	beq	r2,zero,801254 <__adddf3+0x7e0>
  801210:	4004d0fa 	srli	r2,r8,3
  801214:	8822d0fa 	srli	r17,r17,3
  801218:	4010977a 	slli	r8,r8,29
  80121c:	10c0022c 	andhi	r3,r2,8
  801220:	4462b03a 	or	r17,r8,r17
  801224:	183feb26 	beq	r3,zero,8011d4 <__alt_data_end+0xff8011d4>
  801228:	4808d0fa 	srli	r4,r9,3
  80122c:	20c0022c 	andhi	r3,r4,8
  801230:	183fe81e 	bne	r3,zero,8011d4 <__alt_data_end+0xff8011d4>
  801234:	300cd0fa 	srli	r6,r6,3
  801238:	4806977a 	slli	r3,r9,29
  80123c:	2005883a 	mov	r2,r4
  801240:	19a2b03a 	or	r17,r3,r6
  801244:	003fe306 	br	8011d4 <__alt_data_end+0xff8011d4>
  801248:	0011883a 	mov	r8,zero
  80124c:	0005883a 	mov	r2,zero
  801250:	003e3f06 	br	800b50 <__alt_data_end+0xff800b50>
  801254:	0401ffc4 	movi	r16,2047
  801258:	003e2506 	br	800af0 <__alt_data_end+0xff800af0>
  80125c:	0013883a 	mov	r9,zero
  801260:	003f8406 	br	801074 <__alt_data_end+0xff801074>
  801264:	0005883a 	mov	r2,zero
  801268:	0007883a 	mov	r3,zero
  80126c:	003e8906 	br	800c94 <__alt_data_end+0xff800c94>
  801270:	197ff804 	addi	r5,r3,-32
  801274:	01000804 	movi	r4,32
  801278:	414ad83a 	srl	r5,r8,r5
  80127c:	19002426 	beq	r3,r4,801310 <__adddf3+0x89c>
  801280:	01001004 	movi	r4,64
  801284:	20c7c83a 	sub	r3,r4,r3
  801288:	40c6983a 	sll	r3,r8,r3
  80128c:	1c46b03a 	or	r3,r3,r17
  801290:	1806c03a 	cmpne	r3,r3,zero
  801294:	28e2b03a 	or	r17,r5,r3
  801298:	0007883a 	mov	r3,zero
  80129c:	003f2306 	br	800f2c <__alt_data_end+0xff800f2c>
  8012a0:	0007883a 	mov	r3,zero
  8012a4:	5811883a 	mov	r8,r11
  8012a8:	00bfffc4 	movi	r2,-1
  8012ac:	0401ffc4 	movi	r16,2047
  8012b0:	003e7806 	br	800c94 <__alt_data_end+0xff800c94>
  8012b4:	4462b03a 	or	r17,r8,r17
  8012b8:	8822c03a 	cmpne	r17,r17,zero
  8012bc:	0009883a 	mov	r4,zero
  8012c0:	003fa006 	br	801144 <__alt_data_end+0xff801144>
  8012c4:	4811883a 	mov	r8,r9
  8012c8:	3023883a 	mov	r17,r6
  8012cc:	0401ffc4 	movi	r16,2047
  8012d0:	003e0706 	br	800af0 <__alt_data_end+0xff800af0>
  8012d4:	4811883a 	mov	r8,r9
  8012d8:	3023883a 	mov	r17,r6
  8012dc:	003e0406 	br	800af0 <__alt_data_end+0xff800af0>
  8012e0:	21fff804 	addi	r7,r4,-32
  8012e4:	01400804 	movi	r5,32
  8012e8:	41ced83a 	srl	r7,r8,r7
  8012ec:	21400a26 	beq	r4,r5,801318 <__adddf3+0x8a4>
  8012f0:	01401004 	movi	r5,64
  8012f4:	2909c83a 	sub	r4,r5,r4
  8012f8:	4108983a 	sll	r4,r8,r4
  8012fc:	2448b03a 	or	r4,r4,r17
  801300:	2008c03a 	cmpne	r4,r4,zero
  801304:	3922b03a 	or	r17,r7,r4
  801308:	0009883a 	mov	r4,zero
  80130c:	003f8d06 	br	801144 <__alt_data_end+0xff801144>
  801310:	0007883a 	mov	r3,zero
  801314:	003fdd06 	br	80128c <__alt_data_end+0xff80128c>
  801318:	0009883a 	mov	r4,zero
  80131c:	003ff706 	br	8012fc <__alt_data_end+0xff8012fc>

00801320 <__muldf3>:
  801320:	defff304 	addi	sp,sp,-52
  801324:	2804d53a 	srli	r2,r5,20
  801328:	dd800915 	stw	r22,36(sp)
  80132c:	282cd7fa 	srli	r22,r5,31
  801330:	dc000315 	stw	r16,12(sp)
  801334:	04000434 	movhi	r16,16
  801338:	dd400815 	stw	r21,32(sp)
  80133c:	dc800515 	stw	r18,20(sp)
  801340:	843fffc4 	addi	r16,r16,-1
  801344:	dfc00c15 	stw	ra,48(sp)
  801348:	df000b15 	stw	fp,44(sp)
  80134c:	ddc00a15 	stw	r23,40(sp)
  801350:	dd000715 	stw	r20,28(sp)
  801354:	dcc00615 	stw	r19,24(sp)
  801358:	dc400415 	stw	r17,16(sp)
  80135c:	1481ffcc 	andi	r18,r2,2047
  801360:	2c20703a 	and	r16,r5,r16
  801364:	b02b883a 	mov	r21,r22
  801368:	b2403fcc 	andi	r9,r22,255
  80136c:	90006026 	beq	r18,zero,8014f0 <__muldf3+0x1d0>
  801370:	0081ffc4 	movi	r2,2047
  801374:	2029883a 	mov	r20,r4
  801378:	90803626 	beq	r18,r2,801454 <__muldf3+0x134>
  80137c:	80800434 	orhi	r2,r16,16
  801380:	100490fa 	slli	r2,r2,3
  801384:	2020d77a 	srli	r16,r4,29
  801388:	202890fa 	slli	r20,r4,3
  80138c:	94bf0044 	addi	r18,r18,-1023
  801390:	80a0b03a 	or	r16,r16,r2
  801394:	0027883a 	mov	r19,zero
  801398:	0039883a 	mov	fp,zero
  80139c:	3804d53a 	srli	r2,r7,20
  8013a0:	382ed7fa 	srli	r23,r7,31
  8013a4:	04400434 	movhi	r17,16
  8013a8:	8c7fffc4 	addi	r17,r17,-1
  8013ac:	1081ffcc 	andi	r2,r2,2047
  8013b0:	3011883a 	mov	r8,r6
  8013b4:	3c62703a 	and	r17,r7,r17
  8013b8:	ba803fcc 	andi	r10,r23,255
  8013bc:	10006d26 	beq	r2,zero,801574 <__muldf3+0x254>
  8013c0:	00c1ffc4 	movi	r3,2047
  8013c4:	10c06526 	beq	r2,r3,80155c <__muldf3+0x23c>
  8013c8:	88c00434 	orhi	r3,r17,16
  8013cc:	180690fa 	slli	r3,r3,3
  8013d0:	3022d77a 	srli	r17,r6,29
  8013d4:	301090fa 	slli	r8,r6,3
  8013d8:	10bf0044 	addi	r2,r2,-1023
  8013dc:	88e2b03a 	or	r17,r17,r3
  8013e0:	000b883a 	mov	r5,zero
  8013e4:	9085883a 	add	r2,r18,r2
  8013e8:	2cc8b03a 	or	r4,r5,r19
  8013ec:	00c003c4 	movi	r3,15
  8013f0:	bdacf03a 	xor	r22,r23,r22
  8013f4:	12c00044 	addi	r11,r2,1
  8013f8:	19009936 	bltu	r3,r4,801660 <__muldf3+0x340>
  8013fc:	200890ba 	slli	r4,r4,2
  801400:	00c02034 	movhi	r3,128
  801404:	18c50504 	addi	r3,r3,5140
  801408:	20c9883a 	add	r4,r4,r3
  80140c:	20c00017 	ldw	r3,0(r4)
  801410:	1800683a 	jmp	r3
  801414:	00801660 	cmpeqi	r2,zero,89
  801418:	00801474 	movhi	r2,81
  80141c:	00801474 	movhi	r2,81
  801420:	00801470 	cmpltui	r2,zero,81
  801424:	0080163c 	xorhi	r2,zero,88
  801428:	0080163c 	xorhi	r2,zero,88
  80142c:	00801624 	muli	r2,zero,88
  801430:	00801470 	cmpltui	r2,zero,81
  801434:	0080163c 	xorhi	r2,zero,88
  801438:	00801624 	muli	r2,zero,88
  80143c:	0080163c 	xorhi	r2,zero,88
  801440:	00801470 	cmpltui	r2,zero,81
  801444:	0080164c 	andi	r2,zero,89
  801448:	0080164c 	andi	r2,zero,89
  80144c:	0080164c 	andi	r2,zero,89
  801450:	00801868 	cmpgeui	r2,zero,97
  801454:	2404b03a 	or	r2,r4,r16
  801458:	10006f1e 	bne	r2,zero,801618 <__muldf3+0x2f8>
  80145c:	04c00204 	movi	r19,8
  801460:	0021883a 	mov	r16,zero
  801464:	0029883a 	mov	r20,zero
  801468:	07000084 	movi	fp,2
  80146c:	003fcb06 	br	80139c <__alt_data_end+0xff80139c>
  801470:	502d883a 	mov	r22,r10
  801474:	00800084 	movi	r2,2
  801478:	28805726 	beq	r5,r2,8015d8 <__muldf3+0x2b8>
  80147c:	008000c4 	movi	r2,3
  801480:	28816626 	beq	r5,r2,801a1c <__muldf3+0x6fc>
  801484:	00800044 	movi	r2,1
  801488:	2881411e 	bne	r5,r2,801990 <__muldf3+0x670>
  80148c:	b02b883a 	mov	r21,r22
  801490:	0005883a 	mov	r2,zero
  801494:	000b883a 	mov	r5,zero
  801498:	0029883a 	mov	r20,zero
  80149c:	1004953a 	slli	r2,r2,20
  8014a0:	a8c03fcc 	andi	r3,r21,255
  8014a4:	04400434 	movhi	r17,16
  8014a8:	8c7fffc4 	addi	r17,r17,-1
  8014ac:	180697fa 	slli	r3,r3,31
  8014b0:	2c4a703a 	and	r5,r5,r17
  8014b4:	288ab03a 	or	r5,r5,r2
  8014b8:	28c6b03a 	or	r3,r5,r3
  8014bc:	a005883a 	mov	r2,r20
  8014c0:	dfc00c17 	ldw	ra,48(sp)
  8014c4:	df000b17 	ldw	fp,44(sp)
  8014c8:	ddc00a17 	ldw	r23,40(sp)
  8014cc:	dd800917 	ldw	r22,36(sp)
  8014d0:	dd400817 	ldw	r21,32(sp)
  8014d4:	dd000717 	ldw	r20,28(sp)
  8014d8:	dcc00617 	ldw	r19,24(sp)
  8014dc:	dc800517 	ldw	r18,20(sp)
  8014e0:	dc400417 	ldw	r17,16(sp)
  8014e4:	dc000317 	ldw	r16,12(sp)
  8014e8:	dec00d04 	addi	sp,sp,52
  8014ec:	f800283a 	ret
  8014f0:	2404b03a 	or	r2,r4,r16
  8014f4:	2027883a 	mov	r19,r4
  8014f8:	10004226 	beq	r2,zero,801604 <__muldf3+0x2e4>
  8014fc:	8000fc26 	beq	r16,zero,8018f0 <__muldf3+0x5d0>
  801500:	8009883a 	mov	r4,r16
  801504:	d9800215 	stw	r6,8(sp)
  801508:	d9c00015 	stw	r7,0(sp)
  80150c:	da400115 	stw	r9,4(sp)
  801510:	0801d980 	call	801d98 <__clzsi2>
  801514:	d9800217 	ldw	r6,8(sp)
  801518:	d9c00017 	ldw	r7,0(sp)
  80151c:	da400117 	ldw	r9,4(sp)
  801520:	113ffd44 	addi	r4,r2,-11
  801524:	00c00704 	movi	r3,28
  801528:	1900ed16 	blt	r3,r4,8018e0 <__muldf3+0x5c0>
  80152c:	00c00744 	movi	r3,29
  801530:	147ffe04 	addi	r17,r2,-8
  801534:	1907c83a 	sub	r3,r3,r4
  801538:	8460983a 	sll	r16,r16,r17
  80153c:	98c6d83a 	srl	r3,r19,r3
  801540:	9c68983a 	sll	r20,r19,r17
  801544:	1c20b03a 	or	r16,r3,r16
  801548:	1080fcc4 	addi	r2,r2,1011
  80154c:	00a5c83a 	sub	r18,zero,r2
  801550:	0027883a 	mov	r19,zero
  801554:	0039883a 	mov	fp,zero
  801558:	003f9006 	br	80139c <__alt_data_end+0xff80139c>
  80155c:	3446b03a 	or	r3,r6,r17
  801560:	1800261e 	bne	r3,zero,8015fc <__muldf3+0x2dc>
  801564:	0023883a 	mov	r17,zero
  801568:	0011883a 	mov	r8,zero
  80156c:	01400084 	movi	r5,2
  801570:	003f9c06 	br	8013e4 <__alt_data_end+0xff8013e4>
  801574:	3446b03a 	or	r3,r6,r17
  801578:	18001c26 	beq	r3,zero,8015ec <__muldf3+0x2cc>
  80157c:	8800ce26 	beq	r17,zero,8018b8 <__muldf3+0x598>
  801580:	8809883a 	mov	r4,r17
  801584:	d9800215 	stw	r6,8(sp)
  801588:	da400115 	stw	r9,4(sp)
  80158c:	da800015 	stw	r10,0(sp)
  801590:	0801d980 	call	801d98 <__clzsi2>
  801594:	d9800217 	ldw	r6,8(sp)
  801598:	da400117 	ldw	r9,4(sp)
  80159c:	da800017 	ldw	r10,0(sp)
  8015a0:	113ffd44 	addi	r4,r2,-11
  8015a4:	00c00704 	movi	r3,28
  8015a8:	1900bf16 	blt	r3,r4,8018a8 <__muldf3+0x588>
  8015ac:	00c00744 	movi	r3,29
  8015b0:	123ffe04 	addi	r8,r2,-8
  8015b4:	1907c83a 	sub	r3,r3,r4
  8015b8:	8a22983a 	sll	r17,r17,r8
  8015bc:	30c6d83a 	srl	r3,r6,r3
  8015c0:	3210983a 	sll	r8,r6,r8
  8015c4:	1c62b03a 	or	r17,r3,r17
  8015c8:	1080fcc4 	addi	r2,r2,1011
  8015cc:	0085c83a 	sub	r2,zero,r2
  8015d0:	000b883a 	mov	r5,zero
  8015d4:	003f8306 	br	8013e4 <__alt_data_end+0xff8013e4>
  8015d8:	b02b883a 	mov	r21,r22
  8015dc:	0081ffc4 	movi	r2,2047
  8015e0:	000b883a 	mov	r5,zero
  8015e4:	0029883a 	mov	r20,zero
  8015e8:	003fac06 	br	80149c <__alt_data_end+0xff80149c>
  8015ec:	0023883a 	mov	r17,zero
  8015f0:	0011883a 	mov	r8,zero
  8015f4:	01400044 	movi	r5,1
  8015f8:	003f7a06 	br	8013e4 <__alt_data_end+0xff8013e4>
  8015fc:	014000c4 	movi	r5,3
  801600:	003f7806 	br	8013e4 <__alt_data_end+0xff8013e4>
  801604:	04c00104 	movi	r19,4
  801608:	0021883a 	mov	r16,zero
  80160c:	0029883a 	mov	r20,zero
  801610:	07000044 	movi	fp,1
  801614:	003f6106 	br	80139c <__alt_data_end+0xff80139c>
  801618:	04c00304 	movi	r19,12
  80161c:	070000c4 	movi	fp,3
  801620:	003f5e06 	br	80139c <__alt_data_end+0xff80139c>
  801624:	01400434 	movhi	r5,16
  801628:	002b883a 	mov	r21,zero
  80162c:	297fffc4 	addi	r5,r5,-1
  801630:	053fffc4 	movi	r20,-1
  801634:	0081ffc4 	movi	r2,2047
  801638:	003f9806 	br	80149c <__alt_data_end+0xff80149c>
  80163c:	8023883a 	mov	r17,r16
  801640:	a011883a 	mov	r8,r20
  801644:	e00b883a 	mov	r5,fp
  801648:	003f8a06 	br	801474 <__alt_data_end+0xff801474>
  80164c:	8023883a 	mov	r17,r16
  801650:	a011883a 	mov	r8,r20
  801654:	482d883a 	mov	r22,r9
  801658:	e00b883a 	mov	r5,fp
  80165c:	003f8506 	br	801474 <__alt_data_end+0xff801474>
  801660:	a00ad43a 	srli	r5,r20,16
  801664:	401ad43a 	srli	r13,r8,16
  801668:	a53fffcc 	andi	r20,r20,65535
  80166c:	423fffcc 	andi	r8,r8,65535
  801670:	4519383a 	mul	r12,r8,r20
  801674:	4147383a 	mul	r3,r8,r5
  801678:	6d09383a 	mul	r4,r13,r20
  80167c:	600cd43a 	srli	r6,r12,16
  801680:	2b5d383a 	mul	r14,r5,r13
  801684:	20c9883a 	add	r4,r4,r3
  801688:	310d883a 	add	r6,r6,r4
  80168c:	30c0022e 	bgeu	r6,r3,801698 <__muldf3+0x378>
  801690:	00c00074 	movhi	r3,1
  801694:	70dd883a 	add	r14,r14,r3
  801698:	8826d43a 	srli	r19,r17,16
  80169c:	8bffffcc 	andi	r15,r17,65535
  8016a0:	7d23383a 	mul	r17,r15,r20
  8016a4:	7949383a 	mul	r4,r15,r5
  8016a8:	9d29383a 	mul	r20,r19,r20
  8016ac:	8814d43a 	srli	r10,r17,16
  8016b0:	3012943a 	slli	r9,r6,16
  8016b4:	a129883a 	add	r20,r20,r4
  8016b8:	633fffcc 	andi	r12,r12,65535
  8016bc:	5515883a 	add	r10,r10,r20
  8016c0:	3006d43a 	srli	r3,r6,16
  8016c4:	4b13883a 	add	r9,r9,r12
  8016c8:	2ccb383a 	mul	r5,r5,r19
  8016cc:	5100022e 	bgeu	r10,r4,8016d8 <__muldf3+0x3b8>
  8016d0:	01000074 	movhi	r4,1
  8016d4:	290b883a 	add	r5,r5,r4
  8016d8:	802ad43a 	srli	r21,r16,16
  8016dc:	843fffcc 	andi	r16,r16,65535
  8016e0:	440d383a 	mul	r6,r8,r16
  8016e4:	4565383a 	mul	r18,r8,r21
  8016e8:	8349383a 	mul	r4,r16,r13
  8016ec:	500e943a 	slli	r7,r10,16
  8016f0:	3010d43a 	srli	r8,r6,16
  8016f4:	5028d43a 	srli	r20,r10,16
  8016f8:	2489883a 	add	r4,r4,r18
  8016fc:	8abfffcc 	andi	r10,r17,65535
  801700:	3a95883a 	add	r10,r7,r10
  801704:	4119883a 	add	r12,r8,r4
  801708:	a169883a 	add	r20,r20,r5
  80170c:	1a87883a 	add	r3,r3,r10
  801710:	6d5b383a 	mul	r13,r13,r21
  801714:	6480022e 	bgeu	r12,r18,801720 <__muldf3+0x400>
  801718:	01000074 	movhi	r4,1
  80171c:	691b883a 	add	r13,r13,r4
  801720:	7c25383a 	mul	r18,r15,r16
  801724:	7d4b383a 	mul	r5,r15,r21
  801728:	84cf383a 	mul	r7,r16,r19
  80172c:	901ed43a 	srli	r15,r18,16
  801730:	6008d43a 	srli	r4,r12,16
  801734:	6010943a 	slli	r8,r12,16
  801738:	394f883a 	add	r7,r7,r5
  80173c:	333fffcc 	andi	r12,r6,65535
  801740:	79df883a 	add	r15,r15,r7
  801744:	235b883a 	add	r13,r4,r13
  801748:	9d63383a 	mul	r17,r19,r21
  80174c:	4309883a 	add	r4,r8,r12
  801750:	7940022e 	bgeu	r15,r5,80175c <__muldf3+0x43c>
  801754:	01400074 	movhi	r5,1
  801758:	8963883a 	add	r17,r17,r5
  80175c:	780a943a 	slli	r5,r15,16
  801760:	91bfffcc 	andi	r6,r18,65535
  801764:	70c7883a 	add	r3,r14,r3
  801768:	298d883a 	add	r6,r5,r6
  80176c:	1a8f803a 	cmpltu	r7,r3,r10
  801770:	350b883a 	add	r5,r6,r20
  801774:	20c7883a 	add	r3,r4,r3
  801778:	3955883a 	add	r10,r7,r5
  80177c:	1909803a 	cmpltu	r4,r3,r4
  801780:	6a91883a 	add	r8,r13,r10
  801784:	780cd43a 	srli	r6,r15,16
  801788:	2219883a 	add	r12,r4,r8
  80178c:	2d0b803a 	cmpltu	r5,r5,r20
  801790:	51cf803a 	cmpltu	r7,r10,r7
  801794:	29ceb03a 	or	r7,r5,r7
  801798:	4351803a 	cmpltu	r8,r8,r13
  80179c:	610b803a 	cmpltu	r5,r12,r4
  8017a0:	4148b03a 	or	r4,r8,r5
  8017a4:	398f883a 	add	r7,r7,r6
  8017a8:	3909883a 	add	r4,r7,r4
  8017ac:	1810927a 	slli	r8,r3,9
  8017b0:	2449883a 	add	r4,r4,r17
  8017b4:	2008927a 	slli	r4,r4,9
  8017b8:	6022d5fa 	srli	r17,r12,23
  8017bc:	1806d5fa 	srli	r3,r3,23
  8017c0:	4252b03a 	or	r9,r8,r9
  8017c4:	600a927a 	slli	r5,r12,9
  8017c8:	4810c03a 	cmpne	r8,r9,zero
  8017cc:	2462b03a 	or	r17,r4,r17
  8017d0:	40c6b03a 	or	r3,r8,r3
  8017d4:	8900402c 	andhi	r4,r17,256
  8017d8:	1950b03a 	or	r8,r3,r5
  8017dc:	20000726 	beq	r4,zero,8017fc <__muldf3+0x4dc>
  8017e0:	4006d07a 	srli	r3,r8,1
  8017e4:	880497fa 	slli	r2,r17,31
  8017e8:	4200004c 	andi	r8,r8,1
  8017ec:	8822d07a 	srli	r17,r17,1
  8017f0:	1a10b03a 	or	r8,r3,r8
  8017f4:	1210b03a 	or	r8,r2,r8
  8017f8:	5805883a 	mov	r2,r11
  8017fc:	1140ffc4 	addi	r5,r2,1023
  801800:	0140440e 	bge	zero,r5,801914 <__muldf3+0x5f4>
  801804:	40c001cc 	andi	r3,r8,7
  801808:	18000726 	beq	r3,zero,801828 <__muldf3+0x508>
  80180c:	40c003cc 	andi	r3,r8,15
  801810:	01000104 	movi	r4,4
  801814:	19000426 	beq	r3,r4,801828 <__muldf3+0x508>
  801818:	4107883a 	add	r3,r8,r4
  80181c:	1a11803a 	cmpltu	r8,r3,r8
  801820:	8a23883a 	add	r17,r17,r8
  801824:	1811883a 	mov	r8,r3
  801828:	88c0402c 	andhi	r3,r17,256
  80182c:	18000426 	beq	r3,zero,801840 <__muldf3+0x520>
  801830:	11410004 	addi	r5,r2,1024
  801834:	00bfc034 	movhi	r2,65280
  801838:	10bfffc4 	addi	r2,r2,-1
  80183c:	88a2703a 	and	r17,r17,r2
  801840:	0081ff84 	movi	r2,2046
  801844:	117f6416 	blt	r2,r5,8015d8 <__alt_data_end+0xff8015d8>
  801848:	8828977a 	slli	r20,r17,29
  80184c:	4010d0fa 	srli	r8,r8,3
  801850:	8822927a 	slli	r17,r17,9
  801854:	2881ffcc 	andi	r2,r5,2047
  801858:	a228b03a 	or	r20,r20,r8
  80185c:	880ad33a 	srli	r5,r17,12
  801860:	b02b883a 	mov	r21,r22
  801864:	003f0d06 	br	80149c <__alt_data_end+0xff80149c>
  801868:	8080022c 	andhi	r2,r16,8
  80186c:	10000926 	beq	r2,zero,801894 <__muldf3+0x574>
  801870:	8880022c 	andhi	r2,r17,8
  801874:	1000071e 	bne	r2,zero,801894 <__muldf3+0x574>
  801878:	00800434 	movhi	r2,16
  80187c:	89400234 	orhi	r5,r17,8
  801880:	10bfffc4 	addi	r2,r2,-1
  801884:	b82b883a 	mov	r21,r23
  801888:	288a703a 	and	r5,r5,r2
  80188c:	4029883a 	mov	r20,r8
  801890:	003f6806 	br	801634 <__alt_data_end+0xff801634>
  801894:	00800434 	movhi	r2,16
  801898:	81400234 	orhi	r5,r16,8
  80189c:	10bfffc4 	addi	r2,r2,-1
  8018a0:	288a703a 	and	r5,r5,r2
  8018a4:	003f6306 	br	801634 <__alt_data_end+0xff801634>
  8018a8:	147ff604 	addi	r17,r2,-40
  8018ac:	3462983a 	sll	r17,r6,r17
  8018b0:	0011883a 	mov	r8,zero
  8018b4:	003f4406 	br	8015c8 <__alt_data_end+0xff8015c8>
  8018b8:	3009883a 	mov	r4,r6
  8018bc:	d9800215 	stw	r6,8(sp)
  8018c0:	da400115 	stw	r9,4(sp)
  8018c4:	da800015 	stw	r10,0(sp)
  8018c8:	0801d980 	call	801d98 <__clzsi2>
  8018cc:	10800804 	addi	r2,r2,32
  8018d0:	da800017 	ldw	r10,0(sp)
  8018d4:	da400117 	ldw	r9,4(sp)
  8018d8:	d9800217 	ldw	r6,8(sp)
  8018dc:	003f3006 	br	8015a0 <__alt_data_end+0xff8015a0>
  8018e0:	143ff604 	addi	r16,r2,-40
  8018e4:	9c20983a 	sll	r16,r19,r16
  8018e8:	0029883a 	mov	r20,zero
  8018ec:	003f1606 	br	801548 <__alt_data_end+0xff801548>
  8018f0:	d9800215 	stw	r6,8(sp)
  8018f4:	d9c00015 	stw	r7,0(sp)
  8018f8:	da400115 	stw	r9,4(sp)
  8018fc:	0801d980 	call	801d98 <__clzsi2>
  801900:	10800804 	addi	r2,r2,32
  801904:	da400117 	ldw	r9,4(sp)
  801908:	d9c00017 	ldw	r7,0(sp)
  80190c:	d9800217 	ldw	r6,8(sp)
  801910:	003f0306 	br	801520 <__alt_data_end+0xff801520>
  801914:	00c00044 	movi	r3,1
  801918:	1947c83a 	sub	r3,r3,r5
  80191c:	00800e04 	movi	r2,56
  801920:	10feda16 	blt	r2,r3,80148c <__alt_data_end+0xff80148c>
  801924:	008007c4 	movi	r2,31
  801928:	10c01b16 	blt	r2,r3,801998 <__muldf3+0x678>
  80192c:	00800804 	movi	r2,32
  801930:	10c5c83a 	sub	r2,r2,r3
  801934:	888a983a 	sll	r5,r17,r2
  801938:	40c8d83a 	srl	r4,r8,r3
  80193c:	4084983a 	sll	r2,r8,r2
  801940:	88e2d83a 	srl	r17,r17,r3
  801944:	2906b03a 	or	r3,r5,r4
  801948:	1004c03a 	cmpne	r2,r2,zero
  80194c:	1886b03a 	or	r3,r3,r2
  801950:	188001cc 	andi	r2,r3,7
  801954:	10000726 	beq	r2,zero,801974 <__muldf3+0x654>
  801958:	188003cc 	andi	r2,r3,15
  80195c:	01000104 	movi	r4,4
  801960:	11000426 	beq	r2,r4,801974 <__muldf3+0x654>
  801964:	1805883a 	mov	r2,r3
  801968:	10c00104 	addi	r3,r2,4
  80196c:	1885803a 	cmpltu	r2,r3,r2
  801970:	88a3883a 	add	r17,r17,r2
  801974:	8880202c 	andhi	r2,r17,128
  801978:	10001c26 	beq	r2,zero,8019ec <__muldf3+0x6cc>
  80197c:	b02b883a 	mov	r21,r22
  801980:	00800044 	movi	r2,1
  801984:	000b883a 	mov	r5,zero
  801988:	0029883a 	mov	r20,zero
  80198c:	003ec306 	br	80149c <__alt_data_end+0xff80149c>
  801990:	5805883a 	mov	r2,r11
  801994:	003f9906 	br	8017fc <__alt_data_end+0xff8017fc>
  801998:	00bff844 	movi	r2,-31
  80199c:	1145c83a 	sub	r2,r2,r5
  8019a0:	8888d83a 	srl	r4,r17,r2
  8019a4:	00800804 	movi	r2,32
  8019a8:	18801a26 	beq	r3,r2,801a14 <__muldf3+0x6f4>
  8019ac:	00801004 	movi	r2,64
  8019b0:	10c5c83a 	sub	r2,r2,r3
  8019b4:	8884983a 	sll	r2,r17,r2
  8019b8:	1204b03a 	or	r2,r2,r8
  8019bc:	1004c03a 	cmpne	r2,r2,zero
  8019c0:	2084b03a 	or	r2,r4,r2
  8019c4:	144001cc 	andi	r17,r2,7
  8019c8:	88000d1e 	bne	r17,zero,801a00 <__muldf3+0x6e0>
  8019cc:	000b883a 	mov	r5,zero
  8019d0:	1028d0fa 	srli	r20,r2,3
  8019d4:	b02b883a 	mov	r21,r22
  8019d8:	0005883a 	mov	r2,zero
  8019dc:	a468b03a 	or	r20,r20,r17
  8019e0:	003eae06 	br	80149c <__alt_data_end+0xff80149c>
  8019e4:	1007883a 	mov	r3,r2
  8019e8:	0023883a 	mov	r17,zero
  8019ec:	880a927a 	slli	r5,r17,9
  8019f0:	1805883a 	mov	r2,r3
  8019f4:	8822977a 	slli	r17,r17,29
  8019f8:	280ad33a 	srli	r5,r5,12
  8019fc:	003ff406 	br	8019d0 <__alt_data_end+0xff8019d0>
  801a00:	10c003cc 	andi	r3,r2,15
  801a04:	01000104 	movi	r4,4
  801a08:	193ff626 	beq	r3,r4,8019e4 <__alt_data_end+0xff8019e4>
  801a0c:	0023883a 	mov	r17,zero
  801a10:	003fd506 	br	801968 <__alt_data_end+0xff801968>
  801a14:	0005883a 	mov	r2,zero
  801a18:	003fe706 	br	8019b8 <__alt_data_end+0xff8019b8>
  801a1c:	00800434 	movhi	r2,16
  801a20:	89400234 	orhi	r5,r17,8
  801a24:	10bfffc4 	addi	r2,r2,-1
  801a28:	b02b883a 	mov	r21,r22
  801a2c:	288a703a 	and	r5,r5,r2
  801a30:	4029883a 	mov	r20,r8
  801a34:	003eff06 	br	801634 <__alt_data_end+0xff801634>

00801a38 <__floatunsidf>:
  801a38:	defffe04 	addi	sp,sp,-8
  801a3c:	dc000015 	stw	r16,0(sp)
  801a40:	dfc00115 	stw	ra,4(sp)
  801a44:	2021883a 	mov	r16,r4
  801a48:	20002226 	beq	r4,zero,801ad4 <__floatunsidf+0x9c>
  801a4c:	0801d980 	call	801d98 <__clzsi2>
  801a50:	01010784 	movi	r4,1054
  801a54:	2089c83a 	sub	r4,r4,r2
  801a58:	01810cc4 	movi	r6,1075
  801a5c:	310dc83a 	sub	r6,r6,r4
  801a60:	00c007c4 	movi	r3,31
  801a64:	1980120e 	bge	r3,r6,801ab0 <__floatunsidf+0x78>
  801a68:	00c104c4 	movi	r3,1043
  801a6c:	1907c83a 	sub	r3,r3,r4
  801a70:	80ca983a 	sll	r5,r16,r3
  801a74:	00800434 	movhi	r2,16
  801a78:	10bfffc4 	addi	r2,r2,-1
  801a7c:	2101ffcc 	andi	r4,r4,2047
  801a80:	0021883a 	mov	r16,zero
  801a84:	288a703a 	and	r5,r5,r2
  801a88:	2008953a 	slli	r4,r4,20
  801a8c:	00c00434 	movhi	r3,16
  801a90:	18ffffc4 	addi	r3,r3,-1
  801a94:	28c6703a 	and	r3,r5,r3
  801a98:	8005883a 	mov	r2,r16
  801a9c:	1906b03a 	or	r3,r3,r4
  801aa0:	dfc00117 	ldw	ra,4(sp)
  801aa4:	dc000017 	ldw	r16,0(sp)
  801aa8:	dec00204 	addi	sp,sp,8
  801aac:	f800283a 	ret
  801ab0:	00c002c4 	movi	r3,11
  801ab4:	188bc83a 	sub	r5,r3,r2
  801ab8:	814ad83a 	srl	r5,r16,r5
  801abc:	00c00434 	movhi	r3,16
  801ac0:	18ffffc4 	addi	r3,r3,-1
  801ac4:	81a0983a 	sll	r16,r16,r6
  801ac8:	2101ffcc 	andi	r4,r4,2047
  801acc:	28ca703a 	and	r5,r5,r3
  801ad0:	003fed06 	br	801a88 <__alt_data_end+0xff801a88>
  801ad4:	0009883a 	mov	r4,zero
  801ad8:	000b883a 	mov	r5,zero
  801adc:	003fea06 	br	801a88 <__alt_data_end+0xff801a88>

00801ae0 <__extendsfdf2>:
  801ae0:	200ad5fa 	srli	r5,r4,23
  801ae4:	defffd04 	addi	sp,sp,-12
  801ae8:	dc400115 	stw	r17,4(sp)
  801aec:	29403fcc 	andi	r5,r5,255
  801af0:	29800044 	addi	r6,r5,1
  801af4:	04402034 	movhi	r17,128
  801af8:	dc000015 	stw	r16,0(sp)
  801afc:	8c7fffc4 	addi	r17,r17,-1
  801b00:	dfc00215 	stw	ra,8(sp)
  801b04:	31803fcc 	andi	r6,r6,255
  801b08:	00800044 	movi	r2,1
  801b0c:	8922703a 	and	r17,r17,r4
  801b10:	2020d7fa 	srli	r16,r4,31
  801b14:	1180110e 	bge	r2,r6,801b5c <__extendsfdf2+0x7c>
  801b18:	880cd0fa 	srli	r6,r17,3
  801b1c:	8822977a 	slli	r17,r17,29
  801b20:	2940e004 	addi	r5,r5,896
  801b24:	2941ffcc 	andi	r5,r5,2047
  801b28:	2804953a 	slli	r2,r5,20
  801b2c:	01400434 	movhi	r5,16
  801b30:	800697fa 	slli	r3,r16,31
  801b34:	297fffc4 	addi	r5,r5,-1
  801b38:	314a703a 	and	r5,r6,r5
  801b3c:	288ab03a 	or	r5,r5,r2
  801b40:	28c6b03a 	or	r3,r5,r3
  801b44:	8805883a 	mov	r2,r17
  801b48:	dfc00217 	ldw	ra,8(sp)
  801b4c:	dc400117 	ldw	r17,4(sp)
  801b50:	dc000017 	ldw	r16,0(sp)
  801b54:	dec00304 	addi	sp,sp,12
  801b58:	f800283a 	ret
  801b5c:	2800111e 	bne	r5,zero,801ba4 <__extendsfdf2+0xc4>
  801b60:	88001c26 	beq	r17,zero,801bd4 <__extendsfdf2+0xf4>
  801b64:	8809883a 	mov	r4,r17
  801b68:	0801d980 	call	801d98 <__clzsi2>
  801b6c:	00c00284 	movi	r3,10
  801b70:	18801b16 	blt	r3,r2,801be0 <__extendsfdf2+0x100>
  801b74:	018002c4 	movi	r6,11
  801b78:	308dc83a 	sub	r6,r6,r2
  801b7c:	11000544 	addi	r4,r2,21
  801b80:	8986d83a 	srl	r3,r17,r6
  801b84:	8922983a 	sll	r17,r17,r4
  801b88:	0180e244 	movi	r6,905
  801b8c:	01400434 	movhi	r5,16
  801b90:	3085c83a 	sub	r2,r6,r2
  801b94:	297fffc4 	addi	r5,r5,-1
  801b98:	194c703a 	and	r6,r3,r5
  801b9c:	1141ffcc 	andi	r5,r2,2047
  801ba0:	003fe006 	br	801b24 <__alt_data_end+0xff801b24>
  801ba4:	88000826 	beq	r17,zero,801bc8 <__extendsfdf2+0xe8>
  801ba8:	880cd0fa 	srli	r6,r17,3
  801bac:	00800434 	movhi	r2,16
  801bb0:	10bfffc4 	addi	r2,r2,-1
  801bb4:	31800234 	orhi	r6,r6,8
  801bb8:	8822977a 	slli	r17,r17,29
  801bbc:	308c703a 	and	r6,r6,r2
  801bc0:	0141ffc4 	movi	r5,2047
  801bc4:	003fd706 	br	801b24 <__alt_data_end+0xff801b24>
  801bc8:	0141ffc4 	movi	r5,2047
  801bcc:	000d883a 	mov	r6,zero
  801bd0:	003fd406 	br	801b24 <__alt_data_end+0xff801b24>
  801bd4:	000b883a 	mov	r5,zero
  801bd8:	000d883a 	mov	r6,zero
  801bdc:	003fd106 	br	801b24 <__alt_data_end+0xff801b24>
  801be0:	11bffd44 	addi	r6,r2,-11
  801be4:	8986983a 	sll	r3,r17,r6
  801be8:	0023883a 	mov	r17,zero
  801bec:	003fe606 	br	801b88 <__alt_data_end+0xff801b88>

00801bf0 <__truncdfsf2>:
  801bf0:	2810d53a 	srli	r8,r5,20
  801bf4:	01c00434 	movhi	r7,16
  801bf8:	39ffffc4 	addi	r7,r7,-1
  801bfc:	29ce703a 	and	r7,r5,r7
  801c00:	4201ffcc 	andi	r8,r8,2047
  801c04:	380e90fa 	slli	r7,r7,3
  801c08:	200cd77a 	srli	r6,r4,29
  801c0c:	42400044 	addi	r9,r8,1
  801c10:	4a41ffcc 	andi	r9,r9,2047
  801c14:	00c00044 	movi	r3,1
  801c18:	280ad7fa 	srli	r5,r5,31
  801c1c:	31ceb03a 	or	r7,r6,r7
  801c20:	200490fa 	slli	r2,r4,3
  801c24:	1a40230e 	bge	r3,r9,801cb4 <__truncdfsf2+0xc4>
  801c28:	40ff2004 	addi	r3,r8,-896
  801c2c:	01803f84 	movi	r6,254
  801c30:	30c01516 	blt	r6,r3,801c88 <__truncdfsf2+0x98>
  801c34:	00c0380e 	bge	zero,r3,801d18 <__truncdfsf2+0x128>
  801c38:	200c91ba 	slli	r6,r4,6
  801c3c:	380e90fa 	slli	r7,r7,3
  801c40:	1004d77a 	srli	r2,r2,29
  801c44:	300cc03a 	cmpne	r6,r6,zero
  801c48:	31ccb03a 	or	r6,r6,r7
  801c4c:	308cb03a 	or	r6,r6,r2
  801c50:	308001cc 	andi	r2,r6,7
  801c54:	10000426 	beq	r2,zero,801c68 <__truncdfsf2+0x78>
  801c58:	308003cc 	andi	r2,r6,15
  801c5c:	01000104 	movi	r4,4
  801c60:	11000126 	beq	r2,r4,801c68 <__truncdfsf2+0x78>
  801c64:	31800104 	addi	r6,r6,4
  801c68:	3081002c 	andhi	r2,r6,1024
  801c6c:	10001626 	beq	r2,zero,801cc8 <__truncdfsf2+0xd8>
  801c70:	18c00044 	addi	r3,r3,1
  801c74:	00803fc4 	movi	r2,255
  801c78:	18800326 	beq	r3,r2,801c88 <__truncdfsf2+0x98>
  801c7c:	300c91ba 	slli	r6,r6,6
  801c80:	300cd27a 	srli	r6,r6,9
  801c84:	00000206 	br	801c90 <__truncdfsf2+0xa0>
  801c88:	00ffffc4 	movi	r3,-1
  801c8c:	000d883a 	mov	r6,zero
  801c90:	18c03fcc 	andi	r3,r3,255
  801c94:	180895fa 	slli	r4,r3,23
  801c98:	00c02034 	movhi	r3,128
  801c9c:	280a97fa 	slli	r5,r5,31
  801ca0:	18ffffc4 	addi	r3,r3,-1
  801ca4:	30c6703a 	and	r3,r6,r3
  801ca8:	1906b03a 	or	r3,r3,r4
  801cac:	1944b03a 	or	r2,r3,r5
  801cb0:	f800283a 	ret
  801cb4:	40000b1e 	bne	r8,zero,801ce4 <__truncdfsf2+0xf4>
  801cb8:	388cb03a 	or	r6,r7,r2
  801cbc:	0007883a 	mov	r3,zero
  801cc0:	30000426 	beq	r6,zero,801cd4 <__truncdfsf2+0xe4>
  801cc4:	01800144 	movi	r6,5
  801cc8:	00803fc4 	movi	r2,255
  801ccc:	300cd0fa 	srli	r6,r6,3
  801cd0:	18800a26 	beq	r3,r2,801cfc <__truncdfsf2+0x10c>
  801cd4:	00802034 	movhi	r2,128
  801cd8:	10bfffc4 	addi	r2,r2,-1
  801cdc:	308c703a 	and	r6,r6,r2
  801ce0:	003feb06 	br	801c90 <__alt_data_end+0xff801c90>
  801ce4:	3888b03a 	or	r4,r7,r2
  801ce8:	203fe726 	beq	r4,zero,801c88 <__alt_data_end+0xff801c88>
  801cec:	380c90fa 	slli	r6,r7,3
  801cf0:	00c03fc4 	movi	r3,255
  801cf4:	31808034 	orhi	r6,r6,512
  801cf8:	003fd506 	br	801c50 <__alt_data_end+0xff801c50>
  801cfc:	303fe226 	beq	r6,zero,801c88 <__alt_data_end+0xff801c88>
  801d00:	00802034 	movhi	r2,128
  801d04:	31801034 	orhi	r6,r6,64
  801d08:	10bfffc4 	addi	r2,r2,-1
  801d0c:	00ffffc4 	movi	r3,-1
  801d10:	308c703a 	and	r6,r6,r2
  801d14:	003fde06 	br	801c90 <__alt_data_end+0xff801c90>
  801d18:	013ffa44 	movi	r4,-23
  801d1c:	19000e16 	blt	r3,r4,801d58 <__truncdfsf2+0x168>
  801d20:	01000784 	movi	r4,30
  801d24:	20c9c83a 	sub	r4,r4,r3
  801d28:	018007c4 	movi	r6,31
  801d2c:	39c02034 	orhi	r7,r7,128
  801d30:	31000b16 	blt	r6,r4,801d60 <__truncdfsf2+0x170>
  801d34:	423f2084 	addi	r8,r8,-894
  801d38:	120c983a 	sll	r6,r2,r8
  801d3c:	3a0e983a 	sll	r7,r7,r8
  801d40:	1104d83a 	srl	r2,r2,r4
  801d44:	300cc03a 	cmpne	r6,r6,zero
  801d48:	31ceb03a 	or	r7,r6,r7
  801d4c:	388cb03a 	or	r6,r7,r2
  801d50:	0007883a 	mov	r3,zero
  801d54:	003fbe06 	br	801c50 <__alt_data_end+0xff801c50>
  801d58:	0007883a 	mov	r3,zero
  801d5c:	003fd906 	br	801cc4 <__alt_data_end+0xff801cc4>
  801d60:	01bfff84 	movi	r6,-2
  801d64:	30cdc83a 	sub	r6,r6,r3
  801d68:	00c00804 	movi	r3,32
  801d6c:	398cd83a 	srl	r6,r7,r6
  801d70:	20c00726 	beq	r4,r3,801d90 <__truncdfsf2+0x1a0>
  801d74:	423f2884 	addi	r8,r8,-862
  801d78:	3a0e983a 	sll	r7,r7,r8
  801d7c:	3884b03a 	or	r2,r7,r2
  801d80:	1004c03a 	cmpne	r2,r2,zero
  801d84:	118cb03a 	or	r6,r2,r6
  801d88:	0007883a 	mov	r3,zero
  801d8c:	003fb006 	br	801c50 <__alt_data_end+0xff801c50>
  801d90:	000f883a 	mov	r7,zero
  801d94:	003ff906 	br	801d7c <__alt_data_end+0xff801d7c>

00801d98 <__clzsi2>:
  801d98:	00bfffd4 	movui	r2,65535
  801d9c:	11000536 	bltu	r2,r4,801db4 <__clzsi2+0x1c>
  801da0:	00803fc4 	movi	r2,255
  801da4:	11000f36 	bltu	r2,r4,801de4 <__clzsi2+0x4c>
  801da8:	00800804 	movi	r2,32
  801dac:	0007883a 	mov	r3,zero
  801db0:	00000506 	br	801dc8 <__clzsi2+0x30>
  801db4:	00804034 	movhi	r2,256
  801db8:	10bfffc4 	addi	r2,r2,-1
  801dbc:	11000c2e 	bgeu	r2,r4,801df0 <__clzsi2+0x58>
  801dc0:	00800204 	movi	r2,8
  801dc4:	00c00604 	movi	r3,24
  801dc8:	20c8d83a 	srl	r4,r4,r3
  801dcc:	00c02074 	movhi	r3,129
  801dd0:	18c32d04 	addi	r3,r3,3252
  801dd4:	1909883a 	add	r4,r3,r4
  801dd8:	20c00003 	ldbu	r3,0(r4)
  801ddc:	10c5c83a 	sub	r2,r2,r3
  801de0:	f800283a 	ret
  801de4:	00800604 	movi	r2,24
  801de8:	00c00204 	movi	r3,8
  801dec:	003ff606 	br	801dc8 <__alt_data_end+0xff801dc8>
  801df0:	00800404 	movi	r2,16
  801df4:	1007883a 	mov	r3,r2
  801df8:	003ff306 	br	801dc8 <__alt_data_end+0xff801dc8>

00801dfc <fcvt>:
  801dfc:	defffd04 	addi	sp,sp,-12
  801e00:	d8800317 	ldw	r2,12(sp)
  801e04:	d8000115 	stw	zero,4(sp)
  801e08:	dfc00215 	stw	ra,8(sp)
  801e0c:	d8800015 	stw	r2,0(sp)
  801e10:	08060280 	call	806028 <fcvtbuf>
  801e14:	dfc00217 	ldw	ra,8(sp)
  801e18:	dec00304 	addi	sp,sp,12
  801e1c:	f800283a 	ret

00801e20 <fcvtf>:
  801e20:	defffa04 	addi	sp,sp,-24
  801e24:	dfc00515 	stw	ra,20(sp)
  801e28:	dc800415 	stw	r18,16(sp)
  801e2c:	dc400315 	stw	r17,12(sp)
  801e30:	3025883a 	mov	r18,r6
  801e34:	3823883a 	mov	r17,r7
  801e38:	dc000215 	stw	r16,8(sp)
  801e3c:	2821883a 	mov	r16,r5
  801e40:	0801ae00 	call	801ae0 <__extendsfdf2>
  801e44:	900f883a 	mov	r7,r18
  801e48:	d8000115 	stw	zero,4(sp)
  801e4c:	dc400015 	stw	r17,0(sp)
  801e50:	800d883a 	mov	r6,r16
  801e54:	1009883a 	mov	r4,r2
  801e58:	180b883a 	mov	r5,r3
  801e5c:	08060280 	call	806028 <fcvtbuf>
  801e60:	dfc00517 	ldw	ra,20(sp)
  801e64:	dc800417 	ldw	r18,16(sp)
  801e68:	dc400317 	ldw	r17,12(sp)
  801e6c:	dc000217 	ldw	r16,8(sp)
  801e70:	dec00604 	addi	sp,sp,24
  801e74:	f800283a 	ret

00801e78 <ecvt>:
  801e78:	defffd04 	addi	sp,sp,-12
  801e7c:	d8800317 	ldw	r2,12(sp)
  801e80:	d8000115 	stw	zero,4(sp)
  801e84:	dfc00215 	stw	ra,8(sp)
  801e88:	d8800015 	stw	r2,0(sp)
  801e8c:	08061cc0 	call	8061cc <ecvtbuf>
  801e90:	dfc00217 	ldw	ra,8(sp)
  801e94:	dec00304 	addi	sp,sp,12
  801e98:	f800283a 	ret

00801e9c <ecvtf>:
  801e9c:	defffa04 	addi	sp,sp,-24
  801ea0:	dfc00515 	stw	ra,20(sp)
  801ea4:	dc800415 	stw	r18,16(sp)
  801ea8:	dc400315 	stw	r17,12(sp)
  801eac:	3025883a 	mov	r18,r6
  801eb0:	3823883a 	mov	r17,r7
  801eb4:	dc000215 	stw	r16,8(sp)
  801eb8:	2821883a 	mov	r16,r5
  801ebc:	0801ae00 	call	801ae0 <__extendsfdf2>
  801ec0:	900f883a 	mov	r7,r18
  801ec4:	d8000115 	stw	zero,4(sp)
  801ec8:	dc400015 	stw	r17,0(sp)
  801ecc:	800d883a 	mov	r6,r16
  801ed0:	1009883a 	mov	r4,r2
  801ed4:	180b883a 	mov	r5,r3
  801ed8:	08061cc0 	call	8061cc <ecvtbuf>
  801edc:	dfc00517 	ldw	ra,20(sp)
  801ee0:	dc800417 	ldw	r18,16(sp)
  801ee4:	dc400317 	ldw	r17,12(sp)
  801ee8:	dc000217 	ldw	r16,8(sp)
  801eec:	dec00604 	addi	sp,sp,24
  801ef0:	f800283a 	ret

00801ef4 <gcvt>:
  801ef4:	defff804 	addi	sp,sp,-32
  801ef8:	dc400415 	stw	r17,16(sp)
  801efc:	dc000315 	stw	r16,12(sp)
  801f00:	3023883a 	mov	r17,r6
  801f04:	3821883a 	mov	r16,r7
  801f08:	000d883a 	mov	r6,zero
  801f0c:	000f883a 	mov	r7,zero
  801f10:	dcc00615 	stw	r19,24(sp)
  801f14:	dc800515 	stw	r18,20(sp)
  801f18:	dfc00715 	stw	ra,28(sp)
  801f1c:	2027883a 	mov	r19,r4
  801f20:	2825883a 	mov	r18,r5
  801f24:	080d8900 	call	80d890 <__ledf2>
  801f28:	10001516 	blt	r2,zero,801f80 <gcvt+0x8c>
  801f2c:	8005883a 	mov	r2,r16
  801f30:	00c02074 	movhi	r3,129
  801f34:	18da8904 	addi	r3,r3,27172
  801f38:	d8000215 	stw	zero,8(sp)
  801f3c:	19000017 	ldw	r4,0(r3)
  801f40:	00c019c4 	movi	r3,103
  801f44:	d8c00115 	stw	r3,4(sp)
  801f48:	d8800015 	stw	r2,0(sp)
  801f4c:	880f883a 	mov	r7,r17
  801f50:	980b883a 	mov	r5,r19
  801f54:	900d883a 	mov	r6,r18
  801f58:	080630c0 	call	80630c <_gcvt>
  801f5c:	10000126 	beq	r2,zero,801f64 <gcvt+0x70>
  801f60:	8005883a 	mov	r2,r16
  801f64:	dfc00717 	ldw	ra,28(sp)
  801f68:	dcc00617 	ldw	r19,24(sp)
  801f6c:	dc800517 	ldw	r18,20(sp)
  801f70:	dc400417 	ldw	r17,16(sp)
  801f74:	dc000317 	ldw	r16,12(sp)
  801f78:	dec00804 	addi	sp,sp,32
  801f7c:	f800283a 	ret
  801f80:	00800b44 	movi	r2,45
  801f84:	80800005 	stb	r2,0(r16)
  801f88:	8c7fffc4 	addi	r17,r17,-1
  801f8c:	80800044 	addi	r2,r16,1
  801f90:	003fe706 	br	801f30 <__alt_data_end+0xff801f30>

00801f94 <gcvtf>:
  801f94:	defffd04 	addi	sp,sp,-12
  801f98:	dc400115 	stw	r17,4(sp)
  801f9c:	dc000015 	stw	r16,0(sp)
  801fa0:	3023883a 	mov	r17,r6
  801fa4:	2821883a 	mov	r16,r5
  801fa8:	dfc00215 	stw	ra,8(sp)
  801fac:	0801ae00 	call	801ae0 <__extendsfdf2>
  801fb0:	880f883a 	mov	r7,r17
  801fb4:	800d883a 	mov	r6,r16
  801fb8:	1009883a 	mov	r4,r2
  801fbc:	180b883a 	mov	r5,r3
  801fc0:	dfc00217 	ldw	ra,8(sp)
  801fc4:	dc400117 	ldw	r17,4(sp)
  801fc8:	dc000017 	ldw	r16,0(sp)
  801fcc:	dec00304 	addi	sp,sp,12
  801fd0:	0801ef41 	jmpi	801ef4 <gcvt>

00801fd4 <_printf_r>:
  801fd4:	defffd04 	addi	sp,sp,-12
  801fd8:	2805883a 	mov	r2,r5
  801fdc:	dfc00015 	stw	ra,0(sp)
  801fe0:	d9800115 	stw	r6,4(sp)
  801fe4:	d9c00215 	stw	r7,8(sp)
  801fe8:	21400217 	ldw	r5,8(r4)
  801fec:	d9c00104 	addi	r7,sp,4
  801ff0:	100d883a 	mov	r6,r2
  801ff4:	08021ac0 	call	8021ac <___vfprintf_internal_r>
  801ff8:	dfc00017 	ldw	ra,0(sp)
  801ffc:	dec00304 	addi	sp,sp,12
  802000:	f800283a 	ret

00802004 <printf>:
  802004:	defffc04 	addi	sp,sp,-16
  802008:	dfc00015 	stw	ra,0(sp)
  80200c:	d9400115 	stw	r5,4(sp)
  802010:	d9800215 	stw	r6,8(sp)
  802014:	d9c00315 	stw	r7,12(sp)
  802018:	00802074 	movhi	r2,129
  80201c:	109a8904 	addi	r2,r2,27172
  802020:	10800017 	ldw	r2,0(r2)
  802024:	200b883a 	mov	r5,r4
  802028:	d9800104 	addi	r6,sp,4
  80202c:	11000217 	ldw	r4,8(r2)
  802030:	08043a40 	call	8043a4 <__vfprintf_internal>
  802034:	dfc00017 	ldw	ra,0(sp)
  802038:	dec00404 	addi	sp,sp,16
  80203c:	f800283a 	ret

00802040 <_puts_r>:
  802040:	defff604 	addi	sp,sp,-40
  802044:	dc000715 	stw	r16,28(sp)
  802048:	2021883a 	mov	r16,r4
  80204c:	2809883a 	mov	r4,r5
  802050:	dc400815 	stw	r17,32(sp)
  802054:	dfc00915 	stw	ra,36(sp)
  802058:	2823883a 	mov	r17,r5
  80205c:	08021140 	call	802114 <strlen>
  802060:	10c00044 	addi	r3,r2,1
  802064:	d8800115 	stw	r2,4(sp)
  802068:	00802074 	movhi	r2,129
  80206c:	10836e04 	addi	r2,r2,3512
  802070:	d8800215 	stw	r2,8(sp)
  802074:	00800044 	movi	r2,1
  802078:	d8800315 	stw	r2,12(sp)
  80207c:	00800084 	movi	r2,2
  802080:	dc400015 	stw	r17,0(sp)
  802084:	d8c00615 	stw	r3,24(sp)
  802088:	dec00415 	stw	sp,16(sp)
  80208c:	d8800515 	stw	r2,20(sp)
  802090:	80000226 	beq	r16,zero,80209c <_puts_r+0x5c>
  802094:	80800e17 	ldw	r2,56(r16)
  802098:	10001426 	beq	r2,zero,8020ec <_puts_r+0xac>
  80209c:	81400217 	ldw	r5,8(r16)
  8020a0:	2880030b 	ldhu	r2,12(r5)
  8020a4:	10c8000c 	andi	r3,r2,8192
  8020a8:	1800061e 	bne	r3,zero,8020c4 <_puts_r+0x84>
  8020ac:	29001917 	ldw	r4,100(r5)
  8020b0:	00f7ffc4 	movi	r3,-8193
  8020b4:	10880014 	ori	r2,r2,8192
  8020b8:	20c6703a 	and	r3,r4,r3
  8020bc:	2880030d 	sth	r2,12(r5)
  8020c0:	28c01915 	stw	r3,100(r5)
  8020c4:	d9800404 	addi	r6,sp,16
  8020c8:	8009883a 	mov	r4,r16
  8020cc:	08073fc0 	call	8073fc <__sfvwrite_r>
  8020d0:	1000091e 	bne	r2,zero,8020f8 <_puts_r+0xb8>
  8020d4:	00800284 	movi	r2,10
  8020d8:	dfc00917 	ldw	ra,36(sp)
  8020dc:	dc400817 	ldw	r17,32(sp)
  8020e0:	dc000717 	ldw	r16,28(sp)
  8020e4:	dec00a04 	addi	sp,sp,40
  8020e8:	f800283a 	ret
  8020ec:	8009883a 	mov	r4,r16
  8020f0:	0806f780 	call	806f78 <__sinit>
  8020f4:	003fe906 	br	80209c <__alt_data_end+0xff80209c>
  8020f8:	00bfffc4 	movi	r2,-1
  8020fc:	003ff606 	br	8020d8 <__alt_data_end+0xff8020d8>

00802100 <puts>:
  802100:	00802074 	movhi	r2,129
  802104:	109a8904 	addi	r2,r2,27172
  802108:	200b883a 	mov	r5,r4
  80210c:	11000017 	ldw	r4,0(r2)
  802110:	08020401 	jmpi	802040 <_puts_r>

00802114 <strlen>:
  802114:	208000cc 	andi	r2,r4,3
  802118:	10002026 	beq	r2,zero,80219c <strlen+0x88>
  80211c:	20800007 	ldb	r2,0(r4)
  802120:	10002026 	beq	r2,zero,8021a4 <strlen+0x90>
  802124:	2005883a 	mov	r2,r4
  802128:	00000206 	br	802134 <strlen+0x20>
  80212c:	10c00007 	ldb	r3,0(r2)
  802130:	18001826 	beq	r3,zero,802194 <strlen+0x80>
  802134:	10800044 	addi	r2,r2,1
  802138:	10c000cc 	andi	r3,r2,3
  80213c:	183ffb1e 	bne	r3,zero,80212c <__alt_data_end+0xff80212c>
  802140:	10c00017 	ldw	r3,0(r2)
  802144:	01ffbff4 	movhi	r7,65279
  802148:	39ffbfc4 	addi	r7,r7,-257
  80214c:	00ca303a 	nor	r5,zero,r3
  802150:	01a02074 	movhi	r6,32897
  802154:	19c7883a 	add	r3,r3,r7
  802158:	31a02004 	addi	r6,r6,-32640
  80215c:	1946703a 	and	r3,r3,r5
  802160:	1986703a 	and	r3,r3,r6
  802164:	1800091e 	bne	r3,zero,80218c <strlen+0x78>
  802168:	10800104 	addi	r2,r2,4
  80216c:	10c00017 	ldw	r3,0(r2)
  802170:	19cb883a 	add	r5,r3,r7
  802174:	00c6303a 	nor	r3,zero,r3
  802178:	28c6703a 	and	r3,r5,r3
  80217c:	1986703a 	and	r3,r3,r6
  802180:	183ff926 	beq	r3,zero,802168 <__alt_data_end+0xff802168>
  802184:	00000106 	br	80218c <strlen+0x78>
  802188:	10800044 	addi	r2,r2,1
  80218c:	10c00007 	ldb	r3,0(r2)
  802190:	183ffd1e 	bne	r3,zero,802188 <__alt_data_end+0xff802188>
  802194:	1105c83a 	sub	r2,r2,r4
  802198:	f800283a 	ret
  80219c:	2005883a 	mov	r2,r4
  8021a0:	003fe706 	br	802140 <__alt_data_end+0xff802140>
  8021a4:	0005883a 	mov	r2,zero
  8021a8:	f800283a 	ret

008021ac <___vfprintf_internal_r>:
  8021ac:	deffb804 	addi	sp,sp,-288
  8021b0:	dfc04715 	stw	ra,284(sp)
  8021b4:	ddc04515 	stw	r23,276(sp)
  8021b8:	dd404315 	stw	r21,268(sp)
  8021bc:	d9002c15 	stw	r4,176(sp)
  8021c0:	282f883a 	mov	r23,r5
  8021c4:	302b883a 	mov	r21,r6
  8021c8:	d9c02d15 	stw	r7,180(sp)
  8021cc:	df004615 	stw	fp,280(sp)
  8021d0:	dd804415 	stw	r22,272(sp)
  8021d4:	dd004215 	stw	r20,264(sp)
  8021d8:	dcc04115 	stw	r19,260(sp)
  8021dc:	dc804015 	stw	r18,256(sp)
  8021e0:	dc403f15 	stw	r17,252(sp)
  8021e4:	dc003e15 	stw	r16,248(sp)
  8021e8:	0807aec0 	call	807aec <_localeconv_r>
  8021ec:	10800017 	ldw	r2,0(r2)
  8021f0:	1009883a 	mov	r4,r2
  8021f4:	d8803415 	stw	r2,208(sp)
  8021f8:	08021140 	call	802114 <strlen>
  8021fc:	d8803715 	stw	r2,220(sp)
  802200:	d8802c17 	ldw	r2,176(sp)
  802204:	10000226 	beq	r2,zero,802210 <___vfprintf_internal_r+0x64>
  802208:	10800e17 	ldw	r2,56(r2)
  80220c:	1000f926 	beq	r2,zero,8025f4 <___vfprintf_internal_r+0x448>
  802210:	b880030b 	ldhu	r2,12(r23)
  802214:	10c8000c 	andi	r3,r2,8192
  802218:	1800061e 	bne	r3,zero,802234 <___vfprintf_internal_r+0x88>
  80221c:	b9001917 	ldw	r4,100(r23)
  802220:	00f7ffc4 	movi	r3,-8193
  802224:	10880014 	ori	r2,r2,8192
  802228:	20c6703a 	and	r3,r4,r3
  80222c:	b880030d 	sth	r2,12(r23)
  802230:	b8c01915 	stw	r3,100(r23)
  802234:	10c0020c 	andi	r3,r2,8
  802238:	1800c126 	beq	r3,zero,802540 <___vfprintf_internal_r+0x394>
  80223c:	b8c00417 	ldw	r3,16(r23)
  802240:	1800bf26 	beq	r3,zero,802540 <___vfprintf_internal_r+0x394>
  802244:	1080068c 	andi	r2,r2,26
  802248:	00c00284 	movi	r3,10
  80224c:	10c0c426 	beq	r2,r3,802560 <___vfprintf_internal_r+0x3b4>
  802250:	d8c00404 	addi	r3,sp,16
  802254:	05002074 	movhi	r20,129
  802258:	d9001e04 	addi	r4,sp,120
  80225c:	a5037f84 	addi	r20,r20,3582
  802260:	d8c01e15 	stw	r3,120(sp)
  802264:	d8002015 	stw	zero,128(sp)
  802268:	d8001f15 	stw	zero,124(sp)
  80226c:	d8003315 	stw	zero,204(sp)
  802270:	d8003615 	stw	zero,216(sp)
  802274:	d8003815 	stw	zero,224(sp)
  802278:	1811883a 	mov	r8,r3
  80227c:	d8003915 	stw	zero,228(sp)
  802280:	d8003a15 	stw	zero,232(sp)
  802284:	d8002f15 	stw	zero,188(sp)
  802288:	d9002815 	stw	r4,160(sp)
  80228c:	a8800007 	ldb	r2,0(r21)
  802290:	10027b26 	beq	r2,zero,802c80 <___vfprintf_internal_r+0xad4>
  802294:	00c00944 	movi	r3,37
  802298:	a821883a 	mov	r16,r21
  80229c:	10c0021e 	bne	r2,r3,8022a8 <___vfprintf_internal_r+0xfc>
  8022a0:	00001406 	br	8022f4 <___vfprintf_internal_r+0x148>
  8022a4:	10c00326 	beq	r2,r3,8022b4 <___vfprintf_internal_r+0x108>
  8022a8:	84000044 	addi	r16,r16,1
  8022ac:	80800007 	ldb	r2,0(r16)
  8022b0:	103ffc1e 	bne	r2,zero,8022a4 <__alt_data_end+0xff8022a4>
  8022b4:	8563c83a 	sub	r17,r16,r21
  8022b8:	88000e26 	beq	r17,zero,8022f4 <___vfprintf_internal_r+0x148>
  8022bc:	d8c02017 	ldw	r3,128(sp)
  8022c0:	d8801f17 	ldw	r2,124(sp)
  8022c4:	45400015 	stw	r21,0(r8)
  8022c8:	1c47883a 	add	r3,r3,r17
  8022cc:	10800044 	addi	r2,r2,1
  8022d0:	d8c02015 	stw	r3,128(sp)
  8022d4:	44400115 	stw	r17,4(r8)
  8022d8:	d8801f15 	stw	r2,124(sp)
  8022dc:	00c001c4 	movi	r3,7
  8022e0:	1880a716 	blt	r3,r2,802580 <___vfprintf_internal_r+0x3d4>
  8022e4:	42000204 	addi	r8,r8,8
  8022e8:	d9402f17 	ldw	r5,188(sp)
  8022ec:	2c4b883a 	add	r5,r5,r17
  8022f0:	d9402f15 	stw	r5,188(sp)
  8022f4:	80800007 	ldb	r2,0(r16)
  8022f8:	1000a826 	beq	r2,zero,80259c <___vfprintf_internal_r+0x3f0>
  8022fc:	84400047 	ldb	r17,1(r16)
  802300:	00bfffc4 	movi	r2,-1
  802304:	85400044 	addi	r21,r16,1
  802308:	d8002785 	stb	zero,158(sp)
  80230c:	0007883a 	mov	r3,zero
  802310:	000f883a 	mov	r7,zero
  802314:	d8802915 	stw	r2,164(sp)
  802318:	d8003115 	stw	zero,196(sp)
  80231c:	0025883a 	mov	r18,zero
  802320:	01401604 	movi	r5,88
  802324:	01800244 	movi	r6,9
  802328:	02800a84 	movi	r10,42
  80232c:	02401b04 	movi	r9,108
  802330:	ad400044 	addi	r21,r21,1
  802334:	88bff804 	addi	r2,r17,-32
  802338:	28830436 	bltu	r5,r2,802f4c <___vfprintf_internal_r+0xda0>
  80233c:	100490ba 	slli	r2,r2,2
  802340:	01002034 	movhi	r4,128
  802344:	2108d504 	addi	r4,r4,9044
  802348:	1105883a 	add	r2,r2,r4
  80234c:	10800017 	ldw	r2,0(r2)
  802350:	1000683a 	jmp	r2
  802354:	00802e6c 	andhi	r2,zero,185
  802358:	00802f4c 	andi	r2,zero,189
  80235c:	00802f4c 	andi	r2,zero,189
  802360:	00802e8c 	andi	r2,zero,186
  802364:	00802f4c 	andi	r2,zero,189
  802368:	00802f4c 	andi	r2,zero,189
  80236c:	00802f4c 	andi	r2,zero,189
  802370:	00802f4c 	andi	r2,zero,189
  802374:	00802f4c 	andi	r2,zero,189
  802378:	00802f4c 	andi	r2,zero,189
  80237c:	00802600 	call	80260 <__alt_mem_sdram-0x77fda0>
  802380:	00802da8 	cmpgeui	r2,zero,182
  802384:	00802f4c 	andi	r2,zero,189
  802388:	008024c8 	cmpgei	r2,zero,147
  80238c:	00802628 	cmpgeui	r2,zero,152
  802390:	00802f4c 	andi	r2,zero,189
  802394:	00802668 	cmpgeui	r2,zero,153
  802398:	00802674 	movhi	r2,153
  80239c:	00802674 	movhi	r2,153
  8023a0:	00802674 	movhi	r2,153
  8023a4:	00802674 	movhi	r2,153
  8023a8:	00802674 	movhi	r2,153
  8023ac:	00802674 	movhi	r2,153
  8023b0:	00802674 	movhi	r2,153
  8023b4:	00802674 	movhi	r2,153
  8023b8:	00802674 	movhi	r2,153
  8023bc:	00802f4c 	andi	r2,zero,189
  8023c0:	00802f4c 	andi	r2,zero,189
  8023c4:	00802f4c 	andi	r2,zero,189
  8023c8:	00802f4c 	andi	r2,zero,189
  8023cc:	00802f4c 	andi	r2,zero,189
  8023d0:	00802f4c 	andi	r2,zero,189
  8023d4:	00802f4c 	andi	r2,zero,189
  8023d8:	00802f4c 	andi	r2,zero,189
  8023dc:	00802f4c 	andi	r2,zero,189
  8023e0:	00802f4c 	andi	r2,zero,189
  8023e4:	008026a8 	cmpgeui	r2,zero,154
  8023e8:	00802764 	muli	r2,zero,157
  8023ec:	00802f4c 	andi	r2,zero,189
  8023f0:	00802764 	muli	r2,zero,157
  8023f4:	00802f4c 	andi	r2,zero,189
  8023f8:	00802f4c 	andi	r2,zero,189
  8023fc:	00802f4c 	andi	r2,zero,189
  802400:	00802f4c 	andi	r2,zero,189
  802404:	00802804 	movi	r2,160
  802408:	00802f4c 	andi	r2,zero,189
  80240c:	00802f4c 	andi	r2,zero,189
  802410:	00802810 	cmplti	r2,zero,160
  802414:	00802f4c 	andi	r2,zero,189
  802418:	00802f4c 	andi	r2,zero,189
  80241c:	00802f4c 	andi	r2,zero,189
  802420:	00802f4c 	andi	r2,zero,189
  802424:	00802f4c 	andi	r2,zero,189
  802428:	00802c88 	cmpgei	r2,zero,178
  80242c:	00802f4c 	andi	r2,zero,189
  802430:	00802f4c 	andi	r2,zero,189
  802434:	00802ce8 	cmpgeui	r2,zero,179
  802438:	00802f4c 	andi	r2,zero,189
  80243c:	00802f4c 	andi	r2,zero,189
  802440:	00802f4c 	andi	r2,zero,189
  802444:	00802f4c 	andi	r2,zero,189
  802448:	00802f4c 	andi	r2,zero,189
  80244c:	00802f4c 	andi	r2,zero,189
  802450:	00802f4c 	andi	r2,zero,189
  802454:	00802f4c 	andi	r2,zero,189
  802458:	00802f4c 	andi	r2,zero,189
  80245c:	00802f4c 	andi	r2,zero,189
  802460:	00802ef8 	rdprs	r2,zero,187
  802464:	00802e98 	cmpnei	r2,zero,186
  802468:	00802764 	muli	r2,zero,157
  80246c:	00802764 	muli	r2,zero,157
  802470:	00802764 	muli	r2,zero,157
  802474:	00802ea8 	cmpgeui	r2,zero,186
  802478:	00802e98 	cmpnei	r2,zero,186
  80247c:	00802f4c 	andi	r2,zero,189
  802480:	00802f4c 	andi	r2,zero,189
  802484:	00802eb4 	movhi	r2,186
  802488:	00802f4c 	andi	r2,zero,189
  80248c:	00802ec4 	movi	r2,187
  802490:	00802d98 	cmpnei	r2,zero,182
  802494:	008024d4 	movui	r2,147
  802498:	00802db8 	rdprs	r2,zero,182
  80249c:	00802f4c 	andi	r2,zero,189
  8024a0:	00802dc4 	movi	r2,183
  8024a4:	00802f4c 	andi	r2,zero,189
  8024a8:	00802e20 	cmpeqi	r2,zero,184
  8024ac:	00802f4c 	andi	r2,zero,189
  8024b0:	00802f4c 	andi	r2,zero,189
  8024b4:	00802e30 	cmpltui	r2,zero,184
  8024b8:	d9003117 	ldw	r4,196(sp)
  8024bc:	d8802d15 	stw	r2,180(sp)
  8024c0:	0109c83a 	sub	r4,zero,r4
  8024c4:	d9003115 	stw	r4,196(sp)
  8024c8:	94800114 	ori	r18,r18,4
  8024cc:	ac400007 	ldb	r17,0(r21)
  8024d0:	003f9706 	br	802330 <__alt_data_end+0xff802330>
  8024d4:	00800c04 	movi	r2,48
  8024d8:	d9002d17 	ldw	r4,180(sp)
  8024dc:	d9402917 	ldw	r5,164(sp)
  8024e0:	d8802705 	stb	r2,156(sp)
  8024e4:	00801e04 	movi	r2,120
  8024e8:	d8802745 	stb	r2,157(sp)
  8024ec:	d8002785 	stb	zero,158(sp)
  8024f0:	20c00104 	addi	r3,r4,4
  8024f4:	24c00017 	ldw	r19,0(r4)
  8024f8:	002d883a 	mov	r22,zero
  8024fc:	90800094 	ori	r2,r18,2
  802500:	28029a16 	blt	r5,zero,802f6c <___vfprintf_internal_r+0xdc0>
  802504:	00bfdfc4 	movi	r2,-129
  802508:	90a4703a 	and	r18,r18,r2
  80250c:	d8c02d15 	stw	r3,180(sp)
  802510:	94800094 	ori	r18,r18,2
  802514:	9802871e 	bne	r19,zero,802f34 <___vfprintf_internal_r+0xd88>
  802518:	00802074 	movhi	r2,129
  80251c:	10837804 	addi	r2,r2,3552
  802520:	d8803915 	stw	r2,228(sp)
  802524:	04401e04 	movi	r17,120
  802528:	d8802917 	ldw	r2,164(sp)
  80252c:	0039883a 	mov	fp,zero
  802530:	1001e926 	beq	r2,zero,802cd8 <___vfprintf_internal_r+0xb2c>
  802534:	0027883a 	mov	r19,zero
  802538:	002d883a 	mov	r22,zero
  80253c:	00020506 	br	802d54 <___vfprintf_internal_r+0xba8>
  802540:	d9002c17 	ldw	r4,176(sp)
  802544:	b80b883a 	mov	r5,r23
  802548:	080447c0 	call	80447c <__swsetup_r>
  80254c:	1005ac1e 	bne	r2,zero,803c00 <___vfprintf_internal_r+0x1a54>
  802550:	b880030b 	ldhu	r2,12(r23)
  802554:	00c00284 	movi	r3,10
  802558:	1080068c 	andi	r2,r2,26
  80255c:	10ff3c1e 	bne	r2,r3,802250 <__alt_data_end+0xff802250>
  802560:	b880038f 	ldh	r2,14(r23)
  802564:	103f3a16 	blt	r2,zero,802250 <__alt_data_end+0xff802250>
  802568:	d9c02d17 	ldw	r7,180(sp)
  80256c:	d9002c17 	ldw	r4,176(sp)
  802570:	a80d883a 	mov	r6,r21
  802574:	b80b883a 	mov	r5,r23
  802578:	08043c00 	call	8043c0 <__sbprintf>
  80257c:	00001106 	br	8025c4 <___vfprintf_internal_r+0x418>
  802580:	d9002c17 	ldw	r4,176(sp)
  802584:	d9801e04 	addi	r6,sp,120
  802588:	b80b883a 	mov	r5,r23
  80258c:	080a3600 	call	80a360 <__sprint_r>
  802590:	1000081e 	bne	r2,zero,8025b4 <___vfprintf_internal_r+0x408>
  802594:	da000404 	addi	r8,sp,16
  802598:	003f5306 	br	8022e8 <__alt_data_end+0xff8022e8>
  80259c:	d8802017 	ldw	r2,128(sp)
  8025a0:	10000426 	beq	r2,zero,8025b4 <___vfprintf_internal_r+0x408>
  8025a4:	d9002c17 	ldw	r4,176(sp)
  8025a8:	d9801e04 	addi	r6,sp,120
  8025ac:	b80b883a 	mov	r5,r23
  8025b0:	080a3600 	call	80a360 <__sprint_r>
  8025b4:	b880030b 	ldhu	r2,12(r23)
  8025b8:	1080100c 	andi	r2,r2,64
  8025bc:	1005901e 	bne	r2,zero,803c00 <___vfprintf_internal_r+0x1a54>
  8025c0:	d8802f17 	ldw	r2,188(sp)
  8025c4:	dfc04717 	ldw	ra,284(sp)
  8025c8:	df004617 	ldw	fp,280(sp)
  8025cc:	ddc04517 	ldw	r23,276(sp)
  8025d0:	dd804417 	ldw	r22,272(sp)
  8025d4:	dd404317 	ldw	r21,268(sp)
  8025d8:	dd004217 	ldw	r20,264(sp)
  8025dc:	dcc04117 	ldw	r19,260(sp)
  8025e0:	dc804017 	ldw	r18,256(sp)
  8025e4:	dc403f17 	ldw	r17,252(sp)
  8025e8:	dc003e17 	ldw	r16,248(sp)
  8025ec:	dec04804 	addi	sp,sp,288
  8025f0:	f800283a 	ret
  8025f4:	d9002c17 	ldw	r4,176(sp)
  8025f8:	0806f780 	call	806f78 <__sinit>
  8025fc:	003f0406 	br	802210 <__alt_data_end+0xff802210>
  802600:	d8802d17 	ldw	r2,180(sp)
  802604:	d9002d17 	ldw	r4,180(sp)
  802608:	10800017 	ldw	r2,0(r2)
  80260c:	d8803115 	stw	r2,196(sp)
  802610:	20800104 	addi	r2,r4,4
  802614:	d9003117 	ldw	r4,196(sp)
  802618:	203fa716 	blt	r4,zero,8024b8 <__alt_data_end+0xff8024b8>
  80261c:	d8802d15 	stw	r2,180(sp)
  802620:	ac400007 	ldb	r17,0(r21)
  802624:	003f4206 	br	802330 <__alt_data_end+0xff802330>
  802628:	ac400007 	ldb	r17,0(r21)
  80262c:	aac00044 	addi	r11,r21,1
  802630:	8a872826 	beq	r17,r10,8042d4 <___vfprintf_internal_r+0x2128>
  802634:	88bff404 	addi	r2,r17,-48
  802638:	0009883a 	mov	r4,zero
  80263c:	30867d36 	bltu	r6,r2,804034 <___vfprintf_internal_r+0x1e88>
  802640:	5c400007 	ldb	r17,0(r11)
  802644:	210002a4 	muli	r4,r4,10
  802648:	5d400044 	addi	r21,r11,1
  80264c:	a817883a 	mov	r11,r21
  802650:	2089883a 	add	r4,r4,r2
  802654:	88bff404 	addi	r2,r17,-48
  802658:	30bff92e 	bgeu	r6,r2,802640 <__alt_data_end+0xff802640>
  80265c:	2005c916 	blt	r4,zero,803d84 <___vfprintf_internal_r+0x1bd8>
  802660:	d9002915 	stw	r4,164(sp)
  802664:	003f3306 	br	802334 <__alt_data_end+0xff802334>
  802668:	94802014 	ori	r18,r18,128
  80266c:	ac400007 	ldb	r17,0(r21)
  802670:	003f2f06 	br	802330 <__alt_data_end+0xff802330>
  802674:	a809883a 	mov	r4,r21
  802678:	d8003115 	stw	zero,196(sp)
  80267c:	88bff404 	addi	r2,r17,-48
  802680:	0017883a 	mov	r11,zero
  802684:	24400007 	ldb	r17,0(r4)
  802688:	5ac002a4 	muli	r11,r11,10
  80268c:	ad400044 	addi	r21,r21,1
  802690:	a809883a 	mov	r4,r21
  802694:	12d7883a 	add	r11,r2,r11
  802698:	88bff404 	addi	r2,r17,-48
  80269c:	30bff92e 	bgeu	r6,r2,802684 <__alt_data_end+0xff802684>
  8026a0:	dac03115 	stw	r11,196(sp)
  8026a4:	003f2306 	br	802334 <__alt_data_end+0xff802334>
  8026a8:	18c03fcc 	andi	r3,r3,255
  8026ac:	18072b1e 	bne	r3,zero,80435c <___vfprintf_internal_r+0x21b0>
  8026b0:	94800414 	ori	r18,r18,16
  8026b4:	9080080c 	andi	r2,r18,32
  8026b8:	10037b26 	beq	r2,zero,8034a8 <___vfprintf_internal_r+0x12fc>
  8026bc:	d9402d17 	ldw	r5,180(sp)
  8026c0:	28800117 	ldw	r2,4(r5)
  8026c4:	2cc00017 	ldw	r19,0(r5)
  8026c8:	29400204 	addi	r5,r5,8
  8026cc:	d9402d15 	stw	r5,180(sp)
  8026d0:	102d883a 	mov	r22,r2
  8026d4:	10044b16 	blt	r2,zero,803804 <___vfprintf_internal_r+0x1658>
  8026d8:	d9402917 	ldw	r5,164(sp)
  8026dc:	df002783 	ldbu	fp,158(sp)
  8026e0:	2803bc16 	blt	r5,zero,8035d4 <___vfprintf_internal_r+0x1428>
  8026e4:	00ffdfc4 	movi	r3,-129
  8026e8:	9d84b03a 	or	r2,r19,r22
  8026ec:	90e4703a 	and	r18,r18,r3
  8026f0:	10017726 	beq	r2,zero,802cd0 <___vfprintf_internal_r+0xb24>
  8026f4:	b0038326 	beq	r22,zero,803504 <___vfprintf_internal_r+0x1358>
  8026f8:	dc402a15 	stw	r17,168(sp)
  8026fc:	dc001e04 	addi	r16,sp,120
  802700:	b023883a 	mov	r17,r22
  802704:	402d883a 	mov	r22,r8
  802708:	9809883a 	mov	r4,r19
  80270c:	880b883a 	mov	r5,r17
  802710:	01800284 	movi	r6,10
  802714:	000f883a 	mov	r7,zero
  802718:	080c7580 	call	80c758 <__umoddi3>
  80271c:	10800c04 	addi	r2,r2,48
  802720:	843fffc4 	addi	r16,r16,-1
  802724:	9809883a 	mov	r4,r19
  802728:	880b883a 	mov	r5,r17
  80272c:	80800005 	stb	r2,0(r16)
  802730:	01800284 	movi	r6,10
  802734:	000f883a 	mov	r7,zero
  802738:	080c1e00 	call	80c1e0 <__udivdi3>
  80273c:	1027883a 	mov	r19,r2
  802740:	10c4b03a 	or	r2,r2,r3
  802744:	1823883a 	mov	r17,r3
  802748:	103fef1e 	bne	r2,zero,802708 <__alt_data_end+0xff802708>
  80274c:	d8c02817 	ldw	r3,160(sp)
  802750:	dc402a17 	ldw	r17,168(sp)
  802754:	b011883a 	mov	r8,r22
  802758:	1c07c83a 	sub	r3,r3,r16
  80275c:	d8c02e15 	stw	r3,184(sp)
  802760:	00005906 	br	8028c8 <___vfprintf_internal_r+0x71c>
  802764:	18c03fcc 	andi	r3,r3,255
  802768:	1806fa1e 	bne	r3,zero,804354 <___vfprintf_internal_r+0x21a8>
  80276c:	9080020c 	andi	r2,r18,8
  802770:	10048a26 	beq	r2,zero,80399c <___vfprintf_internal_r+0x17f0>
  802774:	d8c02d17 	ldw	r3,180(sp)
  802778:	d9002d17 	ldw	r4,180(sp)
  80277c:	d9402d17 	ldw	r5,180(sp)
  802780:	18c00017 	ldw	r3,0(r3)
  802784:	21000117 	ldw	r4,4(r4)
  802788:	29400204 	addi	r5,r5,8
  80278c:	d8c03615 	stw	r3,216(sp)
  802790:	d9003815 	stw	r4,224(sp)
  802794:	d9402d15 	stw	r5,180(sp)
  802798:	d9003617 	ldw	r4,216(sp)
  80279c:	d9403817 	ldw	r5,224(sp)
  8027a0:	da003d15 	stw	r8,244(sp)
  8027a4:	04000044 	movi	r16,1
  8027a8:	0809ef40 	call	809ef4 <__fpclassifyd>
  8027ac:	da003d17 	ldw	r8,244(sp)
  8027b0:	14041f1e 	bne	r2,r16,803830 <___vfprintf_internal_r+0x1684>
  8027b4:	d9003617 	ldw	r4,216(sp)
  8027b8:	d9403817 	ldw	r5,224(sp)
  8027bc:	000d883a 	mov	r6,zero
  8027c0:	000f883a 	mov	r7,zero
  8027c4:	080d8900 	call	80d890 <__ledf2>
  8027c8:	da003d17 	ldw	r8,244(sp)
  8027cc:	1005be16 	blt	r2,zero,803ec8 <___vfprintf_internal_r+0x1d1c>
  8027d0:	df002783 	ldbu	fp,158(sp)
  8027d4:	008011c4 	movi	r2,71
  8027d8:	1445330e 	bge	r2,r17,803ca8 <___vfprintf_internal_r+0x1afc>
  8027dc:	04002074 	movhi	r16,129
  8027e0:	84037004 	addi	r16,r16,3520
  8027e4:	00c000c4 	movi	r3,3
  8027e8:	00bfdfc4 	movi	r2,-129
  8027ec:	d8c02a15 	stw	r3,168(sp)
  8027f0:	90a4703a 	and	r18,r18,r2
  8027f4:	d8c02e15 	stw	r3,184(sp)
  8027f8:	d8002915 	stw	zero,164(sp)
  8027fc:	d8003215 	stw	zero,200(sp)
  802800:	00003706 	br	8028e0 <___vfprintf_internal_r+0x734>
  802804:	94800214 	ori	r18,r18,8
  802808:	ac400007 	ldb	r17,0(r21)
  80280c:	003ec806 	br	802330 <__alt_data_end+0xff802330>
  802810:	18c03fcc 	andi	r3,r3,255
  802814:	1806db1e 	bne	r3,zero,804384 <___vfprintf_internal_r+0x21d8>
  802818:	94800414 	ori	r18,r18,16
  80281c:	9080080c 	andi	r2,r18,32
  802820:	1002d826 	beq	r2,zero,803384 <___vfprintf_internal_r+0x11d8>
  802824:	d9402d17 	ldw	r5,180(sp)
  802828:	d8c02917 	ldw	r3,164(sp)
  80282c:	d8002785 	stb	zero,158(sp)
  802830:	28800204 	addi	r2,r5,8
  802834:	2cc00017 	ldw	r19,0(r5)
  802838:	2d800117 	ldw	r22,4(r5)
  80283c:	18048f16 	blt	r3,zero,803a7c <___vfprintf_internal_r+0x18d0>
  802840:	013fdfc4 	movi	r4,-129
  802844:	9d86b03a 	or	r3,r19,r22
  802848:	d8802d15 	stw	r2,180(sp)
  80284c:	9124703a 	and	r18,r18,r4
  802850:	1802d91e 	bne	r3,zero,8033b8 <___vfprintf_internal_r+0x120c>
  802854:	d8c02917 	ldw	r3,164(sp)
  802858:	0039883a 	mov	fp,zero
  80285c:	1805c326 	beq	r3,zero,803f6c <___vfprintf_internal_r+0x1dc0>
  802860:	0027883a 	mov	r19,zero
  802864:	002d883a 	mov	r22,zero
  802868:	dc001e04 	addi	r16,sp,120
  80286c:	9806d0fa 	srli	r3,r19,3
  802870:	b008977a 	slli	r4,r22,29
  802874:	b02cd0fa 	srli	r22,r22,3
  802878:	9cc001cc 	andi	r19,r19,7
  80287c:	98800c04 	addi	r2,r19,48
  802880:	843fffc4 	addi	r16,r16,-1
  802884:	20e6b03a 	or	r19,r4,r3
  802888:	80800005 	stb	r2,0(r16)
  80288c:	9d86b03a 	or	r3,r19,r22
  802890:	183ff61e 	bne	r3,zero,80286c <__alt_data_end+0xff80286c>
  802894:	90c0004c 	andi	r3,r18,1
  802898:	18013b26 	beq	r3,zero,802d88 <___vfprintf_internal_r+0xbdc>
  80289c:	10803fcc 	andi	r2,r2,255
  8028a0:	1080201c 	xori	r2,r2,128
  8028a4:	10bfe004 	addi	r2,r2,-128
  8028a8:	00c00c04 	movi	r3,48
  8028ac:	10c13626 	beq	r2,r3,802d88 <___vfprintf_internal_r+0xbdc>
  8028b0:	80ffffc5 	stb	r3,-1(r16)
  8028b4:	d8c02817 	ldw	r3,160(sp)
  8028b8:	80bfffc4 	addi	r2,r16,-1
  8028bc:	1021883a 	mov	r16,r2
  8028c0:	1887c83a 	sub	r3,r3,r2
  8028c4:	d8c02e15 	stw	r3,184(sp)
  8028c8:	d8802e17 	ldw	r2,184(sp)
  8028cc:	d9002917 	ldw	r4,164(sp)
  8028d0:	1100010e 	bge	r2,r4,8028d8 <___vfprintf_internal_r+0x72c>
  8028d4:	2005883a 	mov	r2,r4
  8028d8:	d8802a15 	stw	r2,168(sp)
  8028dc:	d8003215 	stw	zero,200(sp)
  8028e0:	e7003fcc 	andi	fp,fp,255
  8028e4:	e700201c 	xori	fp,fp,128
  8028e8:	e73fe004 	addi	fp,fp,-128
  8028ec:	e0000326 	beq	fp,zero,8028fc <___vfprintf_internal_r+0x750>
  8028f0:	d8c02a17 	ldw	r3,168(sp)
  8028f4:	18c00044 	addi	r3,r3,1
  8028f8:	d8c02a15 	stw	r3,168(sp)
  8028fc:	90c0008c 	andi	r3,r18,2
  802900:	d8c02b15 	stw	r3,172(sp)
  802904:	18000326 	beq	r3,zero,802914 <___vfprintf_internal_r+0x768>
  802908:	d8c02a17 	ldw	r3,168(sp)
  80290c:	18c00084 	addi	r3,r3,2
  802910:	d8c02a15 	stw	r3,168(sp)
  802914:	90c0210c 	andi	r3,r18,132
  802918:	d8c03015 	stw	r3,192(sp)
  80291c:	1801a31e 	bne	r3,zero,802fac <___vfprintf_internal_r+0xe00>
  802920:	d9003117 	ldw	r4,196(sp)
  802924:	d8c02a17 	ldw	r3,168(sp)
  802928:	20e7c83a 	sub	r19,r4,r3
  80292c:	04c19f0e 	bge	zero,r19,802fac <___vfprintf_internal_r+0xe00>
  802930:	02400404 	movi	r9,16
  802934:	d8c02017 	ldw	r3,128(sp)
  802938:	d8801f17 	ldw	r2,124(sp)
  80293c:	4cc50d0e 	bge	r9,r19,803d74 <___vfprintf_internal_r+0x1bc8>
  802940:	01402074 	movhi	r5,129
  802944:	29438384 	addi	r5,r5,3598
  802948:	dc403b15 	stw	r17,236(sp)
  80294c:	d9403515 	stw	r5,212(sp)
  802950:	9823883a 	mov	r17,r19
  802954:	482d883a 	mov	r22,r9
  802958:	9027883a 	mov	r19,r18
  80295c:	070001c4 	movi	fp,7
  802960:	8025883a 	mov	r18,r16
  802964:	dc002c17 	ldw	r16,176(sp)
  802968:	00000306 	br	802978 <___vfprintf_internal_r+0x7cc>
  80296c:	8c7ffc04 	addi	r17,r17,-16
  802970:	42000204 	addi	r8,r8,8
  802974:	b440130e 	bge	r22,r17,8029c4 <___vfprintf_internal_r+0x818>
  802978:	01002074 	movhi	r4,129
  80297c:	18c00404 	addi	r3,r3,16
  802980:	10800044 	addi	r2,r2,1
  802984:	21038384 	addi	r4,r4,3598
  802988:	41000015 	stw	r4,0(r8)
  80298c:	45800115 	stw	r22,4(r8)
  802990:	d8c02015 	stw	r3,128(sp)
  802994:	d8801f15 	stw	r2,124(sp)
  802998:	e0bff40e 	bge	fp,r2,80296c <__alt_data_end+0xff80296c>
  80299c:	d9801e04 	addi	r6,sp,120
  8029a0:	b80b883a 	mov	r5,r23
  8029a4:	8009883a 	mov	r4,r16
  8029a8:	080a3600 	call	80a360 <__sprint_r>
  8029ac:	103f011e 	bne	r2,zero,8025b4 <__alt_data_end+0xff8025b4>
  8029b0:	8c7ffc04 	addi	r17,r17,-16
  8029b4:	d8c02017 	ldw	r3,128(sp)
  8029b8:	d8801f17 	ldw	r2,124(sp)
  8029bc:	da000404 	addi	r8,sp,16
  8029c0:	b47fed16 	blt	r22,r17,802978 <__alt_data_end+0xff802978>
  8029c4:	9021883a 	mov	r16,r18
  8029c8:	9825883a 	mov	r18,r19
  8029cc:	8827883a 	mov	r19,r17
  8029d0:	dc403b17 	ldw	r17,236(sp)
  8029d4:	d9403517 	ldw	r5,212(sp)
  8029d8:	98c7883a 	add	r3,r19,r3
  8029dc:	10800044 	addi	r2,r2,1
  8029e0:	41400015 	stw	r5,0(r8)
  8029e4:	44c00115 	stw	r19,4(r8)
  8029e8:	d8c02015 	stw	r3,128(sp)
  8029ec:	d8801f15 	stw	r2,124(sp)
  8029f0:	010001c4 	movi	r4,7
  8029f4:	2082a316 	blt	r4,r2,803484 <___vfprintf_internal_r+0x12d8>
  8029f8:	df002787 	ldb	fp,158(sp)
  8029fc:	42000204 	addi	r8,r8,8
  802a00:	e0000c26 	beq	fp,zero,802a34 <___vfprintf_internal_r+0x888>
  802a04:	d8801f17 	ldw	r2,124(sp)
  802a08:	d9002784 	addi	r4,sp,158
  802a0c:	18c00044 	addi	r3,r3,1
  802a10:	10800044 	addi	r2,r2,1
  802a14:	41000015 	stw	r4,0(r8)
  802a18:	01000044 	movi	r4,1
  802a1c:	41000115 	stw	r4,4(r8)
  802a20:	d8c02015 	stw	r3,128(sp)
  802a24:	d8801f15 	stw	r2,124(sp)
  802a28:	010001c4 	movi	r4,7
  802a2c:	20823c16 	blt	r4,r2,803320 <___vfprintf_internal_r+0x1174>
  802a30:	42000204 	addi	r8,r8,8
  802a34:	d8802b17 	ldw	r2,172(sp)
  802a38:	10000c26 	beq	r2,zero,802a6c <___vfprintf_internal_r+0x8c0>
  802a3c:	d8801f17 	ldw	r2,124(sp)
  802a40:	d9002704 	addi	r4,sp,156
  802a44:	18c00084 	addi	r3,r3,2
  802a48:	10800044 	addi	r2,r2,1
  802a4c:	41000015 	stw	r4,0(r8)
  802a50:	01000084 	movi	r4,2
  802a54:	41000115 	stw	r4,4(r8)
  802a58:	d8c02015 	stw	r3,128(sp)
  802a5c:	d8801f15 	stw	r2,124(sp)
  802a60:	010001c4 	movi	r4,7
  802a64:	20823616 	blt	r4,r2,803340 <___vfprintf_internal_r+0x1194>
  802a68:	42000204 	addi	r8,r8,8
  802a6c:	d9003017 	ldw	r4,192(sp)
  802a70:	00802004 	movi	r2,128
  802a74:	20819926 	beq	r4,r2,8030dc <___vfprintf_internal_r+0xf30>
  802a78:	d9402917 	ldw	r5,164(sp)
  802a7c:	d8802e17 	ldw	r2,184(sp)
  802a80:	28adc83a 	sub	r22,r5,r2
  802a84:	0580310e 	bge	zero,r22,802b4c <___vfprintf_internal_r+0x9a0>
  802a88:	07000404 	movi	fp,16
  802a8c:	d8801f17 	ldw	r2,124(sp)
  802a90:	e584140e 	bge	fp,r22,803ae4 <___vfprintf_internal_r+0x1938>
  802a94:	01402074 	movhi	r5,129
  802a98:	29437f84 	addi	r5,r5,3582
  802a9c:	dc402915 	stw	r17,164(sp)
  802aa0:	d9402b15 	stw	r5,172(sp)
  802aa4:	b023883a 	mov	r17,r22
  802aa8:	04c001c4 	movi	r19,7
  802aac:	a82d883a 	mov	r22,r21
  802ab0:	902b883a 	mov	r21,r18
  802ab4:	8025883a 	mov	r18,r16
  802ab8:	dc002c17 	ldw	r16,176(sp)
  802abc:	00000306 	br	802acc <___vfprintf_internal_r+0x920>
  802ac0:	8c7ffc04 	addi	r17,r17,-16
  802ac4:	42000204 	addi	r8,r8,8
  802ac8:	e440110e 	bge	fp,r17,802b10 <___vfprintf_internal_r+0x964>
  802acc:	18c00404 	addi	r3,r3,16
  802ad0:	10800044 	addi	r2,r2,1
  802ad4:	45000015 	stw	r20,0(r8)
  802ad8:	47000115 	stw	fp,4(r8)
  802adc:	d8c02015 	stw	r3,128(sp)
  802ae0:	d8801f15 	stw	r2,124(sp)
  802ae4:	98bff60e 	bge	r19,r2,802ac0 <__alt_data_end+0xff802ac0>
  802ae8:	d9801e04 	addi	r6,sp,120
  802aec:	b80b883a 	mov	r5,r23
  802af0:	8009883a 	mov	r4,r16
  802af4:	080a3600 	call	80a360 <__sprint_r>
  802af8:	103eae1e 	bne	r2,zero,8025b4 <__alt_data_end+0xff8025b4>
  802afc:	8c7ffc04 	addi	r17,r17,-16
  802b00:	d8c02017 	ldw	r3,128(sp)
  802b04:	d8801f17 	ldw	r2,124(sp)
  802b08:	da000404 	addi	r8,sp,16
  802b0c:	e47fef16 	blt	fp,r17,802acc <__alt_data_end+0xff802acc>
  802b10:	9021883a 	mov	r16,r18
  802b14:	a825883a 	mov	r18,r21
  802b18:	b02b883a 	mov	r21,r22
  802b1c:	882d883a 	mov	r22,r17
  802b20:	dc402917 	ldw	r17,164(sp)
  802b24:	d9002b17 	ldw	r4,172(sp)
  802b28:	1d87883a 	add	r3,r3,r22
  802b2c:	10800044 	addi	r2,r2,1
  802b30:	41000015 	stw	r4,0(r8)
  802b34:	45800115 	stw	r22,4(r8)
  802b38:	d8c02015 	stw	r3,128(sp)
  802b3c:	d8801f15 	stw	r2,124(sp)
  802b40:	010001c4 	movi	r4,7
  802b44:	2081ee16 	blt	r4,r2,803300 <___vfprintf_internal_r+0x1154>
  802b48:	42000204 	addi	r8,r8,8
  802b4c:	9080400c 	andi	r2,r18,256
  802b50:	1001181e 	bne	r2,zero,802fb4 <___vfprintf_internal_r+0xe08>
  802b54:	d9402e17 	ldw	r5,184(sp)
  802b58:	d8801f17 	ldw	r2,124(sp)
  802b5c:	44000015 	stw	r16,0(r8)
  802b60:	1947883a 	add	r3,r3,r5
  802b64:	10800044 	addi	r2,r2,1
  802b68:	41400115 	stw	r5,4(r8)
  802b6c:	d8c02015 	stw	r3,128(sp)
  802b70:	d8801f15 	stw	r2,124(sp)
  802b74:	010001c4 	movi	r4,7
  802b78:	2081d316 	blt	r4,r2,8032c8 <___vfprintf_internal_r+0x111c>
  802b7c:	42000204 	addi	r8,r8,8
  802b80:	9480010c 	andi	r18,r18,4
  802b84:	90003226 	beq	r18,zero,802c50 <___vfprintf_internal_r+0xaa4>
  802b88:	d9403117 	ldw	r5,196(sp)
  802b8c:	d8802a17 	ldw	r2,168(sp)
  802b90:	28a1c83a 	sub	r16,r5,r2
  802b94:	04002e0e 	bge	zero,r16,802c50 <___vfprintf_internal_r+0xaa4>
  802b98:	04400404 	movi	r17,16
  802b9c:	d8801f17 	ldw	r2,124(sp)
  802ba0:	8c04a20e 	bge	r17,r16,803e2c <___vfprintf_internal_r+0x1c80>
  802ba4:	01402074 	movhi	r5,129
  802ba8:	29438384 	addi	r5,r5,3598
  802bac:	d9403515 	stw	r5,212(sp)
  802bb0:	048001c4 	movi	r18,7
  802bb4:	dcc02c17 	ldw	r19,176(sp)
  802bb8:	00000306 	br	802bc8 <___vfprintf_internal_r+0xa1c>
  802bbc:	843ffc04 	addi	r16,r16,-16
  802bc0:	42000204 	addi	r8,r8,8
  802bc4:	8c00130e 	bge	r17,r16,802c14 <___vfprintf_internal_r+0xa68>
  802bc8:	01002074 	movhi	r4,129
  802bcc:	18c00404 	addi	r3,r3,16
  802bd0:	10800044 	addi	r2,r2,1
  802bd4:	21038384 	addi	r4,r4,3598
  802bd8:	41000015 	stw	r4,0(r8)
  802bdc:	44400115 	stw	r17,4(r8)
  802be0:	d8c02015 	stw	r3,128(sp)
  802be4:	d8801f15 	stw	r2,124(sp)
  802be8:	90bff40e 	bge	r18,r2,802bbc <__alt_data_end+0xff802bbc>
  802bec:	d9801e04 	addi	r6,sp,120
  802bf0:	b80b883a 	mov	r5,r23
  802bf4:	9809883a 	mov	r4,r19
  802bf8:	080a3600 	call	80a360 <__sprint_r>
  802bfc:	103e6d1e 	bne	r2,zero,8025b4 <__alt_data_end+0xff8025b4>
  802c00:	843ffc04 	addi	r16,r16,-16
  802c04:	d8c02017 	ldw	r3,128(sp)
  802c08:	d8801f17 	ldw	r2,124(sp)
  802c0c:	da000404 	addi	r8,sp,16
  802c10:	8c3fed16 	blt	r17,r16,802bc8 <__alt_data_end+0xff802bc8>
  802c14:	d9403517 	ldw	r5,212(sp)
  802c18:	1c07883a 	add	r3,r3,r16
  802c1c:	10800044 	addi	r2,r2,1
  802c20:	41400015 	stw	r5,0(r8)
  802c24:	44000115 	stw	r16,4(r8)
  802c28:	d8c02015 	stw	r3,128(sp)
  802c2c:	d8801f15 	stw	r2,124(sp)
  802c30:	010001c4 	movi	r4,7
  802c34:	2080060e 	bge	r4,r2,802c50 <___vfprintf_internal_r+0xaa4>
  802c38:	d9002c17 	ldw	r4,176(sp)
  802c3c:	d9801e04 	addi	r6,sp,120
  802c40:	b80b883a 	mov	r5,r23
  802c44:	080a3600 	call	80a360 <__sprint_r>
  802c48:	103e5a1e 	bne	r2,zero,8025b4 <__alt_data_end+0xff8025b4>
  802c4c:	d8c02017 	ldw	r3,128(sp)
  802c50:	d8803117 	ldw	r2,196(sp)
  802c54:	d9002a17 	ldw	r4,168(sp)
  802c58:	1100010e 	bge	r2,r4,802c60 <___vfprintf_internal_r+0xab4>
  802c5c:	2005883a 	mov	r2,r4
  802c60:	d9402f17 	ldw	r5,188(sp)
  802c64:	288b883a 	add	r5,r5,r2
  802c68:	d9402f15 	stw	r5,188(sp)
  802c6c:	18019e1e 	bne	r3,zero,8032e8 <___vfprintf_internal_r+0x113c>
  802c70:	a8800007 	ldb	r2,0(r21)
  802c74:	d8001f15 	stw	zero,124(sp)
  802c78:	da000404 	addi	r8,sp,16
  802c7c:	103d851e 	bne	r2,zero,802294 <__alt_data_end+0xff802294>
  802c80:	a821883a 	mov	r16,r21
  802c84:	003d9b06 	br	8022f4 <__alt_data_end+0xff8022f4>
  802c88:	18c03fcc 	andi	r3,r3,255
  802c8c:	1805c11e 	bne	r3,zero,804394 <___vfprintf_internal_r+0x21e8>
  802c90:	94800414 	ori	r18,r18,16
  802c94:	9080080c 	andi	r2,r18,32
  802c98:	10020c26 	beq	r2,zero,8034cc <___vfprintf_internal_r+0x1320>
  802c9c:	d8802d17 	ldw	r2,180(sp)
  802ca0:	d9002917 	ldw	r4,164(sp)
  802ca4:	d8002785 	stb	zero,158(sp)
  802ca8:	10c00204 	addi	r3,r2,8
  802cac:	14c00017 	ldw	r19,0(r2)
  802cb0:	15800117 	ldw	r22,4(r2)
  802cb4:	20040f16 	blt	r4,zero,803cf4 <___vfprintf_internal_r+0x1b48>
  802cb8:	013fdfc4 	movi	r4,-129
  802cbc:	9d84b03a 	or	r2,r19,r22
  802cc0:	d8c02d15 	stw	r3,180(sp)
  802cc4:	9124703a 	and	r18,r18,r4
  802cc8:	0039883a 	mov	fp,zero
  802ccc:	103e891e 	bne	r2,zero,8026f4 <__alt_data_end+0xff8026f4>
  802cd0:	d9002917 	ldw	r4,164(sp)
  802cd4:	2002c11e 	bne	r4,zero,8037dc <___vfprintf_internal_r+0x1630>
  802cd8:	d8002915 	stw	zero,164(sp)
  802cdc:	d8002e15 	stw	zero,184(sp)
  802ce0:	dc001e04 	addi	r16,sp,120
  802ce4:	003ef806 	br	8028c8 <__alt_data_end+0xff8028c8>
  802ce8:	18c03fcc 	andi	r3,r3,255
  802cec:	18059d1e 	bne	r3,zero,804364 <___vfprintf_internal_r+0x21b8>
  802cf0:	01402074 	movhi	r5,129
  802cf4:	29437304 	addi	r5,r5,3532
  802cf8:	d9403915 	stw	r5,228(sp)
  802cfc:	9080080c 	andi	r2,r18,32
  802d00:	10005226 	beq	r2,zero,802e4c <___vfprintf_internal_r+0xca0>
  802d04:	d8802d17 	ldw	r2,180(sp)
  802d08:	14c00017 	ldw	r19,0(r2)
  802d0c:	15800117 	ldw	r22,4(r2)
  802d10:	10800204 	addi	r2,r2,8
  802d14:	d8802d15 	stw	r2,180(sp)
  802d18:	9080004c 	andi	r2,r18,1
  802d1c:	10019026 	beq	r2,zero,803360 <___vfprintf_internal_r+0x11b4>
  802d20:	9d84b03a 	or	r2,r19,r22
  802d24:	10036926 	beq	r2,zero,803acc <___vfprintf_internal_r+0x1920>
  802d28:	d8c02917 	ldw	r3,164(sp)
  802d2c:	00800c04 	movi	r2,48
  802d30:	d8802705 	stb	r2,156(sp)
  802d34:	dc402745 	stb	r17,157(sp)
  802d38:	d8002785 	stb	zero,158(sp)
  802d3c:	90800094 	ori	r2,r18,2
  802d40:	18045d16 	blt	r3,zero,803eb8 <___vfprintf_internal_r+0x1d0c>
  802d44:	00bfdfc4 	movi	r2,-129
  802d48:	90a4703a 	and	r18,r18,r2
  802d4c:	94800094 	ori	r18,r18,2
  802d50:	0039883a 	mov	fp,zero
  802d54:	d9003917 	ldw	r4,228(sp)
  802d58:	dc001e04 	addi	r16,sp,120
  802d5c:	988003cc 	andi	r2,r19,15
  802d60:	b006973a 	slli	r3,r22,28
  802d64:	2085883a 	add	r2,r4,r2
  802d68:	9826d13a 	srli	r19,r19,4
  802d6c:	10800003 	ldbu	r2,0(r2)
  802d70:	b02cd13a 	srli	r22,r22,4
  802d74:	843fffc4 	addi	r16,r16,-1
  802d78:	1ce6b03a 	or	r19,r3,r19
  802d7c:	80800005 	stb	r2,0(r16)
  802d80:	9d84b03a 	or	r2,r19,r22
  802d84:	103ff51e 	bne	r2,zero,802d5c <__alt_data_end+0xff802d5c>
  802d88:	d8c02817 	ldw	r3,160(sp)
  802d8c:	1c07c83a 	sub	r3,r3,r16
  802d90:	d8c02e15 	stw	r3,184(sp)
  802d94:	003ecc06 	br	8028c8 <__alt_data_end+0xff8028c8>
  802d98:	18c03fcc 	andi	r3,r3,255
  802d9c:	183e9f26 	beq	r3,zero,80281c <__alt_data_end+0xff80281c>
  802da0:	d9c02785 	stb	r7,158(sp)
  802da4:	003e9d06 	br	80281c <__alt_data_end+0xff80281c>
  802da8:	00c00044 	movi	r3,1
  802dac:	01c00ac4 	movi	r7,43
  802db0:	ac400007 	ldb	r17,0(r21)
  802db4:	003d5e06 	br	802330 <__alt_data_end+0xff802330>
  802db8:	94800814 	ori	r18,r18,32
  802dbc:	ac400007 	ldb	r17,0(r21)
  802dc0:	003d5b06 	br	802330 <__alt_data_end+0xff802330>
  802dc4:	d8c02d17 	ldw	r3,180(sp)
  802dc8:	d8002785 	stb	zero,158(sp)
  802dcc:	1c000017 	ldw	r16,0(r3)
  802dd0:	1cc00104 	addi	r19,r3,4
  802dd4:	80041926 	beq	r16,zero,803e3c <___vfprintf_internal_r+0x1c90>
  802dd8:	d9002917 	ldw	r4,164(sp)
  802ddc:	2003d016 	blt	r4,zero,803d20 <___vfprintf_internal_r+0x1b74>
  802de0:	200d883a 	mov	r6,r4
  802de4:	000b883a 	mov	r5,zero
  802de8:	8009883a 	mov	r4,r16
  802dec:	da003d15 	stw	r8,244(sp)
  802df0:	08084e40 	call	8084e4 <memchr>
  802df4:	da003d17 	ldw	r8,244(sp)
  802df8:	10045426 	beq	r2,zero,803f4c <___vfprintf_internal_r+0x1da0>
  802dfc:	1405c83a 	sub	r2,r2,r16
  802e00:	d8802e15 	stw	r2,184(sp)
  802e04:	1003cc16 	blt	r2,zero,803d38 <___vfprintf_internal_r+0x1b8c>
  802e08:	df002783 	ldbu	fp,158(sp)
  802e0c:	d8802a15 	stw	r2,168(sp)
  802e10:	dcc02d15 	stw	r19,180(sp)
  802e14:	d8002915 	stw	zero,164(sp)
  802e18:	d8003215 	stw	zero,200(sp)
  802e1c:	003eb006 	br	8028e0 <__alt_data_end+0xff8028e0>
  802e20:	18c03fcc 	andi	r3,r3,255
  802e24:	183f9b26 	beq	r3,zero,802c94 <__alt_data_end+0xff802c94>
  802e28:	d9c02785 	stb	r7,158(sp)
  802e2c:	003f9906 	br	802c94 <__alt_data_end+0xff802c94>
  802e30:	18c03fcc 	andi	r3,r3,255
  802e34:	1805551e 	bne	r3,zero,80438c <___vfprintf_internal_r+0x21e0>
  802e38:	01402074 	movhi	r5,129
  802e3c:	29437804 	addi	r5,r5,3552
  802e40:	d9403915 	stw	r5,228(sp)
  802e44:	9080080c 	andi	r2,r18,32
  802e48:	103fae1e 	bne	r2,zero,802d04 <__alt_data_end+0xff802d04>
  802e4c:	9080040c 	andi	r2,r18,16
  802e50:	1002de26 	beq	r2,zero,8039cc <___vfprintf_internal_r+0x1820>
  802e54:	d8c02d17 	ldw	r3,180(sp)
  802e58:	002d883a 	mov	r22,zero
  802e5c:	1cc00017 	ldw	r19,0(r3)
  802e60:	18c00104 	addi	r3,r3,4
  802e64:	d8c02d15 	stw	r3,180(sp)
  802e68:	003fab06 	br	802d18 <__alt_data_end+0xff802d18>
  802e6c:	38803fcc 	andi	r2,r7,255
  802e70:	1080201c 	xori	r2,r2,128
  802e74:	10bfe004 	addi	r2,r2,-128
  802e78:	1002d21e 	bne	r2,zero,8039c4 <___vfprintf_internal_r+0x1818>
  802e7c:	00c00044 	movi	r3,1
  802e80:	01c00804 	movi	r7,32
  802e84:	ac400007 	ldb	r17,0(r21)
  802e88:	003d2906 	br	802330 <__alt_data_end+0xff802330>
  802e8c:	94800054 	ori	r18,r18,1
  802e90:	ac400007 	ldb	r17,0(r21)
  802e94:	003d2606 	br	802330 <__alt_data_end+0xff802330>
  802e98:	18c03fcc 	andi	r3,r3,255
  802e9c:	183e0526 	beq	r3,zero,8026b4 <__alt_data_end+0xff8026b4>
  802ea0:	d9c02785 	stb	r7,158(sp)
  802ea4:	003e0306 	br	8026b4 <__alt_data_end+0xff8026b4>
  802ea8:	94801014 	ori	r18,r18,64
  802eac:	ac400007 	ldb	r17,0(r21)
  802eb0:	003d1f06 	br	802330 <__alt_data_end+0xff802330>
  802eb4:	ac400007 	ldb	r17,0(r21)
  802eb8:	8a438726 	beq	r17,r9,803cd8 <___vfprintf_internal_r+0x1b2c>
  802ebc:	94800414 	ori	r18,r18,16
  802ec0:	003d1b06 	br	802330 <__alt_data_end+0xff802330>
  802ec4:	18c03fcc 	andi	r3,r3,255
  802ec8:	1805341e 	bne	r3,zero,80439c <___vfprintf_internal_r+0x21f0>
  802ecc:	9080080c 	andi	r2,r18,32
  802ed0:	1002cd26 	beq	r2,zero,803a08 <___vfprintf_internal_r+0x185c>
  802ed4:	d9402d17 	ldw	r5,180(sp)
  802ed8:	d9002f17 	ldw	r4,188(sp)
  802edc:	28800017 	ldw	r2,0(r5)
  802ee0:	2007d7fa 	srai	r3,r4,31
  802ee4:	29400104 	addi	r5,r5,4
  802ee8:	d9402d15 	stw	r5,180(sp)
  802eec:	11000015 	stw	r4,0(r2)
  802ef0:	10c00115 	stw	r3,4(r2)
  802ef4:	003ce506 	br	80228c <__alt_data_end+0xff80228c>
  802ef8:	d8c02d17 	ldw	r3,180(sp)
  802efc:	d9002d17 	ldw	r4,180(sp)
  802f00:	d8002785 	stb	zero,158(sp)
  802f04:	18800017 	ldw	r2,0(r3)
  802f08:	21000104 	addi	r4,r4,4
  802f0c:	00c00044 	movi	r3,1
  802f10:	d8c02a15 	stw	r3,168(sp)
  802f14:	d8801405 	stb	r2,80(sp)
  802f18:	d9002d15 	stw	r4,180(sp)
  802f1c:	d8c02e15 	stw	r3,184(sp)
  802f20:	d8002915 	stw	zero,164(sp)
  802f24:	d8003215 	stw	zero,200(sp)
  802f28:	dc001404 	addi	r16,sp,80
  802f2c:	0039883a 	mov	fp,zero
  802f30:	003e7206 	br	8028fc <__alt_data_end+0xff8028fc>
  802f34:	01002074 	movhi	r4,129
  802f38:	21037804 	addi	r4,r4,3552
  802f3c:	0039883a 	mov	fp,zero
  802f40:	d9003915 	stw	r4,228(sp)
  802f44:	04401e04 	movi	r17,120
  802f48:	003f8206 	br	802d54 <__alt_data_end+0xff802d54>
  802f4c:	18c03fcc 	andi	r3,r3,255
  802f50:	1805061e 	bne	r3,zero,80436c <___vfprintf_internal_r+0x21c0>
  802f54:	883d9126 	beq	r17,zero,80259c <__alt_data_end+0xff80259c>
  802f58:	00c00044 	movi	r3,1
  802f5c:	d8c02a15 	stw	r3,168(sp)
  802f60:	dc401405 	stb	r17,80(sp)
  802f64:	d8002785 	stb	zero,158(sp)
  802f68:	003fec06 	br	802f1c <__alt_data_end+0xff802f1c>
  802f6c:	01402074 	movhi	r5,129
  802f70:	29437804 	addi	r5,r5,3552
  802f74:	d9403915 	stw	r5,228(sp)
  802f78:	d8c02d15 	stw	r3,180(sp)
  802f7c:	1025883a 	mov	r18,r2
  802f80:	04401e04 	movi	r17,120
  802f84:	9d84b03a 	or	r2,r19,r22
  802f88:	1000fc1e 	bne	r2,zero,80337c <___vfprintf_internal_r+0x11d0>
  802f8c:	0039883a 	mov	fp,zero
  802f90:	00800084 	movi	r2,2
  802f94:	10803fcc 	andi	r2,r2,255
  802f98:	00c00044 	movi	r3,1
  802f9c:	10c20f26 	beq	r2,r3,8037dc <___vfprintf_internal_r+0x1630>
  802fa0:	00c00084 	movi	r3,2
  802fa4:	10fd6326 	beq	r2,r3,802534 <__alt_data_end+0xff802534>
  802fa8:	003e2d06 	br	802860 <__alt_data_end+0xff802860>
  802fac:	d8c02017 	ldw	r3,128(sp)
  802fb0:	003e9306 	br	802a00 <__alt_data_end+0xff802a00>
  802fb4:	00801944 	movi	r2,101
  802fb8:	14407e0e 	bge	r2,r17,8031b4 <___vfprintf_internal_r+0x1008>
  802fbc:	d9003617 	ldw	r4,216(sp)
  802fc0:	d9403817 	ldw	r5,224(sp)
  802fc4:	000d883a 	mov	r6,zero
  802fc8:	000f883a 	mov	r7,zero
  802fcc:	d8c03c15 	stw	r3,240(sp)
  802fd0:	da003d15 	stw	r8,244(sp)
  802fd4:	080d72c0 	call	80d72c <__eqdf2>
  802fd8:	d8c03c17 	ldw	r3,240(sp)
  802fdc:	da003d17 	ldw	r8,244(sp)
  802fe0:	1000f71e 	bne	r2,zero,8033c0 <___vfprintf_internal_r+0x1214>
  802fe4:	d8801f17 	ldw	r2,124(sp)
  802fe8:	01002074 	movhi	r4,129
  802fec:	21037f04 	addi	r4,r4,3580
  802ff0:	18c00044 	addi	r3,r3,1
  802ff4:	10800044 	addi	r2,r2,1
  802ff8:	41000015 	stw	r4,0(r8)
  802ffc:	01000044 	movi	r4,1
  803000:	41000115 	stw	r4,4(r8)
  803004:	d8c02015 	stw	r3,128(sp)
  803008:	d8801f15 	stw	r2,124(sp)
  80300c:	010001c4 	movi	r4,7
  803010:	2082b816 	blt	r4,r2,803af4 <___vfprintf_internal_r+0x1948>
  803014:	42000204 	addi	r8,r8,8
  803018:	d8802617 	ldw	r2,152(sp)
  80301c:	d9403317 	ldw	r5,204(sp)
  803020:	11400216 	blt	r2,r5,80302c <___vfprintf_internal_r+0xe80>
  803024:	9080004c 	andi	r2,r18,1
  803028:	103ed526 	beq	r2,zero,802b80 <__alt_data_end+0xff802b80>
  80302c:	d8803717 	ldw	r2,220(sp)
  803030:	d9003417 	ldw	r4,208(sp)
  803034:	d9403717 	ldw	r5,220(sp)
  803038:	1887883a 	add	r3,r3,r2
  80303c:	d8801f17 	ldw	r2,124(sp)
  803040:	41000015 	stw	r4,0(r8)
  803044:	41400115 	stw	r5,4(r8)
  803048:	10800044 	addi	r2,r2,1
  80304c:	d8c02015 	stw	r3,128(sp)
  803050:	d8801f15 	stw	r2,124(sp)
  803054:	010001c4 	movi	r4,7
  803058:	20832916 	blt	r4,r2,803d00 <___vfprintf_internal_r+0x1b54>
  80305c:	42000204 	addi	r8,r8,8
  803060:	d8803317 	ldw	r2,204(sp)
  803064:	143fffc4 	addi	r16,r2,-1
  803068:	043ec50e 	bge	zero,r16,802b80 <__alt_data_end+0xff802b80>
  80306c:	04400404 	movi	r17,16
  803070:	d8801f17 	ldw	r2,124(sp)
  803074:	8c00880e 	bge	r17,r16,803298 <___vfprintf_internal_r+0x10ec>
  803078:	01402074 	movhi	r5,129
  80307c:	29437f84 	addi	r5,r5,3582
  803080:	d9402b15 	stw	r5,172(sp)
  803084:	058001c4 	movi	r22,7
  803088:	dcc02c17 	ldw	r19,176(sp)
  80308c:	00000306 	br	80309c <___vfprintf_internal_r+0xef0>
  803090:	42000204 	addi	r8,r8,8
  803094:	843ffc04 	addi	r16,r16,-16
  803098:	8c00820e 	bge	r17,r16,8032a4 <___vfprintf_internal_r+0x10f8>
  80309c:	18c00404 	addi	r3,r3,16
  8030a0:	10800044 	addi	r2,r2,1
  8030a4:	45000015 	stw	r20,0(r8)
  8030a8:	44400115 	stw	r17,4(r8)
  8030ac:	d8c02015 	stw	r3,128(sp)
  8030b0:	d8801f15 	stw	r2,124(sp)
  8030b4:	b0bff60e 	bge	r22,r2,803090 <__alt_data_end+0xff803090>
  8030b8:	d9801e04 	addi	r6,sp,120
  8030bc:	b80b883a 	mov	r5,r23
  8030c0:	9809883a 	mov	r4,r19
  8030c4:	080a3600 	call	80a360 <__sprint_r>
  8030c8:	103d3a1e 	bne	r2,zero,8025b4 <__alt_data_end+0xff8025b4>
  8030cc:	d8c02017 	ldw	r3,128(sp)
  8030d0:	d8801f17 	ldw	r2,124(sp)
  8030d4:	da000404 	addi	r8,sp,16
  8030d8:	003fee06 	br	803094 <__alt_data_end+0xff803094>
  8030dc:	d9403117 	ldw	r5,196(sp)
  8030e0:	d8802a17 	ldw	r2,168(sp)
  8030e4:	28adc83a 	sub	r22,r5,r2
  8030e8:	05be630e 	bge	zero,r22,802a78 <__alt_data_end+0xff802a78>
  8030ec:	07000404 	movi	fp,16
  8030f0:	d8801f17 	ldw	r2,124(sp)
  8030f4:	e5838f0e 	bge	fp,r22,803f34 <___vfprintf_internal_r+0x1d88>
  8030f8:	01402074 	movhi	r5,129
  8030fc:	29437f84 	addi	r5,r5,3582
  803100:	dc403015 	stw	r17,192(sp)
  803104:	d9402b15 	stw	r5,172(sp)
  803108:	b023883a 	mov	r17,r22
  80310c:	04c001c4 	movi	r19,7
  803110:	a82d883a 	mov	r22,r21
  803114:	902b883a 	mov	r21,r18
  803118:	8025883a 	mov	r18,r16
  80311c:	dc002c17 	ldw	r16,176(sp)
  803120:	00000306 	br	803130 <___vfprintf_internal_r+0xf84>
  803124:	8c7ffc04 	addi	r17,r17,-16
  803128:	42000204 	addi	r8,r8,8
  80312c:	e440110e 	bge	fp,r17,803174 <___vfprintf_internal_r+0xfc8>
  803130:	18c00404 	addi	r3,r3,16
  803134:	10800044 	addi	r2,r2,1
  803138:	45000015 	stw	r20,0(r8)
  80313c:	47000115 	stw	fp,4(r8)
  803140:	d8c02015 	stw	r3,128(sp)
  803144:	d8801f15 	stw	r2,124(sp)
  803148:	98bff60e 	bge	r19,r2,803124 <__alt_data_end+0xff803124>
  80314c:	d9801e04 	addi	r6,sp,120
  803150:	b80b883a 	mov	r5,r23
  803154:	8009883a 	mov	r4,r16
  803158:	080a3600 	call	80a360 <__sprint_r>
  80315c:	103d151e 	bne	r2,zero,8025b4 <__alt_data_end+0xff8025b4>
  803160:	8c7ffc04 	addi	r17,r17,-16
  803164:	d8c02017 	ldw	r3,128(sp)
  803168:	d8801f17 	ldw	r2,124(sp)
  80316c:	da000404 	addi	r8,sp,16
  803170:	e47fef16 	blt	fp,r17,803130 <__alt_data_end+0xff803130>
  803174:	9021883a 	mov	r16,r18
  803178:	a825883a 	mov	r18,r21
  80317c:	b02b883a 	mov	r21,r22
  803180:	882d883a 	mov	r22,r17
  803184:	dc403017 	ldw	r17,192(sp)
  803188:	d9002b17 	ldw	r4,172(sp)
  80318c:	1d87883a 	add	r3,r3,r22
  803190:	10800044 	addi	r2,r2,1
  803194:	41000015 	stw	r4,0(r8)
  803198:	45800115 	stw	r22,4(r8)
  80319c:	d8c02015 	stw	r3,128(sp)
  8031a0:	d8801f15 	stw	r2,124(sp)
  8031a4:	010001c4 	movi	r4,7
  8031a8:	20818e16 	blt	r4,r2,8037e4 <___vfprintf_internal_r+0x1638>
  8031ac:	42000204 	addi	r8,r8,8
  8031b0:	003e3106 	br	802a78 <__alt_data_end+0xff802a78>
  8031b4:	d9403317 	ldw	r5,204(sp)
  8031b8:	00800044 	movi	r2,1
  8031bc:	18c00044 	addi	r3,r3,1
  8031c0:	1141530e 	bge	r2,r5,803710 <___vfprintf_internal_r+0x1564>
  8031c4:	dc401f17 	ldw	r17,124(sp)
  8031c8:	00800044 	movi	r2,1
  8031cc:	40800115 	stw	r2,4(r8)
  8031d0:	8c400044 	addi	r17,r17,1
  8031d4:	44000015 	stw	r16,0(r8)
  8031d8:	d8c02015 	stw	r3,128(sp)
  8031dc:	dc401f15 	stw	r17,124(sp)
  8031e0:	008001c4 	movi	r2,7
  8031e4:	14416b16 	blt	r2,r17,803794 <___vfprintf_internal_r+0x15e8>
  8031e8:	42000204 	addi	r8,r8,8
  8031ec:	d8803717 	ldw	r2,220(sp)
  8031f0:	d9003417 	ldw	r4,208(sp)
  8031f4:	8c400044 	addi	r17,r17,1
  8031f8:	10c7883a 	add	r3,r2,r3
  8031fc:	40800115 	stw	r2,4(r8)
  803200:	41000015 	stw	r4,0(r8)
  803204:	d8c02015 	stw	r3,128(sp)
  803208:	dc401f15 	stw	r17,124(sp)
  80320c:	008001c4 	movi	r2,7
  803210:	14416916 	blt	r2,r17,8037b8 <___vfprintf_internal_r+0x160c>
  803214:	45800204 	addi	r22,r8,8
  803218:	d9003617 	ldw	r4,216(sp)
  80321c:	d9403817 	ldw	r5,224(sp)
  803220:	000d883a 	mov	r6,zero
  803224:	000f883a 	mov	r7,zero
  803228:	d8c03c15 	stw	r3,240(sp)
  80322c:	080d72c0 	call	80d72c <__eqdf2>
  803230:	d8c03c17 	ldw	r3,240(sp)
  803234:	1000bc26 	beq	r2,zero,803528 <___vfprintf_internal_r+0x137c>
  803238:	d9403317 	ldw	r5,204(sp)
  80323c:	84000044 	addi	r16,r16,1
  803240:	8c400044 	addi	r17,r17,1
  803244:	28bfffc4 	addi	r2,r5,-1
  803248:	1887883a 	add	r3,r3,r2
  80324c:	b0800115 	stw	r2,4(r22)
  803250:	b4000015 	stw	r16,0(r22)
  803254:	d8c02015 	stw	r3,128(sp)
  803258:	dc401f15 	stw	r17,124(sp)
  80325c:	008001c4 	movi	r2,7
  803260:	14414316 	blt	r2,r17,803770 <___vfprintf_internal_r+0x15c4>
  803264:	b5800204 	addi	r22,r22,8
  803268:	d9003a17 	ldw	r4,232(sp)
  80326c:	df0022c4 	addi	fp,sp,139
  803270:	8c400044 	addi	r17,r17,1
  803274:	20c7883a 	add	r3,r4,r3
  803278:	b7000015 	stw	fp,0(r22)
  80327c:	b1000115 	stw	r4,4(r22)
  803280:	d8c02015 	stw	r3,128(sp)
  803284:	dc401f15 	stw	r17,124(sp)
  803288:	008001c4 	movi	r2,7
  80328c:	14400e16 	blt	r2,r17,8032c8 <___vfprintf_internal_r+0x111c>
  803290:	b2000204 	addi	r8,r22,8
  803294:	003e3a06 	br	802b80 <__alt_data_end+0xff802b80>
  803298:	01002074 	movhi	r4,129
  80329c:	21037f84 	addi	r4,r4,3582
  8032a0:	d9002b15 	stw	r4,172(sp)
  8032a4:	d9002b17 	ldw	r4,172(sp)
  8032a8:	1c07883a 	add	r3,r3,r16
  8032ac:	44000115 	stw	r16,4(r8)
  8032b0:	41000015 	stw	r4,0(r8)
  8032b4:	10800044 	addi	r2,r2,1
  8032b8:	d8c02015 	stw	r3,128(sp)
  8032bc:	d8801f15 	stw	r2,124(sp)
  8032c0:	010001c4 	movi	r4,7
  8032c4:	20be2d0e 	bge	r4,r2,802b7c <__alt_data_end+0xff802b7c>
  8032c8:	d9002c17 	ldw	r4,176(sp)
  8032cc:	d9801e04 	addi	r6,sp,120
  8032d0:	b80b883a 	mov	r5,r23
  8032d4:	080a3600 	call	80a360 <__sprint_r>
  8032d8:	103cb61e 	bne	r2,zero,8025b4 <__alt_data_end+0xff8025b4>
  8032dc:	d8c02017 	ldw	r3,128(sp)
  8032e0:	da000404 	addi	r8,sp,16
  8032e4:	003e2606 	br	802b80 <__alt_data_end+0xff802b80>
  8032e8:	d9002c17 	ldw	r4,176(sp)
  8032ec:	d9801e04 	addi	r6,sp,120
  8032f0:	b80b883a 	mov	r5,r23
  8032f4:	080a3600 	call	80a360 <__sprint_r>
  8032f8:	103e5d26 	beq	r2,zero,802c70 <__alt_data_end+0xff802c70>
  8032fc:	003cad06 	br	8025b4 <__alt_data_end+0xff8025b4>
  803300:	d9002c17 	ldw	r4,176(sp)
  803304:	d9801e04 	addi	r6,sp,120
  803308:	b80b883a 	mov	r5,r23
  80330c:	080a3600 	call	80a360 <__sprint_r>
  803310:	103ca81e 	bne	r2,zero,8025b4 <__alt_data_end+0xff8025b4>
  803314:	d8c02017 	ldw	r3,128(sp)
  803318:	da000404 	addi	r8,sp,16
  80331c:	003e0b06 	br	802b4c <__alt_data_end+0xff802b4c>
  803320:	d9002c17 	ldw	r4,176(sp)
  803324:	d9801e04 	addi	r6,sp,120
  803328:	b80b883a 	mov	r5,r23
  80332c:	080a3600 	call	80a360 <__sprint_r>
  803330:	103ca01e 	bne	r2,zero,8025b4 <__alt_data_end+0xff8025b4>
  803334:	d8c02017 	ldw	r3,128(sp)
  803338:	da000404 	addi	r8,sp,16
  80333c:	003dbd06 	br	802a34 <__alt_data_end+0xff802a34>
  803340:	d9002c17 	ldw	r4,176(sp)
  803344:	d9801e04 	addi	r6,sp,120
  803348:	b80b883a 	mov	r5,r23
  80334c:	080a3600 	call	80a360 <__sprint_r>
  803350:	103c981e 	bne	r2,zero,8025b4 <__alt_data_end+0xff8025b4>
  803354:	d8c02017 	ldw	r3,128(sp)
  803358:	da000404 	addi	r8,sp,16
  80335c:	003dc306 	br	802a6c <__alt_data_end+0xff802a6c>
  803360:	d8802917 	ldw	r2,164(sp)
  803364:	d8002785 	stb	zero,158(sp)
  803368:	103f0616 	blt	r2,zero,802f84 <__alt_data_end+0xff802f84>
  80336c:	00ffdfc4 	movi	r3,-129
  803370:	9d84b03a 	or	r2,r19,r22
  803374:	90e4703a 	and	r18,r18,r3
  803378:	103c6b26 	beq	r2,zero,802528 <__alt_data_end+0xff802528>
  80337c:	0039883a 	mov	fp,zero
  803380:	003e7406 	br	802d54 <__alt_data_end+0xff802d54>
  803384:	9080040c 	andi	r2,r18,16
  803388:	1001b326 	beq	r2,zero,803a58 <___vfprintf_internal_r+0x18ac>
  80338c:	d9002d17 	ldw	r4,180(sp)
  803390:	d9402917 	ldw	r5,164(sp)
  803394:	d8002785 	stb	zero,158(sp)
  803398:	20800104 	addi	r2,r4,4
  80339c:	24c00017 	ldw	r19,0(r4)
  8033a0:	002d883a 	mov	r22,zero
  8033a4:	2801b516 	blt	r5,zero,803a7c <___vfprintf_internal_r+0x18d0>
  8033a8:	00ffdfc4 	movi	r3,-129
  8033ac:	d8802d15 	stw	r2,180(sp)
  8033b0:	90e4703a 	and	r18,r18,r3
  8033b4:	983d2726 	beq	r19,zero,802854 <__alt_data_end+0xff802854>
  8033b8:	0039883a 	mov	fp,zero
  8033bc:	003d2a06 	br	802868 <__alt_data_end+0xff802868>
  8033c0:	dc402617 	ldw	r17,152(sp)
  8033c4:	0441d30e 	bge	zero,r17,803b14 <___vfprintf_internal_r+0x1968>
  8033c8:	dc403217 	ldw	r17,200(sp)
  8033cc:	d8803317 	ldw	r2,204(sp)
  8033d0:	1440010e 	bge	r2,r17,8033d8 <___vfprintf_internal_r+0x122c>
  8033d4:	1023883a 	mov	r17,r2
  8033d8:	04400a0e 	bge	zero,r17,803404 <___vfprintf_internal_r+0x1258>
  8033dc:	d8801f17 	ldw	r2,124(sp)
  8033e0:	1c47883a 	add	r3,r3,r17
  8033e4:	44000015 	stw	r16,0(r8)
  8033e8:	10800044 	addi	r2,r2,1
  8033ec:	44400115 	stw	r17,4(r8)
  8033f0:	d8c02015 	stw	r3,128(sp)
  8033f4:	d8801f15 	stw	r2,124(sp)
  8033f8:	010001c4 	movi	r4,7
  8033fc:	20826516 	blt	r4,r2,803d94 <___vfprintf_internal_r+0x1be8>
  803400:	42000204 	addi	r8,r8,8
  803404:	88026116 	blt	r17,zero,803d8c <___vfprintf_internal_r+0x1be0>
  803408:	d9003217 	ldw	r4,200(sp)
  80340c:	2463c83a 	sub	r17,r4,r17
  803410:	04407b0e 	bge	zero,r17,803600 <___vfprintf_internal_r+0x1454>
  803414:	05800404 	movi	r22,16
  803418:	d8801f17 	ldw	r2,124(sp)
  80341c:	b4419d0e 	bge	r22,r17,803a94 <___vfprintf_internal_r+0x18e8>
  803420:	01002074 	movhi	r4,129
  803424:	21037f84 	addi	r4,r4,3582
  803428:	d9002b15 	stw	r4,172(sp)
  80342c:	070001c4 	movi	fp,7
  803430:	dcc02c17 	ldw	r19,176(sp)
  803434:	00000306 	br	803444 <___vfprintf_internal_r+0x1298>
  803438:	42000204 	addi	r8,r8,8
  80343c:	8c7ffc04 	addi	r17,r17,-16
  803440:	b441970e 	bge	r22,r17,803aa0 <___vfprintf_internal_r+0x18f4>
  803444:	18c00404 	addi	r3,r3,16
  803448:	10800044 	addi	r2,r2,1
  80344c:	45000015 	stw	r20,0(r8)
  803450:	45800115 	stw	r22,4(r8)
  803454:	d8c02015 	stw	r3,128(sp)
  803458:	d8801f15 	stw	r2,124(sp)
  80345c:	e0bff60e 	bge	fp,r2,803438 <__alt_data_end+0xff803438>
  803460:	d9801e04 	addi	r6,sp,120
  803464:	b80b883a 	mov	r5,r23
  803468:	9809883a 	mov	r4,r19
  80346c:	080a3600 	call	80a360 <__sprint_r>
  803470:	103c501e 	bne	r2,zero,8025b4 <__alt_data_end+0xff8025b4>
  803474:	d8c02017 	ldw	r3,128(sp)
  803478:	d8801f17 	ldw	r2,124(sp)
  80347c:	da000404 	addi	r8,sp,16
  803480:	003fee06 	br	80343c <__alt_data_end+0xff80343c>
  803484:	d9002c17 	ldw	r4,176(sp)
  803488:	d9801e04 	addi	r6,sp,120
  80348c:	b80b883a 	mov	r5,r23
  803490:	080a3600 	call	80a360 <__sprint_r>
  803494:	103c471e 	bne	r2,zero,8025b4 <__alt_data_end+0xff8025b4>
  803498:	d8c02017 	ldw	r3,128(sp)
  80349c:	df002787 	ldb	fp,158(sp)
  8034a0:	da000404 	addi	r8,sp,16
  8034a4:	003d5606 	br	802a00 <__alt_data_end+0xff802a00>
  8034a8:	9080040c 	andi	r2,r18,16
  8034ac:	10016126 	beq	r2,zero,803a34 <___vfprintf_internal_r+0x1888>
  8034b0:	d8802d17 	ldw	r2,180(sp)
  8034b4:	14c00017 	ldw	r19,0(r2)
  8034b8:	10800104 	addi	r2,r2,4
  8034bc:	d8802d15 	stw	r2,180(sp)
  8034c0:	982dd7fa 	srai	r22,r19,31
  8034c4:	b005883a 	mov	r2,r22
  8034c8:	003c8206 	br	8026d4 <__alt_data_end+0xff8026d4>
  8034cc:	9080040c 	andi	r2,r18,16
  8034d0:	10003526 	beq	r2,zero,8035a8 <___vfprintf_internal_r+0x13fc>
  8034d4:	d9402d17 	ldw	r5,180(sp)
  8034d8:	d8c02917 	ldw	r3,164(sp)
  8034dc:	d8002785 	stb	zero,158(sp)
  8034e0:	28800104 	addi	r2,r5,4
  8034e4:	2cc00017 	ldw	r19,0(r5)
  8034e8:	002d883a 	mov	r22,zero
  8034ec:	18003716 	blt	r3,zero,8035cc <___vfprintf_internal_r+0x1420>
  8034f0:	00ffdfc4 	movi	r3,-129
  8034f4:	d8802d15 	stw	r2,180(sp)
  8034f8:	90e4703a 	and	r18,r18,r3
  8034fc:	0039883a 	mov	fp,zero
  803500:	983df326 	beq	r19,zero,802cd0 <__alt_data_end+0xff802cd0>
  803504:	00800244 	movi	r2,9
  803508:	14fc7b36 	bltu	r2,r19,8026f8 <__alt_data_end+0xff8026f8>
  80350c:	d8c02817 	ldw	r3,160(sp)
  803510:	dc001dc4 	addi	r16,sp,119
  803514:	9cc00c04 	addi	r19,r19,48
  803518:	1c07c83a 	sub	r3,r3,r16
  80351c:	dcc01dc5 	stb	r19,119(sp)
  803520:	d8c02e15 	stw	r3,184(sp)
  803524:	003ce806 	br	8028c8 <__alt_data_end+0xff8028c8>
  803528:	d8803317 	ldw	r2,204(sp)
  80352c:	143fffc4 	addi	r16,r2,-1
  803530:	043f4d0e 	bge	zero,r16,803268 <__alt_data_end+0xff803268>
  803534:	07000404 	movi	fp,16
  803538:	e400810e 	bge	fp,r16,803740 <___vfprintf_internal_r+0x1594>
  80353c:	01402074 	movhi	r5,129
  803540:	29437f84 	addi	r5,r5,3582
  803544:	d9402b15 	stw	r5,172(sp)
  803548:	01c001c4 	movi	r7,7
  80354c:	dcc02c17 	ldw	r19,176(sp)
  803550:	00000306 	br	803560 <___vfprintf_internal_r+0x13b4>
  803554:	b5800204 	addi	r22,r22,8
  803558:	843ffc04 	addi	r16,r16,-16
  80355c:	e4007b0e 	bge	fp,r16,80374c <___vfprintf_internal_r+0x15a0>
  803560:	18c00404 	addi	r3,r3,16
  803564:	8c400044 	addi	r17,r17,1
  803568:	b5000015 	stw	r20,0(r22)
  80356c:	b7000115 	stw	fp,4(r22)
  803570:	d8c02015 	stw	r3,128(sp)
  803574:	dc401f15 	stw	r17,124(sp)
  803578:	3c7ff60e 	bge	r7,r17,803554 <__alt_data_end+0xff803554>
  80357c:	d9801e04 	addi	r6,sp,120
  803580:	b80b883a 	mov	r5,r23
  803584:	9809883a 	mov	r4,r19
  803588:	d9c03c15 	stw	r7,240(sp)
  80358c:	080a3600 	call	80a360 <__sprint_r>
  803590:	d9c03c17 	ldw	r7,240(sp)
  803594:	103c071e 	bne	r2,zero,8025b4 <__alt_data_end+0xff8025b4>
  803598:	d8c02017 	ldw	r3,128(sp)
  80359c:	dc401f17 	ldw	r17,124(sp)
  8035a0:	dd800404 	addi	r22,sp,16
  8035a4:	003fec06 	br	803558 <__alt_data_end+0xff803558>
  8035a8:	9080100c 	andi	r2,r18,64
  8035ac:	d8002785 	stb	zero,158(sp)
  8035b0:	10010e26 	beq	r2,zero,8039ec <___vfprintf_internal_r+0x1840>
  8035b4:	d9002d17 	ldw	r4,180(sp)
  8035b8:	d9402917 	ldw	r5,164(sp)
  8035bc:	002d883a 	mov	r22,zero
  8035c0:	20800104 	addi	r2,r4,4
  8035c4:	24c0000b 	ldhu	r19,0(r4)
  8035c8:	283fc90e 	bge	r5,zero,8034f0 <__alt_data_end+0xff8034f0>
  8035cc:	d8802d15 	stw	r2,180(sp)
  8035d0:	0039883a 	mov	fp,zero
  8035d4:	9d84b03a 	or	r2,r19,r22
  8035d8:	103c461e 	bne	r2,zero,8026f4 <__alt_data_end+0xff8026f4>
  8035dc:	00800044 	movi	r2,1
  8035e0:	003e6c06 	br	802f94 <__alt_data_end+0xff802f94>
  8035e4:	d9002c17 	ldw	r4,176(sp)
  8035e8:	d9801e04 	addi	r6,sp,120
  8035ec:	b80b883a 	mov	r5,r23
  8035f0:	080a3600 	call	80a360 <__sprint_r>
  8035f4:	103bef1e 	bne	r2,zero,8025b4 <__alt_data_end+0xff8025b4>
  8035f8:	d8c02017 	ldw	r3,128(sp)
  8035fc:	da000404 	addi	r8,sp,16
  803600:	d9003217 	ldw	r4,200(sp)
  803604:	d8802617 	ldw	r2,152(sp)
  803608:	d9403317 	ldw	r5,204(sp)
  80360c:	8123883a 	add	r17,r16,r4
  803610:	11400216 	blt	r2,r5,80361c <___vfprintf_internal_r+0x1470>
  803614:	9100004c 	andi	r4,r18,1
  803618:	20000d26 	beq	r4,zero,803650 <___vfprintf_internal_r+0x14a4>
  80361c:	d9003717 	ldw	r4,220(sp)
  803620:	d9403417 	ldw	r5,208(sp)
  803624:	1907883a 	add	r3,r3,r4
  803628:	d9001f17 	ldw	r4,124(sp)
  80362c:	41400015 	stw	r5,0(r8)
  803630:	d9403717 	ldw	r5,220(sp)
  803634:	21000044 	addi	r4,r4,1
  803638:	d8c02015 	stw	r3,128(sp)
  80363c:	41400115 	stw	r5,4(r8)
  803640:	d9001f15 	stw	r4,124(sp)
  803644:	014001c4 	movi	r5,7
  803648:	2901e816 	blt	r5,r4,803dec <___vfprintf_internal_r+0x1c40>
  80364c:	42000204 	addi	r8,r8,8
  803650:	d9003317 	ldw	r4,204(sp)
  803654:	8121883a 	add	r16,r16,r4
  803658:	2085c83a 	sub	r2,r4,r2
  80365c:	8461c83a 	sub	r16,r16,r17
  803660:	1400010e 	bge	r2,r16,803668 <___vfprintf_internal_r+0x14bc>
  803664:	1021883a 	mov	r16,r2
  803668:	04000a0e 	bge	zero,r16,803694 <___vfprintf_internal_r+0x14e8>
  80366c:	d9001f17 	ldw	r4,124(sp)
  803670:	1c07883a 	add	r3,r3,r16
  803674:	44400015 	stw	r17,0(r8)
  803678:	21000044 	addi	r4,r4,1
  80367c:	44000115 	stw	r16,4(r8)
  803680:	d8c02015 	stw	r3,128(sp)
  803684:	d9001f15 	stw	r4,124(sp)
  803688:	014001c4 	movi	r5,7
  80368c:	2901fb16 	blt	r5,r4,803e7c <___vfprintf_internal_r+0x1cd0>
  803690:	42000204 	addi	r8,r8,8
  803694:	8001f716 	blt	r16,zero,803e74 <___vfprintf_internal_r+0x1cc8>
  803698:	1421c83a 	sub	r16,r2,r16
  80369c:	043d380e 	bge	zero,r16,802b80 <__alt_data_end+0xff802b80>
  8036a0:	04400404 	movi	r17,16
  8036a4:	d8801f17 	ldw	r2,124(sp)
  8036a8:	8c3efb0e 	bge	r17,r16,803298 <__alt_data_end+0xff803298>
  8036ac:	01402074 	movhi	r5,129
  8036b0:	29437f84 	addi	r5,r5,3582
  8036b4:	d9402b15 	stw	r5,172(sp)
  8036b8:	058001c4 	movi	r22,7
  8036bc:	dcc02c17 	ldw	r19,176(sp)
  8036c0:	00000306 	br	8036d0 <___vfprintf_internal_r+0x1524>
  8036c4:	42000204 	addi	r8,r8,8
  8036c8:	843ffc04 	addi	r16,r16,-16
  8036cc:	8c3ef50e 	bge	r17,r16,8032a4 <__alt_data_end+0xff8032a4>
  8036d0:	18c00404 	addi	r3,r3,16
  8036d4:	10800044 	addi	r2,r2,1
  8036d8:	45000015 	stw	r20,0(r8)
  8036dc:	44400115 	stw	r17,4(r8)
  8036e0:	d8c02015 	stw	r3,128(sp)
  8036e4:	d8801f15 	stw	r2,124(sp)
  8036e8:	b0bff60e 	bge	r22,r2,8036c4 <__alt_data_end+0xff8036c4>
  8036ec:	d9801e04 	addi	r6,sp,120
  8036f0:	b80b883a 	mov	r5,r23
  8036f4:	9809883a 	mov	r4,r19
  8036f8:	080a3600 	call	80a360 <__sprint_r>
  8036fc:	103bad1e 	bne	r2,zero,8025b4 <__alt_data_end+0xff8025b4>
  803700:	d8c02017 	ldw	r3,128(sp)
  803704:	d8801f17 	ldw	r2,124(sp)
  803708:	da000404 	addi	r8,sp,16
  80370c:	003fee06 	br	8036c8 <__alt_data_end+0xff8036c8>
  803710:	9088703a 	and	r4,r18,r2
  803714:	203eab1e 	bne	r4,zero,8031c4 <__alt_data_end+0xff8031c4>
  803718:	dc401f17 	ldw	r17,124(sp)
  80371c:	40800115 	stw	r2,4(r8)
  803720:	44000015 	stw	r16,0(r8)
  803724:	8c400044 	addi	r17,r17,1
  803728:	d8c02015 	stw	r3,128(sp)
  80372c:	dc401f15 	stw	r17,124(sp)
  803730:	008001c4 	movi	r2,7
  803734:	14400e16 	blt	r2,r17,803770 <___vfprintf_internal_r+0x15c4>
  803738:	45800204 	addi	r22,r8,8
  80373c:	003eca06 	br	803268 <__alt_data_end+0xff803268>
  803740:	01002074 	movhi	r4,129
  803744:	21037f84 	addi	r4,r4,3582
  803748:	d9002b15 	stw	r4,172(sp)
  80374c:	d8802b17 	ldw	r2,172(sp)
  803750:	1c07883a 	add	r3,r3,r16
  803754:	8c400044 	addi	r17,r17,1
  803758:	b0800015 	stw	r2,0(r22)
  80375c:	b4000115 	stw	r16,4(r22)
  803760:	d8c02015 	stw	r3,128(sp)
  803764:	dc401f15 	stw	r17,124(sp)
  803768:	008001c4 	movi	r2,7
  80376c:	147ebd0e 	bge	r2,r17,803264 <__alt_data_end+0xff803264>
  803770:	d9002c17 	ldw	r4,176(sp)
  803774:	d9801e04 	addi	r6,sp,120
  803778:	b80b883a 	mov	r5,r23
  80377c:	080a3600 	call	80a360 <__sprint_r>
  803780:	103b8c1e 	bne	r2,zero,8025b4 <__alt_data_end+0xff8025b4>
  803784:	d8c02017 	ldw	r3,128(sp)
  803788:	dc401f17 	ldw	r17,124(sp)
  80378c:	dd800404 	addi	r22,sp,16
  803790:	003eb506 	br	803268 <__alt_data_end+0xff803268>
  803794:	d9002c17 	ldw	r4,176(sp)
  803798:	d9801e04 	addi	r6,sp,120
  80379c:	b80b883a 	mov	r5,r23
  8037a0:	080a3600 	call	80a360 <__sprint_r>
  8037a4:	103b831e 	bne	r2,zero,8025b4 <__alt_data_end+0xff8025b4>
  8037a8:	d8c02017 	ldw	r3,128(sp)
  8037ac:	dc401f17 	ldw	r17,124(sp)
  8037b0:	da000404 	addi	r8,sp,16
  8037b4:	003e8d06 	br	8031ec <__alt_data_end+0xff8031ec>
  8037b8:	d9002c17 	ldw	r4,176(sp)
  8037bc:	d9801e04 	addi	r6,sp,120
  8037c0:	b80b883a 	mov	r5,r23
  8037c4:	080a3600 	call	80a360 <__sprint_r>
  8037c8:	103b7a1e 	bne	r2,zero,8025b4 <__alt_data_end+0xff8025b4>
  8037cc:	d8c02017 	ldw	r3,128(sp)
  8037d0:	dc401f17 	ldw	r17,124(sp)
  8037d4:	dd800404 	addi	r22,sp,16
  8037d8:	003e8f06 	br	803218 <__alt_data_end+0xff803218>
  8037dc:	0027883a 	mov	r19,zero
  8037e0:	003f4a06 	br	80350c <__alt_data_end+0xff80350c>
  8037e4:	d9002c17 	ldw	r4,176(sp)
  8037e8:	d9801e04 	addi	r6,sp,120
  8037ec:	b80b883a 	mov	r5,r23
  8037f0:	080a3600 	call	80a360 <__sprint_r>
  8037f4:	103b6f1e 	bne	r2,zero,8025b4 <__alt_data_end+0xff8025b4>
  8037f8:	d8c02017 	ldw	r3,128(sp)
  8037fc:	da000404 	addi	r8,sp,16
  803800:	003c9d06 	br	802a78 <__alt_data_end+0xff802a78>
  803804:	04e7c83a 	sub	r19,zero,r19
  803808:	9804c03a 	cmpne	r2,r19,zero
  80380c:	05adc83a 	sub	r22,zero,r22
  803810:	b0adc83a 	sub	r22,r22,r2
  803814:	d8802917 	ldw	r2,164(sp)
  803818:	07000b44 	movi	fp,45
  80381c:	df002785 	stb	fp,158(sp)
  803820:	10017b16 	blt	r2,zero,803e10 <___vfprintf_internal_r+0x1c64>
  803824:	00bfdfc4 	movi	r2,-129
  803828:	90a4703a 	and	r18,r18,r2
  80382c:	003bb106 	br	8026f4 <__alt_data_end+0xff8026f4>
  803830:	d9003617 	ldw	r4,216(sp)
  803834:	d9403817 	ldw	r5,224(sp)
  803838:	da003d15 	stw	r8,244(sp)
  80383c:	0809ef40 	call	809ef4 <__fpclassifyd>
  803840:	da003d17 	ldw	r8,244(sp)
  803844:	1000f026 	beq	r2,zero,803c08 <___vfprintf_internal_r+0x1a5c>
  803848:	d9002917 	ldw	r4,164(sp)
  80384c:	05bff7c4 	movi	r22,-33
  803850:	00bfffc4 	movi	r2,-1
  803854:	8dac703a 	and	r22,r17,r22
  803858:	20820026 	beq	r4,r2,80405c <___vfprintf_internal_r+0x1eb0>
  80385c:	008011c4 	movi	r2,71
  803860:	b081f726 	beq	r22,r2,804040 <___vfprintf_internal_r+0x1e94>
  803864:	d9003817 	ldw	r4,224(sp)
  803868:	90c04014 	ori	r3,r18,256
  80386c:	d8c02b15 	stw	r3,172(sp)
  803870:	20021516 	blt	r4,zero,8040c8 <___vfprintf_internal_r+0x1f1c>
  803874:	dcc03817 	ldw	r19,224(sp)
  803878:	d8002a05 	stb	zero,168(sp)
  80387c:	00801984 	movi	r2,102
  803880:	8881f926 	beq	r17,r2,804068 <___vfprintf_internal_r+0x1ebc>
  803884:	00801184 	movi	r2,70
  803888:	88821c26 	beq	r17,r2,8040fc <___vfprintf_internal_r+0x1f50>
  80388c:	00801144 	movi	r2,69
  803890:	b081ef26 	beq	r22,r2,804050 <___vfprintf_internal_r+0x1ea4>
  803894:	d8c02917 	ldw	r3,164(sp)
  803898:	d8802104 	addi	r2,sp,132
  80389c:	d8800315 	stw	r2,12(sp)
  8038a0:	d9403617 	ldw	r5,216(sp)
  8038a4:	d8802504 	addi	r2,sp,148
  8038a8:	d9002c17 	ldw	r4,176(sp)
  8038ac:	d8800215 	stw	r2,8(sp)
  8038b0:	d8802604 	addi	r2,sp,152
  8038b4:	d8c00015 	stw	r3,0(sp)
  8038b8:	d8800115 	stw	r2,4(sp)
  8038bc:	01c00084 	movi	r7,2
  8038c0:	980d883a 	mov	r6,r19
  8038c4:	d8c03c15 	stw	r3,240(sp)
  8038c8:	da003d15 	stw	r8,244(sp)
  8038cc:	08047d00 	call	8047d0 <_dtoa_r>
  8038d0:	1021883a 	mov	r16,r2
  8038d4:	008019c4 	movi	r2,103
  8038d8:	d8c03c17 	ldw	r3,240(sp)
  8038dc:	da003d17 	ldw	r8,244(sp)
  8038e0:	88817126 	beq	r17,r2,803ea8 <___vfprintf_internal_r+0x1cfc>
  8038e4:	008011c4 	movi	r2,71
  8038e8:	88829226 	beq	r17,r2,804334 <___vfprintf_internal_r+0x2188>
  8038ec:	80f9883a 	add	fp,r16,r3
  8038f0:	d9003617 	ldw	r4,216(sp)
  8038f4:	000d883a 	mov	r6,zero
  8038f8:	000f883a 	mov	r7,zero
  8038fc:	980b883a 	mov	r5,r19
  803900:	da003d15 	stw	r8,244(sp)
  803904:	080d72c0 	call	80d72c <__eqdf2>
  803908:	da003d17 	ldw	r8,244(sp)
  80390c:	10018d26 	beq	r2,zero,803f44 <___vfprintf_internal_r+0x1d98>
  803910:	d8802117 	ldw	r2,132(sp)
  803914:	1700062e 	bgeu	r2,fp,803930 <___vfprintf_internal_r+0x1784>
  803918:	01000c04 	movi	r4,48
  80391c:	10c00044 	addi	r3,r2,1
  803920:	d8c02115 	stw	r3,132(sp)
  803924:	11000005 	stb	r4,0(r2)
  803928:	d8802117 	ldw	r2,132(sp)
  80392c:	173ffb36 	bltu	r2,fp,80391c <__alt_data_end+0xff80391c>
  803930:	1405c83a 	sub	r2,r2,r16
  803934:	d8803315 	stw	r2,204(sp)
  803938:	008011c4 	movi	r2,71
  80393c:	b0817626 	beq	r22,r2,803f18 <___vfprintf_internal_r+0x1d6c>
  803940:	00801944 	movi	r2,101
  803944:	1442810e 	bge	r2,r17,80434c <___vfprintf_internal_r+0x21a0>
  803948:	d8c02617 	ldw	r3,152(sp)
  80394c:	00801984 	movi	r2,102
  803950:	d8c03215 	stw	r3,200(sp)
  803954:	8881fe26 	beq	r17,r2,804150 <___vfprintf_internal_r+0x1fa4>
  803958:	d8c03217 	ldw	r3,200(sp)
  80395c:	d9003317 	ldw	r4,204(sp)
  803960:	1901dd16 	blt	r3,r4,8040d8 <___vfprintf_internal_r+0x1f2c>
  803964:	9480004c 	andi	r18,r18,1
  803968:	90022b1e 	bne	r18,zero,804218 <___vfprintf_internal_r+0x206c>
  80396c:	1805883a 	mov	r2,r3
  803970:	18028016 	blt	r3,zero,804374 <___vfprintf_internal_r+0x21c8>
  803974:	d8c03217 	ldw	r3,200(sp)
  803978:	044019c4 	movi	r17,103
  80397c:	d8c02e15 	stw	r3,184(sp)
  803980:	df002a07 	ldb	fp,168(sp)
  803984:	e001531e 	bne	fp,zero,803ed4 <___vfprintf_internal_r+0x1d28>
  803988:	df002783 	ldbu	fp,158(sp)
  80398c:	d8802a15 	stw	r2,168(sp)
  803990:	dc802b17 	ldw	r18,172(sp)
  803994:	d8002915 	stw	zero,164(sp)
  803998:	003bd106 	br	8028e0 <__alt_data_end+0xff8028e0>
  80399c:	d8802d17 	ldw	r2,180(sp)
  8039a0:	d8c02d17 	ldw	r3,180(sp)
  8039a4:	d9002d17 	ldw	r4,180(sp)
  8039a8:	10800017 	ldw	r2,0(r2)
  8039ac:	18c00117 	ldw	r3,4(r3)
  8039b0:	21000204 	addi	r4,r4,8
  8039b4:	d8803615 	stw	r2,216(sp)
  8039b8:	d8c03815 	stw	r3,224(sp)
  8039bc:	d9002d15 	stw	r4,180(sp)
  8039c0:	003b7506 	br	802798 <__alt_data_end+0xff802798>
  8039c4:	ac400007 	ldb	r17,0(r21)
  8039c8:	003a5906 	br	802330 <__alt_data_end+0xff802330>
  8039cc:	9080100c 	andi	r2,r18,64
  8039d0:	1000a826 	beq	r2,zero,803c74 <___vfprintf_internal_r+0x1ac8>
  8039d4:	d9002d17 	ldw	r4,180(sp)
  8039d8:	002d883a 	mov	r22,zero
  8039dc:	24c0000b 	ldhu	r19,0(r4)
  8039e0:	21000104 	addi	r4,r4,4
  8039e4:	d9002d15 	stw	r4,180(sp)
  8039e8:	003ccb06 	br	802d18 <__alt_data_end+0xff802d18>
  8039ec:	d8c02d17 	ldw	r3,180(sp)
  8039f0:	d9002917 	ldw	r4,164(sp)
  8039f4:	002d883a 	mov	r22,zero
  8039f8:	18800104 	addi	r2,r3,4
  8039fc:	1cc00017 	ldw	r19,0(r3)
  803a00:	203ebb0e 	bge	r4,zero,8034f0 <__alt_data_end+0xff8034f0>
  803a04:	003ef106 	br	8035cc <__alt_data_end+0xff8035cc>
  803a08:	9080040c 	andi	r2,r18,16
  803a0c:	1000921e 	bne	r2,zero,803c58 <___vfprintf_internal_r+0x1aac>
  803a10:	9480100c 	andi	r18,r18,64
  803a14:	90013926 	beq	r18,zero,803efc <___vfprintf_internal_r+0x1d50>
  803a18:	d9002d17 	ldw	r4,180(sp)
  803a1c:	d9402f17 	ldw	r5,188(sp)
  803a20:	20800017 	ldw	r2,0(r4)
  803a24:	21000104 	addi	r4,r4,4
  803a28:	d9002d15 	stw	r4,180(sp)
  803a2c:	1140000d 	sth	r5,0(r2)
  803a30:	003a1606 	br	80228c <__alt_data_end+0xff80228c>
  803a34:	9080100c 	andi	r2,r18,64
  803a38:	10008026 	beq	r2,zero,803c3c <___vfprintf_internal_r+0x1a90>
  803a3c:	d8c02d17 	ldw	r3,180(sp)
  803a40:	1cc0000f 	ldh	r19,0(r3)
  803a44:	18c00104 	addi	r3,r3,4
  803a48:	d8c02d15 	stw	r3,180(sp)
  803a4c:	982dd7fa 	srai	r22,r19,31
  803a50:	b005883a 	mov	r2,r22
  803a54:	003b1f06 	br	8026d4 <__alt_data_end+0xff8026d4>
  803a58:	9080100c 	andi	r2,r18,64
  803a5c:	d8002785 	stb	zero,158(sp)
  803a60:	10008a1e 	bne	r2,zero,803c8c <___vfprintf_internal_r+0x1ae0>
  803a64:	d9402d17 	ldw	r5,180(sp)
  803a68:	d8c02917 	ldw	r3,164(sp)
  803a6c:	002d883a 	mov	r22,zero
  803a70:	28800104 	addi	r2,r5,4
  803a74:	2cc00017 	ldw	r19,0(r5)
  803a78:	183e4b0e 	bge	r3,zero,8033a8 <__alt_data_end+0xff8033a8>
  803a7c:	9d86b03a 	or	r3,r19,r22
  803a80:	d8802d15 	stw	r2,180(sp)
  803a84:	183e4c1e 	bne	r3,zero,8033b8 <__alt_data_end+0xff8033b8>
  803a88:	0039883a 	mov	fp,zero
  803a8c:	0005883a 	mov	r2,zero
  803a90:	003d4006 	br	802f94 <__alt_data_end+0xff802f94>
  803a94:	01402074 	movhi	r5,129
  803a98:	29437f84 	addi	r5,r5,3582
  803a9c:	d9402b15 	stw	r5,172(sp)
  803aa0:	d9402b17 	ldw	r5,172(sp)
  803aa4:	1c47883a 	add	r3,r3,r17
  803aa8:	10800044 	addi	r2,r2,1
  803aac:	41400015 	stw	r5,0(r8)
  803ab0:	44400115 	stw	r17,4(r8)
  803ab4:	d8c02015 	stw	r3,128(sp)
  803ab8:	d8801f15 	stw	r2,124(sp)
  803abc:	010001c4 	movi	r4,7
  803ac0:	20bec816 	blt	r4,r2,8035e4 <__alt_data_end+0xff8035e4>
  803ac4:	42000204 	addi	r8,r8,8
  803ac8:	003ecd06 	br	803600 <__alt_data_end+0xff803600>
  803acc:	d9002917 	ldw	r4,164(sp)
  803ad0:	d8002785 	stb	zero,158(sp)
  803ad4:	203d2d16 	blt	r4,zero,802f8c <__alt_data_end+0xff802f8c>
  803ad8:	00bfdfc4 	movi	r2,-129
  803adc:	90a4703a 	and	r18,r18,r2
  803ae0:	003a9106 	br	802528 <__alt_data_end+0xff802528>
  803ae4:	01002074 	movhi	r4,129
  803ae8:	21037f84 	addi	r4,r4,3582
  803aec:	d9002b15 	stw	r4,172(sp)
  803af0:	003c0c06 	br	802b24 <__alt_data_end+0xff802b24>
  803af4:	d9002c17 	ldw	r4,176(sp)
  803af8:	d9801e04 	addi	r6,sp,120
  803afc:	b80b883a 	mov	r5,r23
  803b00:	080a3600 	call	80a360 <__sprint_r>
  803b04:	103aab1e 	bne	r2,zero,8025b4 <__alt_data_end+0xff8025b4>
  803b08:	d8c02017 	ldw	r3,128(sp)
  803b0c:	da000404 	addi	r8,sp,16
  803b10:	003d4106 	br	803018 <__alt_data_end+0xff803018>
  803b14:	d8801f17 	ldw	r2,124(sp)
  803b18:	01402074 	movhi	r5,129
  803b1c:	01000044 	movi	r4,1
  803b20:	18c00044 	addi	r3,r3,1
  803b24:	10800044 	addi	r2,r2,1
  803b28:	29437f04 	addi	r5,r5,3580
  803b2c:	41000115 	stw	r4,4(r8)
  803b30:	41400015 	stw	r5,0(r8)
  803b34:	d8c02015 	stw	r3,128(sp)
  803b38:	d8801f15 	stw	r2,124(sp)
  803b3c:	010001c4 	movi	r4,7
  803b40:	20805c16 	blt	r4,r2,803cb4 <___vfprintf_internal_r+0x1b08>
  803b44:	42000204 	addi	r8,r8,8
  803b48:	8800041e 	bne	r17,zero,803b5c <___vfprintf_internal_r+0x19b0>
  803b4c:	d8803317 	ldw	r2,204(sp)
  803b50:	1000021e 	bne	r2,zero,803b5c <___vfprintf_internal_r+0x19b0>
  803b54:	9080004c 	andi	r2,r18,1
  803b58:	103c0926 	beq	r2,zero,802b80 <__alt_data_end+0xff802b80>
  803b5c:	d9003717 	ldw	r4,220(sp)
  803b60:	d8801f17 	ldw	r2,124(sp)
  803b64:	d9403417 	ldw	r5,208(sp)
  803b68:	20c7883a 	add	r3,r4,r3
  803b6c:	10800044 	addi	r2,r2,1
  803b70:	41000115 	stw	r4,4(r8)
  803b74:	41400015 	stw	r5,0(r8)
  803b78:	d8c02015 	stw	r3,128(sp)
  803b7c:	d8801f15 	stw	r2,124(sp)
  803b80:	010001c4 	movi	r4,7
  803b84:	20812116 	blt	r4,r2,80400c <___vfprintf_internal_r+0x1e60>
  803b88:	42000204 	addi	r8,r8,8
  803b8c:	0463c83a 	sub	r17,zero,r17
  803b90:	0440730e 	bge	zero,r17,803d60 <___vfprintf_internal_r+0x1bb4>
  803b94:	05800404 	movi	r22,16
  803b98:	b440860e 	bge	r22,r17,803db4 <___vfprintf_internal_r+0x1c08>
  803b9c:	01402074 	movhi	r5,129
  803ba0:	29437f84 	addi	r5,r5,3582
  803ba4:	d9402b15 	stw	r5,172(sp)
  803ba8:	070001c4 	movi	fp,7
  803bac:	dcc02c17 	ldw	r19,176(sp)
  803bb0:	00000306 	br	803bc0 <___vfprintf_internal_r+0x1a14>
  803bb4:	42000204 	addi	r8,r8,8
  803bb8:	8c7ffc04 	addi	r17,r17,-16
  803bbc:	b440800e 	bge	r22,r17,803dc0 <___vfprintf_internal_r+0x1c14>
  803bc0:	18c00404 	addi	r3,r3,16
  803bc4:	10800044 	addi	r2,r2,1
  803bc8:	45000015 	stw	r20,0(r8)
  803bcc:	45800115 	stw	r22,4(r8)
  803bd0:	d8c02015 	stw	r3,128(sp)
  803bd4:	d8801f15 	stw	r2,124(sp)
  803bd8:	e0bff60e 	bge	fp,r2,803bb4 <__alt_data_end+0xff803bb4>
  803bdc:	d9801e04 	addi	r6,sp,120
  803be0:	b80b883a 	mov	r5,r23
  803be4:	9809883a 	mov	r4,r19
  803be8:	080a3600 	call	80a360 <__sprint_r>
  803bec:	103a711e 	bne	r2,zero,8025b4 <__alt_data_end+0xff8025b4>
  803bf0:	d8c02017 	ldw	r3,128(sp)
  803bf4:	d8801f17 	ldw	r2,124(sp)
  803bf8:	da000404 	addi	r8,sp,16
  803bfc:	003fee06 	br	803bb8 <__alt_data_end+0xff803bb8>
  803c00:	00bfffc4 	movi	r2,-1
  803c04:	003a6f06 	br	8025c4 <__alt_data_end+0xff8025c4>
  803c08:	008011c4 	movi	r2,71
  803c0c:	1440b816 	blt	r2,r17,803ef0 <___vfprintf_internal_r+0x1d44>
  803c10:	04002074 	movhi	r16,129
  803c14:	84037104 	addi	r16,r16,3524
  803c18:	00c000c4 	movi	r3,3
  803c1c:	00bfdfc4 	movi	r2,-129
  803c20:	d8c02a15 	stw	r3,168(sp)
  803c24:	90a4703a 	and	r18,r18,r2
  803c28:	df002783 	ldbu	fp,158(sp)
  803c2c:	d8c02e15 	stw	r3,184(sp)
  803c30:	d8002915 	stw	zero,164(sp)
  803c34:	d8003215 	stw	zero,200(sp)
  803c38:	003b2906 	br	8028e0 <__alt_data_end+0xff8028e0>
  803c3c:	d9002d17 	ldw	r4,180(sp)
  803c40:	24c00017 	ldw	r19,0(r4)
  803c44:	21000104 	addi	r4,r4,4
  803c48:	d9002d15 	stw	r4,180(sp)
  803c4c:	982dd7fa 	srai	r22,r19,31
  803c50:	b005883a 	mov	r2,r22
  803c54:	003a9f06 	br	8026d4 <__alt_data_end+0xff8026d4>
  803c58:	d9402d17 	ldw	r5,180(sp)
  803c5c:	d8c02f17 	ldw	r3,188(sp)
  803c60:	28800017 	ldw	r2,0(r5)
  803c64:	29400104 	addi	r5,r5,4
  803c68:	d9402d15 	stw	r5,180(sp)
  803c6c:	10c00015 	stw	r3,0(r2)
  803c70:	00398606 	br	80228c <__alt_data_end+0xff80228c>
  803c74:	d9402d17 	ldw	r5,180(sp)
  803c78:	002d883a 	mov	r22,zero
  803c7c:	2cc00017 	ldw	r19,0(r5)
  803c80:	29400104 	addi	r5,r5,4
  803c84:	d9402d15 	stw	r5,180(sp)
  803c88:	003c2306 	br	802d18 <__alt_data_end+0xff802d18>
  803c8c:	d8c02d17 	ldw	r3,180(sp)
  803c90:	d9002917 	ldw	r4,164(sp)
  803c94:	002d883a 	mov	r22,zero
  803c98:	18800104 	addi	r2,r3,4
  803c9c:	1cc0000b 	ldhu	r19,0(r3)
  803ca0:	203dc10e 	bge	r4,zero,8033a8 <__alt_data_end+0xff8033a8>
  803ca4:	003f7506 	br	803a7c <__alt_data_end+0xff803a7c>
  803ca8:	04002074 	movhi	r16,129
  803cac:	84036f04 	addi	r16,r16,3516
  803cb0:	003acc06 	br	8027e4 <__alt_data_end+0xff8027e4>
  803cb4:	d9002c17 	ldw	r4,176(sp)
  803cb8:	d9801e04 	addi	r6,sp,120
  803cbc:	b80b883a 	mov	r5,r23
  803cc0:	080a3600 	call	80a360 <__sprint_r>
  803cc4:	103a3b1e 	bne	r2,zero,8025b4 <__alt_data_end+0xff8025b4>
  803cc8:	dc402617 	ldw	r17,152(sp)
  803ccc:	d8c02017 	ldw	r3,128(sp)
  803cd0:	da000404 	addi	r8,sp,16
  803cd4:	003f9c06 	br	803b48 <__alt_data_end+0xff803b48>
  803cd8:	ac400043 	ldbu	r17,1(r21)
  803cdc:	94800814 	ori	r18,r18,32
  803ce0:	ad400044 	addi	r21,r21,1
  803ce4:	8c403fcc 	andi	r17,r17,255
  803ce8:	8c40201c 	xori	r17,r17,128
  803cec:	8c7fe004 	addi	r17,r17,-128
  803cf0:	00398f06 	br	802330 <__alt_data_end+0xff802330>
  803cf4:	d8c02d15 	stw	r3,180(sp)
  803cf8:	0039883a 	mov	fp,zero
  803cfc:	003e3506 	br	8035d4 <__alt_data_end+0xff8035d4>
  803d00:	d9002c17 	ldw	r4,176(sp)
  803d04:	d9801e04 	addi	r6,sp,120
  803d08:	b80b883a 	mov	r5,r23
  803d0c:	080a3600 	call	80a360 <__sprint_r>
  803d10:	103a281e 	bne	r2,zero,8025b4 <__alt_data_end+0xff8025b4>
  803d14:	d8c02017 	ldw	r3,128(sp)
  803d18:	da000404 	addi	r8,sp,16
  803d1c:	003cd006 	br	803060 <__alt_data_end+0xff803060>
  803d20:	8009883a 	mov	r4,r16
  803d24:	da003d15 	stw	r8,244(sp)
  803d28:	08021140 	call	802114 <strlen>
  803d2c:	d8802e15 	stw	r2,184(sp)
  803d30:	da003d17 	ldw	r8,244(sp)
  803d34:	103c340e 	bge	r2,zero,802e08 <__alt_data_end+0xff802e08>
  803d38:	0005883a 	mov	r2,zero
  803d3c:	003c3206 	br	802e08 <__alt_data_end+0xff802e08>
  803d40:	d9002c17 	ldw	r4,176(sp)
  803d44:	d9801e04 	addi	r6,sp,120
  803d48:	b80b883a 	mov	r5,r23
  803d4c:	080a3600 	call	80a360 <__sprint_r>
  803d50:	103a181e 	bne	r2,zero,8025b4 <__alt_data_end+0xff8025b4>
  803d54:	d8c02017 	ldw	r3,128(sp)
  803d58:	d8801f17 	ldw	r2,124(sp)
  803d5c:	da000404 	addi	r8,sp,16
  803d60:	d9403317 	ldw	r5,204(sp)
  803d64:	10800044 	addi	r2,r2,1
  803d68:	44000015 	stw	r16,0(r8)
  803d6c:	28c7883a 	add	r3,r5,r3
  803d70:	003b7d06 	br	802b68 <__alt_data_end+0xff802b68>
  803d74:	01002074 	movhi	r4,129
  803d78:	21038384 	addi	r4,r4,3598
  803d7c:	d9003515 	stw	r4,212(sp)
  803d80:	003b1406 	br	8029d4 <__alt_data_end+0xff8029d4>
  803d84:	013fffc4 	movi	r4,-1
  803d88:	003a3506 	br	802660 <__alt_data_end+0xff802660>
  803d8c:	0023883a 	mov	r17,zero
  803d90:	003d9d06 	br	803408 <__alt_data_end+0xff803408>
  803d94:	d9002c17 	ldw	r4,176(sp)
  803d98:	d9801e04 	addi	r6,sp,120
  803d9c:	b80b883a 	mov	r5,r23
  803da0:	080a3600 	call	80a360 <__sprint_r>
  803da4:	103a031e 	bne	r2,zero,8025b4 <__alt_data_end+0xff8025b4>
  803da8:	d8c02017 	ldw	r3,128(sp)
  803dac:	da000404 	addi	r8,sp,16
  803db0:	003d9406 	br	803404 <__alt_data_end+0xff803404>
  803db4:	01002074 	movhi	r4,129
  803db8:	21037f84 	addi	r4,r4,3582
  803dbc:	d9002b15 	stw	r4,172(sp)
  803dc0:	d9002b17 	ldw	r4,172(sp)
  803dc4:	1c47883a 	add	r3,r3,r17
  803dc8:	10800044 	addi	r2,r2,1
  803dcc:	41000015 	stw	r4,0(r8)
  803dd0:	44400115 	stw	r17,4(r8)
  803dd4:	d8c02015 	stw	r3,128(sp)
  803dd8:	d8801f15 	stw	r2,124(sp)
  803ddc:	010001c4 	movi	r4,7
  803de0:	20bfd716 	blt	r4,r2,803d40 <__alt_data_end+0xff803d40>
  803de4:	42000204 	addi	r8,r8,8
  803de8:	003fdd06 	br	803d60 <__alt_data_end+0xff803d60>
  803dec:	d9002c17 	ldw	r4,176(sp)
  803df0:	d9801e04 	addi	r6,sp,120
  803df4:	b80b883a 	mov	r5,r23
  803df8:	080a3600 	call	80a360 <__sprint_r>
  803dfc:	1039ed1e 	bne	r2,zero,8025b4 <__alt_data_end+0xff8025b4>
  803e00:	d8802617 	ldw	r2,152(sp)
  803e04:	d8c02017 	ldw	r3,128(sp)
  803e08:	da000404 	addi	r8,sp,16
  803e0c:	003e1006 	br	803650 <__alt_data_end+0xff803650>
  803e10:	00800044 	movi	r2,1
  803e14:	10803fcc 	andi	r2,r2,255
  803e18:	00c00044 	movi	r3,1
  803e1c:	10fa3526 	beq	r2,r3,8026f4 <__alt_data_end+0xff8026f4>
  803e20:	00c00084 	movi	r3,2
  803e24:	10fbcb26 	beq	r2,r3,802d54 <__alt_data_end+0xff802d54>
  803e28:	003a8f06 	br	802868 <__alt_data_end+0xff802868>
  803e2c:	01002074 	movhi	r4,129
  803e30:	21038384 	addi	r4,r4,3598
  803e34:	d9003515 	stw	r4,212(sp)
  803e38:	003b7606 	br	802c14 <__alt_data_end+0xff802c14>
  803e3c:	d8802917 	ldw	r2,164(sp)
  803e40:	00c00184 	movi	r3,6
  803e44:	1880012e 	bgeu	r3,r2,803e4c <___vfprintf_internal_r+0x1ca0>
  803e48:	1805883a 	mov	r2,r3
  803e4c:	d8802e15 	stw	r2,184(sp)
  803e50:	1000ef16 	blt	r2,zero,804210 <___vfprintf_internal_r+0x2064>
  803e54:	04002074 	movhi	r16,129
  803e58:	d8802a15 	stw	r2,168(sp)
  803e5c:	dcc02d15 	stw	r19,180(sp)
  803e60:	d8002915 	stw	zero,164(sp)
  803e64:	d8003215 	stw	zero,200(sp)
  803e68:	84037d04 	addi	r16,r16,3572
  803e6c:	0039883a 	mov	fp,zero
  803e70:	003aa206 	br	8028fc <__alt_data_end+0xff8028fc>
  803e74:	0021883a 	mov	r16,zero
  803e78:	003e0706 	br	803698 <__alt_data_end+0xff803698>
  803e7c:	d9002c17 	ldw	r4,176(sp)
  803e80:	d9801e04 	addi	r6,sp,120
  803e84:	b80b883a 	mov	r5,r23
  803e88:	080a3600 	call	80a360 <__sprint_r>
  803e8c:	1039c91e 	bne	r2,zero,8025b4 <__alt_data_end+0xff8025b4>
  803e90:	d8802617 	ldw	r2,152(sp)
  803e94:	d9403317 	ldw	r5,204(sp)
  803e98:	d8c02017 	ldw	r3,128(sp)
  803e9c:	da000404 	addi	r8,sp,16
  803ea0:	2885c83a 	sub	r2,r5,r2
  803ea4:	003dfb06 	br	803694 <__alt_data_end+0xff803694>
  803ea8:	9080004c 	andi	r2,r18,1
  803eac:	103e8f1e 	bne	r2,zero,8038ec <__alt_data_end+0xff8038ec>
  803eb0:	d8802117 	ldw	r2,132(sp)
  803eb4:	003e9e06 	br	803930 <__alt_data_end+0xff803930>
  803eb8:	1025883a 	mov	r18,r2
  803ebc:	0039883a 	mov	fp,zero
  803ec0:	00800084 	movi	r2,2
  803ec4:	003fd306 	br	803e14 <__alt_data_end+0xff803e14>
  803ec8:	07000b44 	movi	fp,45
  803ecc:	df002785 	stb	fp,158(sp)
  803ed0:	003a4006 	br	8027d4 <__alt_data_end+0xff8027d4>
  803ed4:	00c00b44 	movi	r3,45
  803ed8:	d8c02785 	stb	r3,158(sp)
  803edc:	d8802a15 	stw	r2,168(sp)
  803ee0:	dc802b17 	ldw	r18,172(sp)
  803ee4:	d8002915 	stw	zero,164(sp)
  803ee8:	07000b44 	movi	fp,45
  803eec:	003a8006 	br	8028f0 <__alt_data_end+0xff8028f0>
  803ef0:	04002074 	movhi	r16,129
  803ef4:	84037204 	addi	r16,r16,3528
  803ef8:	003f4706 	br	803c18 <__alt_data_end+0xff803c18>
  803efc:	d8c02d17 	ldw	r3,180(sp)
  803f00:	d9002f17 	ldw	r4,188(sp)
  803f04:	18800017 	ldw	r2,0(r3)
  803f08:	18c00104 	addi	r3,r3,4
  803f0c:	d8c02d15 	stw	r3,180(sp)
  803f10:	11000015 	stw	r4,0(r2)
  803f14:	0038dd06 	br	80228c <__alt_data_end+0xff80228c>
  803f18:	dd802617 	ldw	r22,152(sp)
  803f1c:	00bfff44 	movi	r2,-3
  803f20:	b0801c16 	blt	r22,r2,803f94 <___vfprintf_internal_r+0x1de8>
  803f24:	d9402917 	ldw	r5,164(sp)
  803f28:	2d801a16 	blt	r5,r22,803f94 <___vfprintf_internal_r+0x1de8>
  803f2c:	dd803215 	stw	r22,200(sp)
  803f30:	003e8906 	br	803958 <__alt_data_end+0xff803958>
  803f34:	01002074 	movhi	r4,129
  803f38:	21037f84 	addi	r4,r4,3582
  803f3c:	d9002b15 	stw	r4,172(sp)
  803f40:	003c9106 	br	803188 <__alt_data_end+0xff803188>
  803f44:	e005883a 	mov	r2,fp
  803f48:	003e7906 	br	803930 <__alt_data_end+0xff803930>
  803f4c:	d9402917 	ldw	r5,164(sp)
  803f50:	df002783 	ldbu	fp,158(sp)
  803f54:	dcc02d15 	stw	r19,180(sp)
  803f58:	d9402a15 	stw	r5,168(sp)
  803f5c:	d9402e15 	stw	r5,184(sp)
  803f60:	d8002915 	stw	zero,164(sp)
  803f64:	d8003215 	stw	zero,200(sp)
  803f68:	003a5d06 	br	8028e0 <__alt_data_end+0xff8028e0>
  803f6c:	9080004c 	andi	r2,r18,1
  803f70:	0039883a 	mov	fp,zero
  803f74:	10000426 	beq	r2,zero,803f88 <___vfprintf_internal_r+0x1ddc>
  803f78:	00800c04 	movi	r2,48
  803f7c:	dc001dc4 	addi	r16,sp,119
  803f80:	d8801dc5 	stb	r2,119(sp)
  803f84:	003b8006 	br	802d88 <__alt_data_end+0xff802d88>
  803f88:	d8002e15 	stw	zero,184(sp)
  803f8c:	dc001e04 	addi	r16,sp,120
  803f90:	003a4d06 	br	8028c8 <__alt_data_end+0xff8028c8>
  803f94:	8c7fff84 	addi	r17,r17,-2
  803f98:	b5bfffc4 	addi	r22,r22,-1
  803f9c:	dd802615 	stw	r22,152(sp)
  803fa0:	dc4022c5 	stb	r17,139(sp)
  803fa4:	b000bf16 	blt	r22,zero,8042a4 <___vfprintf_internal_r+0x20f8>
  803fa8:	00800ac4 	movi	r2,43
  803fac:	d8802305 	stb	r2,140(sp)
  803fb0:	00800244 	movi	r2,9
  803fb4:	15807016 	blt	r2,r22,804178 <___vfprintf_internal_r+0x1fcc>
  803fb8:	00800c04 	movi	r2,48
  803fbc:	b5800c04 	addi	r22,r22,48
  803fc0:	d8802345 	stb	r2,141(sp)
  803fc4:	dd802385 	stb	r22,142(sp)
  803fc8:	d88023c4 	addi	r2,sp,143
  803fcc:	df0022c4 	addi	fp,sp,139
  803fd0:	d8c03317 	ldw	r3,204(sp)
  803fd4:	1739c83a 	sub	fp,r2,fp
  803fd8:	d9003317 	ldw	r4,204(sp)
  803fdc:	e0c7883a 	add	r3,fp,r3
  803fe0:	df003a15 	stw	fp,232(sp)
  803fe4:	d8c02e15 	stw	r3,184(sp)
  803fe8:	00800044 	movi	r2,1
  803fec:	1100b30e 	bge	r2,r4,8042bc <___vfprintf_internal_r+0x2110>
  803ff0:	d8c02e17 	ldw	r3,184(sp)
  803ff4:	18c00044 	addi	r3,r3,1
  803ff8:	d8c02e15 	stw	r3,184(sp)
  803ffc:	1805883a 	mov	r2,r3
  804000:	1800ac16 	blt	r3,zero,8042b4 <___vfprintf_internal_r+0x2108>
  804004:	d8003215 	stw	zero,200(sp)
  804008:	003e5d06 	br	803980 <__alt_data_end+0xff803980>
  80400c:	d9002c17 	ldw	r4,176(sp)
  804010:	d9801e04 	addi	r6,sp,120
  804014:	b80b883a 	mov	r5,r23
  804018:	080a3600 	call	80a360 <__sprint_r>
  80401c:	1039651e 	bne	r2,zero,8025b4 <__alt_data_end+0xff8025b4>
  804020:	dc402617 	ldw	r17,152(sp)
  804024:	d8c02017 	ldw	r3,128(sp)
  804028:	d8801f17 	ldw	r2,124(sp)
  80402c:	da000404 	addi	r8,sp,16
  804030:	003ed606 	br	803b8c <__alt_data_end+0xff803b8c>
  804034:	582b883a 	mov	r21,r11
  804038:	d8002915 	stw	zero,164(sp)
  80403c:	0038bd06 	br	802334 <__alt_data_end+0xff802334>
  804040:	d8802917 	ldw	r2,164(sp)
  804044:	103e071e 	bne	r2,zero,803864 <__alt_data_end+0xff803864>
  804048:	dc002915 	stw	r16,164(sp)
  80404c:	003e0506 	br	803864 <__alt_data_end+0xff803864>
  804050:	d9002917 	ldw	r4,164(sp)
  804054:	20c00044 	addi	r3,r4,1
  804058:	003e0f06 	br	803898 <__alt_data_end+0xff803898>
  80405c:	01400184 	movi	r5,6
  804060:	d9402915 	stw	r5,164(sp)
  804064:	003dff06 	br	803864 <__alt_data_end+0xff803864>
  804068:	d8802104 	addi	r2,sp,132
  80406c:	d8800315 	stw	r2,12(sp)
  804070:	d8802504 	addi	r2,sp,148
  804074:	d8800215 	stw	r2,8(sp)
  804078:	d8802604 	addi	r2,sp,152
  80407c:	d8800115 	stw	r2,4(sp)
  804080:	d8802917 	ldw	r2,164(sp)
  804084:	d9403617 	ldw	r5,216(sp)
  804088:	d9002c17 	ldw	r4,176(sp)
  80408c:	d8800015 	stw	r2,0(sp)
  804090:	01c000c4 	movi	r7,3
  804094:	980d883a 	mov	r6,r19
  804098:	da003d15 	stw	r8,244(sp)
  80409c:	08047d00 	call	8047d0 <_dtoa_r>
  8040a0:	d8c02917 	ldw	r3,164(sp)
  8040a4:	da003d17 	ldw	r8,244(sp)
  8040a8:	1021883a 	mov	r16,r2
  8040ac:	10f9883a 	add	fp,r2,r3
  8040b0:	81000007 	ldb	r4,0(r16)
  8040b4:	00800c04 	movi	r2,48
  8040b8:	20805e26 	beq	r4,r2,804234 <___vfprintf_internal_r+0x2088>
  8040bc:	d8c02617 	ldw	r3,152(sp)
  8040c0:	e0f9883a 	add	fp,fp,r3
  8040c4:	003e0a06 	br	8038f0 <__alt_data_end+0xff8038f0>
  8040c8:	00c00b44 	movi	r3,45
  8040cc:	24e0003c 	xorhi	r19,r4,32768
  8040d0:	d8c02a05 	stb	r3,168(sp)
  8040d4:	003de906 	br	80387c <__alt_data_end+0xff80387c>
  8040d8:	d8c03217 	ldw	r3,200(sp)
  8040dc:	00c07a0e 	bge	zero,r3,8042c8 <___vfprintf_internal_r+0x211c>
  8040e0:	00800044 	movi	r2,1
  8040e4:	d9003317 	ldw	r4,204(sp)
  8040e8:	1105883a 	add	r2,r2,r4
  8040ec:	d8802e15 	stw	r2,184(sp)
  8040f0:	10004e16 	blt	r2,zero,80422c <___vfprintf_internal_r+0x2080>
  8040f4:	044019c4 	movi	r17,103
  8040f8:	003e2106 	br	803980 <__alt_data_end+0xff803980>
  8040fc:	d9002917 	ldw	r4,164(sp)
  804100:	d8802104 	addi	r2,sp,132
  804104:	d8800315 	stw	r2,12(sp)
  804108:	d9000015 	stw	r4,0(sp)
  80410c:	d8802504 	addi	r2,sp,148
  804110:	d9403617 	ldw	r5,216(sp)
  804114:	d9002c17 	ldw	r4,176(sp)
  804118:	d8800215 	stw	r2,8(sp)
  80411c:	d8802604 	addi	r2,sp,152
  804120:	d8800115 	stw	r2,4(sp)
  804124:	01c000c4 	movi	r7,3
  804128:	980d883a 	mov	r6,r19
  80412c:	da003d15 	stw	r8,244(sp)
  804130:	08047d00 	call	8047d0 <_dtoa_r>
  804134:	d8c02917 	ldw	r3,164(sp)
  804138:	da003d17 	ldw	r8,244(sp)
  80413c:	1021883a 	mov	r16,r2
  804140:	00801184 	movi	r2,70
  804144:	80f9883a 	add	fp,r16,r3
  804148:	88bfd926 	beq	r17,r2,8040b0 <__alt_data_end+0xff8040b0>
  80414c:	003de806 	br	8038f0 <__alt_data_end+0xff8038f0>
  804150:	d9002917 	ldw	r4,164(sp)
  804154:	00c04d0e 	bge	zero,r3,80428c <___vfprintf_internal_r+0x20e0>
  804158:	2000441e 	bne	r4,zero,80426c <___vfprintf_internal_r+0x20c0>
  80415c:	9480004c 	andi	r18,r18,1
  804160:	9000421e 	bne	r18,zero,80426c <___vfprintf_internal_r+0x20c0>
  804164:	1805883a 	mov	r2,r3
  804168:	18007016 	blt	r3,zero,80432c <___vfprintf_internal_r+0x2180>
  80416c:	d8c03217 	ldw	r3,200(sp)
  804170:	d8c02e15 	stw	r3,184(sp)
  804174:	003e0206 	br	803980 <__alt_data_end+0xff803980>
  804178:	df0022c4 	addi	fp,sp,139
  80417c:	dc002915 	stw	r16,164(sp)
  804180:	4027883a 	mov	r19,r8
  804184:	e021883a 	mov	r16,fp
  804188:	b009883a 	mov	r4,r22
  80418c:	01400284 	movi	r5,10
  804190:	080cd140 	call	80cd14 <__modsi3>
  804194:	10800c04 	addi	r2,r2,48
  804198:	843fffc4 	addi	r16,r16,-1
  80419c:	b009883a 	mov	r4,r22
  8041a0:	01400284 	movi	r5,10
  8041a4:	80800005 	stb	r2,0(r16)
  8041a8:	080cc900 	call	80cc90 <__divsi3>
  8041ac:	102d883a 	mov	r22,r2
  8041b0:	00800244 	movi	r2,9
  8041b4:	15bff416 	blt	r2,r22,804188 <__alt_data_end+0xff804188>
  8041b8:	9811883a 	mov	r8,r19
  8041bc:	b0800c04 	addi	r2,r22,48
  8041c0:	8027883a 	mov	r19,r16
  8041c4:	997fffc4 	addi	r5,r19,-1
  8041c8:	98bfffc5 	stb	r2,-1(r19)
  8041cc:	dc002917 	ldw	r16,164(sp)
  8041d0:	2f006a2e 	bgeu	r5,fp,80437c <___vfprintf_internal_r+0x21d0>
  8041d4:	d9c02384 	addi	r7,sp,142
  8041d8:	3ccfc83a 	sub	r7,r7,r19
  8041dc:	d9002344 	addi	r4,sp,141
  8041e0:	e1cf883a 	add	r7,fp,r7
  8041e4:	00000106 	br	8041ec <___vfprintf_internal_r+0x2040>
  8041e8:	28800003 	ldbu	r2,0(r5)
  8041ec:	20800005 	stb	r2,0(r4)
  8041f0:	21000044 	addi	r4,r4,1
  8041f4:	29400044 	addi	r5,r5,1
  8041f8:	393ffb1e 	bne	r7,r4,8041e8 <__alt_data_end+0xff8041e8>
  8041fc:	d8802304 	addi	r2,sp,140
  804200:	14c5c83a 	sub	r2,r2,r19
  804204:	d8c02344 	addi	r3,sp,141
  804208:	1885883a 	add	r2,r3,r2
  80420c:	003f7006 	br	803fd0 <__alt_data_end+0xff803fd0>
  804210:	0005883a 	mov	r2,zero
  804214:	003f0f06 	br	803e54 <__alt_data_end+0xff803e54>
  804218:	d8c03217 	ldw	r3,200(sp)
  80421c:	18c00044 	addi	r3,r3,1
  804220:	d8c02e15 	stw	r3,184(sp)
  804224:	1805883a 	mov	r2,r3
  804228:	183fb20e 	bge	r3,zero,8040f4 <__alt_data_end+0xff8040f4>
  80422c:	0005883a 	mov	r2,zero
  804230:	003fb006 	br	8040f4 <__alt_data_end+0xff8040f4>
  804234:	d9003617 	ldw	r4,216(sp)
  804238:	000d883a 	mov	r6,zero
  80423c:	000f883a 	mov	r7,zero
  804240:	980b883a 	mov	r5,r19
  804244:	d8c03c15 	stw	r3,240(sp)
  804248:	da003d15 	stw	r8,244(sp)
  80424c:	080d72c0 	call	80d72c <__eqdf2>
  804250:	d8c03c17 	ldw	r3,240(sp)
  804254:	da003d17 	ldw	r8,244(sp)
  804258:	103f9826 	beq	r2,zero,8040bc <__alt_data_end+0xff8040bc>
  80425c:	00800044 	movi	r2,1
  804260:	10c7c83a 	sub	r3,r2,r3
  804264:	d8c02615 	stw	r3,152(sp)
  804268:	003f9506 	br	8040c0 <__alt_data_end+0xff8040c0>
  80426c:	d9002917 	ldw	r4,164(sp)
  804270:	d8c03217 	ldw	r3,200(sp)
  804274:	20800044 	addi	r2,r4,1
  804278:	1885883a 	add	r2,r3,r2
  80427c:	d8802e15 	stw	r2,184(sp)
  804280:	103dbf0e 	bge	r2,zero,803980 <__alt_data_end+0xff803980>
  804284:	0005883a 	mov	r2,zero
  804288:	003dbd06 	br	803980 <__alt_data_end+0xff803980>
  80428c:	2000211e 	bne	r4,zero,804314 <___vfprintf_internal_r+0x2168>
  804290:	9480004c 	andi	r18,r18,1
  804294:	90001f1e 	bne	r18,zero,804314 <___vfprintf_internal_r+0x2168>
  804298:	00800044 	movi	r2,1
  80429c:	d8802e15 	stw	r2,184(sp)
  8042a0:	003db706 	br	803980 <__alt_data_end+0xff803980>
  8042a4:	00800b44 	movi	r2,45
  8042a8:	05adc83a 	sub	r22,zero,r22
  8042ac:	d8802305 	stb	r2,140(sp)
  8042b0:	003f3f06 	br	803fb0 <__alt_data_end+0xff803fb0>
  8042b4:	0005883a 	mov	r2,zero
  8042b8:	003f5206 	br	804004 <__alt_data_end+0xff804004>
  8042bc:	90a4703a 	and	r18,r18,r2
  8042c0:	903f4e26 	beq	r18,zero,803ffc <__alt_data_end+0xff803ffc>
  8042c4:	003f4a06 	br	803ff0 <__alt_data_end+0xff803ff0>
  8042c8:	00800084 	movi	r2,2
  8042cc:	10c5c83a 	sub	r2,r2,r3
  8042d0:	003f8406 	br	8040e4 <__alt_data_end+0xff8040e4>
  8042d4:	d8802d17 	ldw	r2,180(sp)
  8042d8:	d9002d17 	ldw	r4,180(sp)
  8042dc:	ac400043 	ldbu	r17,1(r21)
  8042e0:	10800017 	ldw	r2,0(r2)
  8042e4:	582b883a 	mov	r21,r11
  8042e8:	d8802915 	stw	r2,164(sp)
  8042ec:	20800104 	addi	r2,r4,4
  8042f0:	d9002917 	ldw	r4,164(sp)
  8042f4:	d8802d15 	stw	r2,180(sp)
  8042f8:	203e7a0e 	bge	r4,zero,803ce4 <__alt_data_end+0xff803ce4>
  8042fc:	8c403fcc 	andi	r17,r17,255
  804300:	00bfffc4 	movi	r2,-1
  804304:	8c40201c 	xori	r17,r17,128
  804308:	d8802915 	stw	r2,164(sp)
  80430c:	8c7fe004 	addi	r17,r17,-128
  804310:	00380706 	br	802330 <__alt_data_end+0xff802330>
  804314:	d8c02917 	ldw	r3,164(sp)
  804318:	18c00084 	addi	r3,r3,2
  80431c:	d8c02e15 	stw	r3,184(sp)
  804320:	1805883a 	mov	r2,r3
  804324:	183d960e 	bge	r3,zero,803980 <__alt_data_end+0xff803980>
  804328:	003fd606 	br	804284 <__alt_data_end+0xff804284>
  80432c:	0005883a 	mov	r2,zero
  804330:	003f8e06 	br	80416c <__alt_data_end+0xff80416c>
  804334:	9080004c 	andi	r2,r18,1
  804338:	103f811e 	bne	r2,zero,804140 <__alt_data_end+0xff804140>
  80433c:	d8802117 	ldw	r2,132(sp)
  804340:	1405c83a 	sub	r2,r2,r16
  804344:	d8803315 	stw	r2,204(sp)
  804348:	b47ef326 	beq	r22,r17,803f18 <__alt_data_end+0xff803f18>
  80434c:	dd802617 	ldw	r22,152(sp)
  804350:	003f1106 	br	803f98 <__alt_data_end+0xff803f98>
  804354:	d9c02785 	stb	r7,158(sp)
  804358:	00390406 	br	80276c <__alt_data_end+0xff80276c>
  80435c:	d9c02785 	stb	r7,158(sp)
  804360:	0038d306 	br	8026b0 <__alt_data_end+0xff8026b0>
  804364:	d9c02785 	stb	r7,158(sp)
  804368:	003a6106 	br	802cf0 <__alt_data_end+0xff802cf0>
  80436c:	d9c02785 	stb	r7,158(sp)
  804370:	003af806 	br	802f54 <__alt_data_end+0xff802f54>
  804374:	0005883a 	mov	r2,zero
  804378:	003d7e06 	br	803974 <__alt_data_end+0xff803974>
  80437c:	d8802344 	addi	r2,sp,141
  804380:	003f1306 	br	803fd0 <__alt_data_end+0xff803fd0>
  804384:	d9c02785 	stb	r7,158(sp)
  804388:	00392306 	br	802818 <__alt_data_end+0xff802818>
  80438c:	d9c02785 	stb	r7,158(sp)
  804390:	003aa906 	br	802e38 <__alt_data_end+0xff802e38>
  804394:	d9c02785 	stb	r7,158(sp)
  804398:	003a3d06 	br	802c90 <__alt_data_end+0xff802c90>
  80439c:	d9c02785 	stb	r7,158(sp)
  8043a0:	003aca06 	br	802ecc <__alt_data_end+0xff802ecc>

008043a4 <__vfprintf_internal>:
  8043a4:	00802074 	movhi	r2,129
  8043a8:	109a8904 	addi	r2,r2,27172
  8043ac:	300f883a 	mov	r7,r6
  8043b0:	280d883a 	mov	r6,r5
  8043b4:	200b883a 	mov	r5,r4
  8043b8:	11000017 	ldw	r4,0(r2)
  8043bc:	08021ac1 	jmpi	8021ac <___vfprintf_internal_r>

008043c0 <__sbprintf>:
  8043c0:	2880030b 	ldhu	r2,12(r5)
  8043c4:	2ac01917 	ldw	r11,100(r5)
  8043c8:	2a80038b 	ldhu	r10,14(r5)
  8043cc:	2a400717 	ldw	r9,28(r5)
  8043d0:	2a000917 	ldw	r8,36(r5)
  8043d4:	defee204 	addi	sp,sp,-1144
  8043d8:	00c10004 	movi	r3,1024
  8043dc:	dc011a15 	stw	r16,1128(sp)
  8043e0:	10bfff4c 	andi	r2,r2,65533
  8043e4:	2821883a 	mov	r16,r5
  8043e8:	d8cb883a 	add	r5,sp,r3
  8043ec:	dc811c15 	stw	r18,1136(sp)
  8043f0:	dc411b15 	stw	r17,1132(sp)
  8043f4:	dfc11d15 	stw	ra,1140(sp)
  8043f8:	2025883a 	mov	r18,r4
  8043fc:	d881030d 	sth	r2,1036(sp)
  804400:	dac11915 	stw	r11,1124(sp)
  804404:	da81038d 	sth	r10,1038(sp)
  804408:	da410715 	stw	r9,1052(sp)
  80440c:	da010915 	stw	r8,1060(sp)
  804410:	dec10015 	stw	sp,1024(sp)
  804414:	dec10415 	stw	sp,1040(sp)
  804418:	d8c10215 	stw	r3,1032(sp)
  80441c:	d8c10515 	stw	r3,1044(sp)
  804420:	d8010615 	stw	zero,1048(sp)
  804424:	08021ac0 	call	8021ac <___vfprintf_internal_r>
  804428:	1023883a 	mov	r17,r2
  80442c:	10000416 	blt	r2,zero,804440 <__sbprintf+0x80>
  804430:	d9410004 	addi	r5,sp,1024
  804434:	9009883a 	mov	r4,r18
  804438:	0806b9c0 	call	806b9c <_fflush_r>
  80443c:	10000d1e 	bne	r2,zero,804474 <__sbprintf+0xb4>
  804440:	d881030b 	ldhu	r2,1036(sp)
  804444:	1080100c 	andi	r2,r2,64
  804448:	10000326 	beq	r2,zero,804458 <__sbprintf+0x98>
  80444c:	8080030b 	ldhu	r2,12(r16)
  804450:	10801014 	ori	r2,r2,64
  804454:	8080030d 	sth	r2,12(r16)
  804458:	8805883a 	mov	r2,r17
  80445c:	dfc11d17 	ldw	ra,1140(sp)
  804460:	dc811c17 	ldw	r18,1136(sp)
  804464:	dc411b17 	ldw	r17,1132(sp)
  804468:	dc011a17 	ldw	r16,1128(sp)
  80446c:	dec11e04 	addi	sp,sp,1144
  804470:	f800283a 	ret
  804474:	047fffc4 	movi	r17,-1
  804478:	003ff106 	br	804440 <__alt_data_end+0xff804440>

0080447c <__swsetup_r>:
  80447c:	00802074 	movhi	r2,129
  804480:	defffd04 	addi	sp,sp,-12
  804484:	109a8904 	addi	r2,r2,27172
  804488:	dc400115 	stw	r17,4(sp)
  80448c:	2023883a 	mov	r17,r4
  804490:	11000017 	ldw	r4,0(r2)
  804494:	dc000015 	stw	r16,0(sp)
  804498:	dfc00215 	stw	ra,8(sp)
  80449c:	2821883a 	mov	r16,r5
  8044a0:	20000226 	beq	r4,zero,8044ac <__swsetup_r+0x30>
  8044a4:	20800e17 	ldw	r2,56(r4)
  8044a8:	10003126 	beq	r2,zero,804570 <__swsetup_r+0xf4>
  8044ac:	8080030b 	ldhu	r2,12(r16)
  8044b0:	10c0020c 	andi	r3,r2,8
  8044b4:	1009883a 	mov	r4,r2
  8044b8:	18000f26 	beq	r3,zero,8044f8 <__swsetup_r+0x7c>
  8044bc:	80c00417 	ldw	r3,16(r16)
  8044c0:	18001526 	beq	r3,zero,804518 <__swsetup_r+0x9c>
  8044c4:	1100004c 	andi	r4,r2,1
  8044c8:	20001c1e 	bne	r4,zero,80453c <__swsetup_r+0xc0>
  8044cc:	1080008c 	andi	r2,r2,2
  8044d0:	1000291e 	bne	r2,zero,804578 <__swsetup_r+0xfc>
  8044d4:	80800517 	ldw	r2,20(r16)
  8044d8:	80800215 	stw	r2,8(r16)
  8044dc:	18001c26 	beq	r3,zero,804550 <__swsetup_r+0xd4>
  8044e0:	0005883a 	mov	r2,zero
  8044e4:	dfc00217 	ldw	ra,8(sp)
  8044e8:	dc400117 	ldw	r17,4(sp)
  8044ec:	dc000017 	ldw	r16,0(sp)
  8044f0:	dec00304 	addi	sp,sp,12
  8044f4:	f800283a 	ret
  8044f8:	2080040c 	andi	r2,r4,16
  8044fc:	10002e26 	beq	r2,zero,8045b8 <__swsetup_r+0x13c>
  804500:	2080010c 	andi	r2,r4,4
  804504:	10001e1e 	bne	r2,zero,804580 <__swsetup_r+0x104>
  804508:	80c00417 	ldw	r3,16(r16)
  80450c:	20800214 	ori	r2,r4,8
  804510:	8080030d 	sth	r2,12(r16)
  804514:	183feb1e 	bne	r3,zero,8044c4 <__alt_data_end+0xff8044c4>
  804518:	1100a00c 	andi	r4,r2,640
  80451c:	01408004 	movi	r5,512
  804520:	217fe826 	beq	r4,r5,8044c4 <__alt_data_end+0xff8044c4>
  804524:	800b883a 	mov	r5,r16
  804528:	8809883a 	mov	r4,r17
  80452c:	0807b1c0 	call	807b1c <__smakebuf_r>
  804530:	8080030b 	ldhu	r2,12(r16)
  804534:	80c00417 	ldw	r3,16(r16)
  804538:	003fe206 	br	8044c4 <__alt_data_end+0xff8044c4>
  80453c:	80800517 	ldw	r2,20(r16)
  804540:	80000215 	stw	zero,8(r16)
  804544:	0085c83a 	sub	r2,zero,r2
  804548:	80800615 	stw	r2,24(r16)
  80454c:	183fe41e 	bne	r3,zero,8044e0 <__alt_data_end+0xff8044e0>
  804550:	80c0030b 	ldhu	r3,12(r16)
  804554:	0005883a 	mov	r2,zero
  804558:	1900200c 	andi	r4,r3,128
  80455c:	203fe126 	beq	r4,zero,8044e4 <__alt_data_end+0xff8044e4>
  804560:	18c01014 	ori	r3,r3,64
  804564:	80c0030d 	sth	r3,12(r16)
  804568:	00bfffc4 	movi	r2,-1
  80456c:	003fdd06 	br	8044e4 <__alt_data_end+0xff8044e4>
  804570:	0806f780 	call	806f78 <__sinit>
  804574:	003fcd06 	br	8044ac <__alt_data_end+0xff8044ac>
  804578:	0005883a 	mov	r2,zero
  80457c:	003fd606 	br	8044d8 <__alt_data_end+0xff8044d8>
  804580:	81400c17 	ldw	r5,48(r16)
  804584:	28000626 	beq	r5,zero,8045a0 <__swsetup_r+0x124>
  804588:	80801004 	addi	r2,r16,64
  80458c:	28800326 	beq	r5,r2,80459c <__swsetup_r+0x120>
  804590:	8809883a 	mov	r4,r17
  804594:	08070ec0 	call	8070ec <_free_r>
  804598:	8100030b 	ldhu	r4,12(r16)
  80459c:	80000c15 	stw	zero,48(r16)
  8045a0:	80c00417 	ldw	r3,16(r16)
  8045a4:	00bff6c4 	movi	r2,-37
  8045a8:	1108703a 	and	r4,r2,r4
  8045ac:	80000115 	stw	zero,4(r16)
  8045b0:	80c00015 	stw	r3,0(r16)
  8045b4:	003fd506 	br	80450c <__alt_data_end+0xff80450c>
  8045b8:	00800244 	movi	r2,9
  8045bc:	88800015 	stw	r2,0(r17)
  8045c0:	20801014 	ori	r2,r4,64
  8045c4:	8080030d 	sth	r2,12(r16)
  8045c8:	00bfffc4 	movi	r2,-1
  8045cc:	003fc506 	br	8044e4 <__alt_data_end+0xff8044e4>

008045d0 <quorem>:
  8045d0:	defff704 	addi	sp,sp,-36
  8045d4:	dc800215 	stw	r18,8(sp)
  8045d8:	20800417 	ldw	r2,16(r4)
  8045dc:	2c800417 	ldw	r18,16(r5)
  8045e0:	dfc00815 	stw	ra,32(sp)
  8045e4:	ddc00715 	stw	r23,28(sp)
  8045e8:	dd800615 	stw	r22,24(sp)
  8045ec:	dd400515 	stw	r21,20(sp)
  8045f0:	dd000415 	stw	r20,16(sp)
  8045f4:	dcc00315 	stw	r19,12(sp)
  8045f8:	dc400115 	stw	r17,4(sp)
  8045fc:	dc000015 	stw	r16,0(sp)
  804600:	14807116 	blt	r2,r18,8047c8 <quorem+0x1f8>
  804604:	94bfffc4 	addi	r18,r18,-1
  804608:	94ad883a 	add	r22,r18,r18
  80460c:	b5ad883a 	add	r22,r22,r22
  804610:	2c400504 	addi	r17,r5,20
  804614:	8da9883a 	add	r20,r17,r22
  804618:	25400504 	addi	r21,r4,20
  80461c:	282f883a 	mov	r23,r5
  804620:	adad883a 	add	r22,r21,r22
  804624:	a1400017 	ldw	r5,0(r20)
  804628:	2021883a 	mov	r16,r4
  80462c:	b1000017 	ldw	r4,0(r22)
  804630:	29400044 	addi	r5,r5,1
  804634:	080cd880 	call	80cd88 <__udivsi3>
  804638:	1027883a 	mov	r19,r2
  80463c:	10002c26 	beq	r2,zero,8046f0 <quorem+0x120>
  804640:	a813883a 	mov	r9,r21
  804644:	880b883a 	mov	r5,r17
  804648:	0009883a 	mov	r4,zero
  80464c:	000d883a 	mov	r6,zero
  804650:	2a000017 	ldw	r8,0(r5)
  804654:	49c00017 	ldw	r7,0(r9)
  804658:	29400104 	addi	r5,r5,4
  80465c:	40bfffcc 	andi	r2,r8,65535
  804660:	14c5383a 	mul	r2,r2,r19
  804664:	4010d43a 	srli	r8,r8,16
  804668:	38ffffcc 	andi	r3,r7,65535
  80466c:	1105883a 	add	r2,r2,r4
  804670:	1008d43a 	srli	r4,r2,16
  804674:	44d1383a 	mul	r8,r8,r19
  804678:	198d883a 	add	r6,r3,r6
  80467c:	10ffffcc 	andi	r3,r2,65535
  804680:	30c7c83a 	sub	r3,r6,r3
  804684:	380ed43a 	srli	r7,r7,16
  804688:	4105883a 	add	r2,r8,r4
  80468c:	180dd43a 	srai	r6,r3,16
  804690:	113fffcc 	andi	r4,r2,65535
  804694:	390fc83a 	sub	r7,r7,r4
  804698:	398d883a 	add	r6,r7,r6
  80469c:	300e943a 	slli	r7,r6,16
  8046a0:	18ffffcc 	andi	r3,r3,65535
  8046a4:	1008d43a 	srli	r4,r2,16
  8046a8:	38ceb03a 	or	r7,r7,r3
  8046ac:	49c00015 	stw	r7,0(r9)
  8046b0:	300dd43a 	srai	r6,r6,16
  8046b4:	4a400104 	addi	r9,r9,4
  8046b8:	a17fe52e 	bgeu	r20,r5,804650 <__alt_data_end+0xff804650>
  8046bc:	b0800017 	ldw	r2,0(r22)
  8046c0:	10000b1e 	bne	r2,zero,8046f0 <quorem+0x120>
  8046c4:	b0bfff04 	addi	r2,r22,-4
  8046c8:	a880082e 	bgeu	r21,r2,8046ec <quorem+0x11c>
  8046cc:	b0ffff17 	ldw	r3,-4(r22)
  8046d0:	18000326 	beq	r3,zero,8046e0 <quorem+0x110>
  8046d4:	00000506 	br	8046ec <quorem+0x11c>
  8046d8:	10c00017 	ldw	r3,0(r2)
  8046dc:	1800031e 	bne	r3,zero,8046ec <quorem+0x11c>
  8046e0:	10bfff04 	addi	r2,r2,-4
  8046e4:	94bfffc4 	addi	r18,r18,-1
  8046e8:	a8bffb36 	bltu	r21,r2,8046d8 <__alt_data_end+0xff8046d8>
  8046ec:	84800415 	stw	r18,16(r16)
  8046f0:	b80b883a 	mov	r5,r23
  8046f4:	8009883a 	mov	r4,r16
  8046f8:	080925c0 	call	80925c <__mcmp>
  8046fc:	10002616 	blt	r2,zero,804798 <quorem+0x1c8>
  804700:	9cc00044 	addi	r19,r19,1
  804704:	a805883a 	mov	r2,r21
  804708:	000b883a 	mov	r5,zero
  80470c:	11000017 	ldw	r4,0(r2)
  804710:	89800017 	ldw	r6,0(r17)
  804714:	10800104 	addi	r2,r2,4
  804718:	20ffffcc 	andi	r3,r4,65535
  80471c:	194b883a 	add	r5,r3,r5
  804720:	30ffffcc 	andi	r3,r6,65535
  804724:	28c7c83a 	sub	r3,r5,r3
  804728:	300cd43a 	srli	r6,r6,16
  80472c:	2008d43a 	srli	r4,r4,16
  804730:	180bd43a 	srai	r5,r3,16
  804734:	18ffffcc 	andi	r3,r3,65535
  804738:	2189c83a 	sub	r4,r4,r6
  80473c:	2149883a 	add	r4,r4,r5
  804740:	200c943a 	slli	r6,r4,16
  804744:	8c400104 	addi	r17,r17,4
  804748:	200bd43a 	srai	r5,r4,16
  80474c:	30c6b03a 	or	r3,r6,r3
  804750:	10ffff15 	stw	r3,-4(r2)
  804754:	a47fed2e 	bgeu	r20,r17,80470c <__alt_data_end+0xff80470c>
  804758:	9485883a 	add	r2,r18,r18
  80475c:	1085883a 	add	r2,r2,r2
  804760:	a887883a 	add	r3,r21,r2
  804764:	18800017 	ldw	r2,0(r3)
  804768:	10000b1e 	bne	r2,zero,804798 <quorem+0x1c8>
  80476c:	18bfff04 	addi	r2,r3,-4
  804770:	a880082e 	bgeu	r21,r2,804794 <quorem+0x1c4>
  804774:	18ffff17 	ldw	r3,-4(r3)
  804778:	18000326 	beq	r3,zero,804788 <quorem+0x1b8>
  80477c:	00000506 	br	804794 <quorem+0x1c4>
  804780:	10c00017 	ldw	r3,0(r2)
  804784:	1800031e 	bne	r3,zero,804794 <quorem+0x1c4>
  804788:	10bfff04 	addi	r2,r2,-4
  80478c:	94bfffc4 	addi	r18,r18,-1
  804790:	a8bffb36 	bltu	r21,r2,804780 <__alt_data_end+0xff804780>
  804794:	84800415 	stw	r18,16(r16)
  804798:	9805883a 	mov	r2,r19
  80479c:	dfc00817 	ldw	ra,32(sp)
  8047a0:	ddc00717 	ldw	r23,28(sp)
  8047a4:	dd800617 	ldw	r22,24(sp)
  8047a8:	dd400517 	ldw	r21,20(sp)
  8047ac:	dd000417 	ldw	r20,16(sp)
  8047b0:	dcc00317 	ldw	r19,12(sp)
  8047b4:	dc800217 	ldw	r18,8(sp)
  8047b8:	dc400117 	ldw	r17,4(sp)
  8047bc:	dc000017 	ldw	r16,0(sp)
  8047c0:	dec00904 	addi	sp,sp,36
  8047c4:	f800283a 	ret
  8047c8:	0005883a 	mov	r2,zero
  8047cc:	003ff306 	br	80479c <__alt_data_end+0xff80479c>

008047d0 <_dtoa_r>:
  8047d0:	20801017 	ldw	r2,64(r4)
  8047d4:	deffde04 	addi	sp,sp,-136
  8047d8:	df002015 	stw	fp,128(sp)
  8047dc:	dcc01b15 	stw	r19,108(sp)
  8047e0:	dc801a15 	stw	r18,104(sp)
  8047e4:	dc401915 	stw	r17,100(sp)
  8047e8:	dc001815 	stw	r16,96(sp)
  8047ec:	dfc02115 	stw	ra,132(sp)
  8047f0:	ddc01f15 	stw	r23,124(sp)
  8047f4:	dd801e15 	stw	r22,120(sp)
  8047f8:	dd401d15 	stw	r21,116(sp)
  8047fc:	dd001c15 	stw	r20,112(sp)
  804800:	d9c00315 	stw	r7,12(sp)
  804804:	2039883a 	mov	fp,r4
  804808:	3023883a 	mov	r17,r6
  80480c:	2825883a 	mov	r18,r5
  804810:	dc002417 	ldw	r16,144(sp)
  804814:	3027883a 	mov	r19,r6
  804818:	10000826 	beq	r2,zero,80483c <_dtoa_r+0x6c>
  80481c:	21801117 	ldw	r6,68(r4)
  804820:	00c00044 	movi	r3,1
  804824:	100b883a 	mov	r5,r2
  804828:	1986983a 	sll	r3,r3,r6
  80482c:	11800115 	stw	r6,4(r2)
  804830:	10c00215 	stw	r3,8(r2)
  804834:	0808a3c0 	call	808a3c <_Bfree>
  804838:	e0001015 	stw	zero,64(fp)
  80483c:	88002e16 	blt	r17,zero,8048f8 <_dtoa_r+0x128>
  804840:	80000015 	stw	zero,0(r16)
  804844:	889ffc2c 	andhi	r2,r17,32752
  804848:	00dffc34 	movhi	r3,32752
  80484c:	10c01c26 	beq	r2,r3,8048c0 <_dtoa_r+0xf0>
  804850:	000d883a 	mov	r6,zero
  804854:	000f883a 	mov	r7,zero
  804858:	9009883a 	mov	r4,r18
  80485c:	980b883a 	mov	r5,r19
  804860:	080d72c0 	call	80d72c <__eqdf2>
  804864:	10002b1e 	bne	r2,zero,804914 <_dtoa_r+0x144>
  804868:	d9c02317 	ldw	r7,140(sp)
  80486c:	00800044 	movi	r2,1
  804870:	38800015 	stw	r2,0(r7)
  804874:	d8802517 	ldw	r2,148(sp)
  804878:	10019e26 	beq	r2,zero,804ef4 <_dtoa_r+0x724>
  80487c:	d8c02517 	ldw	r3,148(sp)
  804880:	00802074 	movhi	r2,129
  804884:	10837f44 	addi	r2,r2,3581
  804888:	18800015 	stw	r2,0(r3)
  80488c:	10bfffc4 	addi	r2,r2,-1
  804890:	dfc02117 	ldw	ra,132(sp)
  804894:	df002017 	ldw	fp,128(sp)
  804898:	ddc01f17 	ldw	r23,124(sp)
  80489c:	dd801e17 	ldw	r22,120(sp)
  8048a0:	dd401d17 	ldw	r21,116(sp)
  8048a4:	dd001c17 	ldw	r20,112(sp)
  8048a8:	dcc01b17 	ldw	r19,108(sp)
  8048ac:	dc801a17 	ldw	r18,104(sp)
  8048b0:	dc401917 	ldw	r17,100(sp)
  8048b4:	dc001817 	ldw	r16,96(sp)
  8048b8:	dec02204 	addi	sp,sp,136
  8048bc:	f800283a 	ret
  8048c0:	d8c02317 	ldw	r3,140(sp)
  8048c4:	0089c3c4 	movi	r2,9999
  8048c8:	18800015 	stw	r2,0(r3)
  8048cc:	90017726 	beq	r18,zero,804eac <_dtoa_r+0x6dc>
  8048d0:	00802074 	movhi	r2,129
  8048d4:	10838b04 	addi	r2,r2,3628
  8048d8:	d9002517 	ldw	r4,148(sp)
  8048dc:	203fec26 	beq	r4,zero,804890 <__alt_data_end+0xff804890>
  8048e0:	10c000c7 	ldb	r3,3(r2)
  8048e4:	1801781e 	bne	r3,zero,804ec8 <_dtoa_r+0x6f8>
  8048e8:	10c000c4 	addi	r3,r2,3
  8048ec:	d9802517 	ldw	r6,148(sp)
  8048f0:	30c00015 	stw	r3,0(r6)
  8048f4:	003fe606 	br	804890 <__alt_data_end+0xff804890>
  8048f8:	04e00034 	movhi	r19,32768
  8048fc:	9cffffc4 	addi	r19,r19,-1
  804900:	00800044 	movi	r2,1
  804904:	8ce6703a 	and	r19,r17,r19
  804908:	80800015 	stw	r2,0(r16)
  80490c:	9823883a 	mov	r17,r19
  804910:	003fcc06 	br	804844 <__alt_data_end+0xff804844>
  804914:	d8800204 	addi	r2,sp,8
  804918:	d8800015 	stw	r2,0(sp)
  80491c:	d9c00104 	addi	r7,sp,4
  804920:	900b883a 	mov	r5,r18
  804924:	980d883a 	mov	r6,r19
  804928:	e009883a 	mov	r4,fp
  80492c:	8820d53a 	srli	r16,r17,20
  804930:	08096280 	call	809628 <__d2b>
  804934:	d8800915 	stw	r2,36(sp)
  804938:	8001651e 	bne	r16,zero,804ed0 <_dtoa_r+0x700>
  80493c:	dd800217 	ldw	r22,8(sp)
  804940:	dc000117 	ldw	r16,4(sp)
  804944:	00800804 	movi	r2,32
  804948:	b421883a 	add	r16,r22,r16
  80494c:	80c10c84 	addi	r3,r16,1074
  804950:	10c2d10e 	bge	r2,r3,805498 <_dtoa_r+0xcc8>
  804954:	00801004 	movi	r2,64
  804958:	81010484 	addi	r4,r16,1042
  80495c:	10c7c83a 	sub	r3,r2,r3
  804960:	9108d83a 	srl	r4,r18,r4
  804964:	88e2983a 	sll	r17,r17,r3
  804968:	2448b03a 	or	r4,r4,r17
  80496c:	0801a380 	call	801a38 <__floatunsidf>
  804970:	017f8434 	movhi	r5,65040
  804974:	01800044 	movi	r6,1
  804978:	1009883a 	mov	r4,r2
  80497c:	194b883a 	add	r5,r3,r5
  804980:	843fffc4 	addi	r16,r16,-1
  804984:	d9801115 	stw	r6,68(sp)
  804988:	000d883a 	mov	r6,zero
  80498c:	01cffe34 	movhi	r7,16376
  804990:	080d9840 	call	80d984 <__subdf3>
  804994:	0198dbf4 	movhi	r6,25455
  804998:	01cff4f4 	movhi	r7,16339
  80499c:	3190d844 	addi	r6,r6,17249
  8049a0:	39e1e9c4 	addi	r7,r7,-30809
  8049a4:	1009883a 	mov	r4,r2
  8049a8:	180b883a 	mov	r5,r3
  8049ac:	08013200 	call	801320 <__muldf3>
  8049b0:	01a2d874 	movhi	r6,35681
  8049b4:	01cff1f4 	movhi	r7,16327
  8049b8:	31b22cc4 	addi	r6,r6,-14157
  8049bc:	39e28a04 	addi	r7,r7,-30168
  8049c0:	180b883a 	mov	r5,r3
  8049c4:	1009883a 	mov	r4,r2
  8049c8:	0800a740 	call	800a74 <__adddf3>
  8049cc:	8009883a 	mov	r4,r16
  8049d0:	1029883a 	mov	r20,r2
  8049d4:	1823883a 	mov	r17,r3
  8049d8:	080e3000 	call	80e300 <__floatsidf>
  8049dc:	019427f4 	movhi	r6,20639
  8049e0:	01cff4f4 	movhi	r7,16339
  8049e4:	319e7ec4 	addi	r6,r6,31227
  8049e8:	39d104c4 	addi	r7,r7,17427
  8049ec:	1009883a 	mov	r4,r2
  8049f0:	180b883a 	mov	r5,r3
  8049f4:	08013200 	call	801320 <__muldf3>
  8049f8:	100d883a 	mov	r6,r2
  8049fc:	180f883a 	mov	r7,r3
  804a00:	a009883a 	mov	r4,r20
  804a04:	880b883a 	mov	r5,r17
  804a08:	0800a740 	call	800a74 <__adddf3>
  804a0c:	1009883a 	mov	r4,r2
  804a10:	180b883a 	mov	r5,r3
  804a14:	1029883a 	mov	r20,r2
  804a18:	1823883a 	mov	r17,r3
  804a1c:	080e2800 	call	80e280 <__fixdfsi>
  804a20:	000d883a 	mov	r6,zero
  804a24:	000f883a 	mov	r7,zero
  804a28:	a009883a 	mov	r4,r20
  804a2c:	880b883a 	mov	r5,r17
  804a30:	d8800515 	stw	r2,20(sp)
  804a34:	080d8900 	call	80d890 <__ledf2>
  804a38:	10028716 	blt	r2,zero,805458 <_dtoa_r+0xc88>
  804a3c:	d8c00517 	ldw	r3,20(sp)
  804a40:	00800584 	movi	r2,22
  804a44:	10c27536 	bltu	r2,r3,80541c <_dtoa_r+0xc4c>
  804a48:	180490fa 	slli	r2,r3,3
  804a4c:	00c02074 	movhi	r3,129
  804a50:	18c3a604 	addi	r3,r3,3736
  804a54:	1885883a 	add	r2,r3,r2
  804a58:	11000017 	ldw	r4,0(r2)
  804a5c:	11400117 	ldw	r5,4(r2)
  804a60:	900d883a 	mov	r6,r18
  804a64:	980f883a 	mov	r7,r19
  804a68:	080d7b40 	call	80d7b4 <__gedf2>
  804a6c:	00828d0e 	bge	zero,r2,8054a4 <_dtoa_r+0xcd4>
  804a70:	d9000517 	ldw	r4,20(sp)
  804a74:	d8000e15 	stw	zero,56(sp)
  804a78:	213fffc4 	addi	r4,r4,-1
  804a7c:	d9000515 	stw	r4,20(sp)
  804a80:	b42dc83a 	sub	r22,r22,r16
  804a84:	b5bfffc4 	addi	r22,r22,-1
  804a88:	b0026f16 	blt	r22,zero,805448 <_dtoa_r+0xc78>
  804a8c:	d8000815 	stw	zero,32(sp)
  804a90:	d9c00517 	ldw	r7,20(sp)
  804a94:	38026416 	blt	r7,zero,805428 <_dtoa_r+0xc58>
  804a98:	b1ed883a 	add	r22,r22,r7
  804a9c:	d9c00d15 	stw	r7,52(sp)
  804aa0:	d8000a15 	stw	zero,40(sp)
  804aa4:	d9800317 	ldw	r6,12(sp)
  804aa8:	00800244 	movi	r2,9
  804aac:	11811436 	bltu	r2,r6,804f00 <_dtoa_r+0x730>
  804ab0:	00800144 	movi	r2,5
  804ab4:	1184e10e 	bge	r2,r6,805e3c <_dtoa_r+0x166c>
  804ab8:	31bfff04 	addi	r6,r6,-4
  804abc:	d9800315 	stw	r6,12(sp)
  804ac0:	0023883a 	mov	r17,zero
  804ac4:	d9800317 	ldw	r6,12(sp)
  804ac8:	008000c4 	movi	r2,3
  804acc:	30836726 	beq	r6,r2,80586c <_dtoa_r+0x109c>
  804ad0:	1183410e 	bge	r2,r6,8057d8 <_dtoa_r+0x1008>
  804ad4:	d9c00317 	ldw	r7,12(sp)
  804ad8:	00800104 	movi	r2,4
  804adc:	38827c26 	beq	r7,r2,8054d0 <_dtoa_r+0xd00>
  804ae0:	00800144 	movi	r2,5
  804ae4:	3884c41e 	bne	r7,r2,805df8 <_dtoa_r+0x1628>
  804ae8:	00800044 	movi	r2,1
  804aec:	d8800b15 	stw	r2,44(sp)
  804af0:	d8c00517 	ldw	r3,20(sp)
  804af4:	d9002217 	ldw	r4,136(sp)
  804af8:	1907883a 	add	r3,r3,r4
  804afc:	19800044 	addi	r6,r3,1
  804b00:	d8c00c15 	stw	r3,48(sp)
  804b04:	d9800615 	stw	r6,24(sp)
  804b08:	0183a40e 	bge	zero,r6,80599c <_dtoa_r+0x11cc>
  804b0c:	d9800617 	ldw	r6,24(sp)
  804b10:	3021883a 	mov	r16,r6
  804b14:	e0001115 	stw	zero,68(fp)
  804b18:	008005c4 	movi	r2,23
  804b1c:	1184c92e 	bgeu	r2,r6,805e44 <_dtoa_r+0x1674>
  804b20:	00c00044 	movi	r3,1
  804b24:	00800104 	movi	r2,4
  804b28:	1085883a 	add	r2,r2,r2
  804b2c:	11000504 	addi	r4,r2,20
  804b30:	180b883a 	mov	r5,r3
  804b34:	18c00044 	addi	r3,r3,1
  804b38:	313ffb2e 	bgeu	r6,r4,804b28 <__alt_data_end+0xff804b28>
  804b3c:	e1401115 	stw	r5,68(fp)
  804b40:	e009883a 	mov	r4,fp
  804b44:	08089940 	call	808994 <_Balloc>
  804b48:	d8800715 	stw	r2,28(sp)
  804b4c:	e0801015 	stw	r2,64(fp)
  804b50:	00800384 	movi	r2,14
  804b54:	1400f736 	bltu	r2,r16,804f34 <_dtoa_r+0x764>
  804b58:	8800f626 	beq	r17,zero,804f34 <_dtoa_r+0x764>
  804b5c:	d9c00517 	ldw	r7,20(sp)
  804b60:	01c39a0e 	bge	zero,r7,8059cc <_dtoa_r+0x11fc>
  804b64:	388003cc 	andi	r2,r7,15
  804b68:	100490fa 	slli	r2,r2,3
  804b6c:	382bd13a 	srai	r21,r7,4
  804b70:	00c02074 	movhi	r3,129
  804b74:	18c3a604 	addi	r3,r3,3736
  804b78:	1885883a 	add	r2,r3,r2
  804b7c:	a8c0040c 	andi	r3,r21,16
  804b80:	12400017 	ldw	r9,0(r2)
  804b84:	12000117 	ldw	r8,4(r2)
  804b88:	18037926 	beq	r3,zero,805970 <_dtoa_r+0x11a0>
  804b8c:	00802074 	movhi	r2,129
  804b90:	10839c04 	addi	r2,r2,3696
  804b94:	11800817 	ldw	r6,32(r2)
  804b98:	11c00917 	ldw	r7,36(r2)
  804b9c:	9009883a 	mov	r4,r18
  804ba0:	980b883a 	mov	r5,r19
  804ba4:	da001715 	stw	r8,92(sp)
  804ba8:	da401615 	stw	r9,88(sp)
  804bac:	080ce440 	call	80ce44 <__divdf3>
  804bb0:	da001717 	ldw	r8,92(sp)
  804bb4:	da401617 	ldw	r9,88(sp)
  804bb8:	ad4003cc 	andi	r21,r21,15
  804bbc:	040000c4 	movi	r16,3
  804bc0:	1023883a 	mov	r17,r2
  804bc4:	1829883a 	mov	r20,r3
  804bc8:	a8001126 	beq	r21,zero,804c10 <_dtoa_r+0x440>
  804bcc:	05c02074 	movhi	r23,129
  804bd0:	bdc39c04 	addi	r23,r23,3696
  804bd4:	4805883a 	mov	r2,r9
  804bd8:	4007883a 	mov	r3,r8
  804bdc:	a980004c 	andi	r6,r21,1
  804be0:	1009883a 	mov	r4,r2
  804be4:	a82bd07a 	srai	r21,r21,1
  804be8:	180b883a 	mov	r5,r3
  804bec:	30000426 	beq	r6,zero,804c00 <_dtoa_r+0x430>
  804bf0:	b9800017 	ldw	r6,0(r23)
  804bf4:	b9c00117 	ldw	r7,4(r23)
  804bf8:	84000044 	addi	r16,r16,1
  804bfc:	08013200 	call	801320 <__muldf3>
  804c00:	bdc00204 	addi	r23,r23,8
  804c04:	a83ff51e 	bne	r21,zero,804bdc <__alt_data_end+0xff804bdc>
  804c08:	1013883a 	mov	r9,r2
  804c0c:	1811883a 	mov	r8,r3
  804c10:	480d883a 	mov	r6,r9
  804c14:	400f883a 	mov	r7,r8
  804c18:	8809883a 	mov	r4,r17
  804c1c:	a00b883a 	mov	r5,r20
  804c20:	080ce440 	call	80ce44 <__divdf3>
  804c24:	d8800f15 	stw	r2,60(sp)
  804c28:	d8c01015 	stw	r3,64(sp)
  804c2c:	d8c00e17 	ldw	r3,56(sp)
  804c30:	18000626 	beq	r3,zero,804c4c <_dtoa_r+0x47c>
  804c34:	d9000f17 	ldw	r4,60(sp)
  804c38:	d9401017 	ldw	r5,64(sp)
  804c3c:	000d883a 	mov	r6,zero
  804c40:	01cffc34 	movhi	r7,16368
  804c44:	080d8900 	call	80d890 <__ledf2>
  804c48:	10040b16 	blt	r2,zero,805c78 <_dtoa_r+0x14a8>
  804c4c:	8009883a 	mov	r4,r16
  804c50:	080e3000 	call	80e300 <__floatsidf>
  804c54:	d9800f17 	ldw	r6,60(sp)
  804c58:	d9c01017 	ldw	r7,64(sp)
  804c5c:	1009883a 	mov	r4,r2
  804c60:	180b883a 	mov	r5,r3
  804c64:	08013200 	call	801320 <__muldf3>
  804c68:	000d883a 	mov	r6,zero
  804c6c:	01d00734 	movhi	r7,16412
  804c70:	1009883a 	mov	r4,r2
  804c74:	180b883a 	mov	r5,r3
  804c78:	0800a740 	call	800a74 <__adddf3>
  804c7c:	1021883a 	mov	r16,r2
  804c80:	d8800617 	ldw	r2,24(sp)
  804c84:	047f3034 	movhi	r17,64704
  804c88:	1c63883a 	add	r17,r3,r17
  804c8c:	10031826 	beq	r2,zero,8058f0 <_dtoa_r+0x1120>
  804c90:	d8c00517 	ldw	r3,20(sp)
  804c94:	db000617 	ldw	r12,24(sp)
  804c98:	d8c01315 	stw	r3,76(sp)
  804c9c:	d9000b17 	ldw	r4,44(sp)
  804ca0:	20038f26 	beq	r4,zero,805ae0 <_dtoa_r+0x1310>
  804ca4:	60bfffc4 	addi	r2,r12,-1
  804ca8:	100490fa 	slli	r2,r2,3
  804cac:	00c02074 	movhi	r3,129
  804cb0:	18c3a604 	addi	r3,r3,3736
  804cb4:	1885883a 	add	r2,r3,r2
  804cb8:	11800017 	ldw	r6,0(r2)
  804cbc:	11c00117 	ldw	r7,4(r2)
  804cc0:	d8800717 	ldw	r2,28(sp)
  804cc4:	0009883a 	mov	r4,zero
  804cc8:	014ff834 	movhi	r5,16352
  804ccc:	db001615 	stw	r12,88(sp)
  804cd0:	15c00044 	addi	r23,r2,1
  804cd4:	080ce440 	call	80ce44 <__divdf3>
  804cd8:	800d883a 	mov	r6,r16
  804cdc:	880f883a 	mov	r7,r17
  804ce0:	1009883a 	mov	r4,r2
  804ce4:	180b883a 	mov	r5,r3
  804ce8:	080d9840 	call	80d984 <__subdf3>
  804cec:	d9401017 	ldw	r5,64(sp)
  804cf0:	d9000f17 	ldw	r4,60(sp)
  804cf4:	102b883a 	mov	r21,r2
  804cf8:	d8c01215 	stw	r3,72(sp)
  804cfc:	080e2800 	call	80e280 <__fixdfsi>
  804d00:	1009883a 	mov	r4,r2
  804d04:	1029883a 	mov	r20,r2
  804d08:	080e3000 	call	80e300 <__floatsidf>
  804d0c:	d9000f17 	ldw	r4,60(sp)
  804d10:	d9401017 	ldw	r5,64(sp)
  804d14:	100d883a 	mov	r6,r2
  804d18:	180f883a 	mov	r7,r3
  804d1c:	080d9840 	call	80d984 <__subdf3>
  804d20:	1823883a 	mov	r17,r3
  804d24:	d8c00717 	ldw	r3,28(sp)
  804d28:	d9401217 	ldw	r5,72(sp)
  804d2c:	a2000c04 	addi	r8,r20,48
  804d30:	1021883a 	mov	r16,r2
  804d34:	1a000005 	stb	r8,0(r3)
  804d38:	800d883a 	mov	r6,r16
  804d3c:	880f883a 	mov	r7,r17
  804d40:	a809883a 	mov	r4,r21
  804d44:	4029883a 	mov	r20,r8
  804d48:	080d7b40 	call	80d7b4 <__gedf2>
  804d4c:	00841d16 	blt	zero,r2,805dc4 <_dtoa_r+0x15f4>
  804d50:	800d883a 	mov	r6,r16
  804d54:	880f883a 	mov	r7,r17
  804d58:	0009883a 	mov	r4,zero
  804d5c:	014ffc34 	movhi	r5,16368
  804d60:	080d9840 	call	80d984 <__subdf3>
  804d64:	d9401217 	ldw	r5,72(sp)
  804d68:	100d883a 	mov	r6,r2
  804d6c:	180f883a 	mov	r7,r3
  804d70:	a809883a 	mov	r4,r21
  804d74:	080d7b40 	call	80d7b4 <__gedf2>
  804d78:	db001617 	ldw	r12,88(sp)
  804d7c:	00840e16 	blt	zero,r2,805db8 <_dtoa_r+0x15e8>
  804d80:	00800044 	movi	r2,1
  804d84:	13006b0e 	bge	r2,r12,804f34 <_dtoa_r+0x764>
  804d88:	d9000717 	ldw	r4,28(sp)
  804d8c:	dd800f15 	stw	r22,60(sp)
  804d90:	dcc01015 	stw	r19,64(sp)
  804d94:	2319883a 	add	r12,r4,r12
  804d98:	dcc01217 	ldw	r19,72(sp)
  804d9c:	602d883a 	mov	r22,r12
  804da0:	dc801215 	stw	r18,72(sp)
  804da4:	b825883a 	mov	r18,r23
  804da8:	00000906 	br	804dd0 <_dtoa_r+0x600>
  804dac:	080d9840 	call	80d984 <__subdf3>
  804db0:	a80d883a 	mov	r6,r21
  804db4:	980f883a 	mov	r7,r19
  804db8:	1009883a 	mov	r4,r2
  804dbc:	180b883a 	mov	r5,r3
  804dc0:	080d8900 	call	80d890 <__ledf2>
  804dc4:	1003e816 	blt	r2,zero,805d68 <_dtoa_r+0x1598>
  804dc8:	b825883a 	mov	r18,r23
  804dcc:	bd83e926 	beq	r23,r22,805d74 <_dtoa_r+0x15a4>
  804dd0:	a809883a 	mov	r4,r21
  804dd4:	980b883a 	mov	r5,r19
  804dd8:	000d883a 	mov	r6,zero
  804ddc:	01d00934 	movhi	r7,16420
  804de0:	08013200 	call	801320 <__muldf3>
  804de4:	000d883a 	mov	r6,zero
  804de8:	01d00934 	movhi	r7,16420
  804dec:	8009883a 	mov	r4,r16
  804df0:	880b883a 	mov	r5,r17
  804df4:	102b883a 	mov	r21,r2
  804df8:	1827883a 	mov	r19,r3
  804dfc:	08013200 	call	801320 <__muldf3>
  804e00:	180b883a 	mov	r5,r3
  804e04:	1009883a 	mov	r4,r2
  804e08:	1821883a 	mov	r16,r3
  804e0c:	1023883a 	mov	r17,r2
  804e10:	080e2800 	call	80e280 <__fixdfsi>
  804e14:	1009883a 	mov	r4,r2
  804e18:	1029883a 	mov	r20,r2
  804e1c:	080e3000 	call	80e300 <__floatsidf>
  804e20:	8809883a 	mov	r4,r17
  804e24:	800b883a 	mov	r5,r16
  804e28:	100d883a 	mov	r6,r2
  804e2c:	180f883a 	mov	r7,r3
  804e30:	080d9840 	call	80d984 <__subdf3>
  804e34:	a5000c04 	addi	r20,r20,48
  804e38:	a80d883a 	mov	r6,r21
  804e3c:	980f883a 	mov	r7,r19
  804e40:	1009883a 	mov	r4,r2
  804e44:	180b883a 	mov	r5,r3
  804e48:	95000005 	stb	r20,0(r18)
  804e4c:	1021883a 	mov	r16,r2
  804e50:	1823883a 	mov	r17,r3
  804e54:	080d8900 	call	80d890 <__ledf2>
  804e58:	bdc00044 	addi	r23,r23,1
  804e5c:	800d883a 	mov	r6,r16
  804e60:	880f883a 	mov	r7,r17
  804e64:	0009883a 	mov	r4,zero
  804e68:	014ffc34 	movhi	r5,16368
  804e6c:	103fcf0e 	bge	r2,zero,804dac <__alt_data_end+0xff804dac>
  804e70:	d8c01317 	ldw	r3,76(sp)
  804e74:	d8c00515 	stw	r3,20(sp)
  804e78:	d9400917 	ldw	r5,36(sp)
  804e7c:	e009883a 	mov	r4,fp
  804e80:	0808a3c0 	call	808a3c <_Bfree>
  804e84:	d9000517 	ldw	r4,20(sp)
  804e88:	d9802317 	ldw	r6,140(sp)
  804e8c:	d9c02517 	ldw	r7,148(sp)
  804e90:	b8000005 	stb	zero,0(r23)
  804e94:	20800044 	addi	r2,r4,1
  804e98:	30800015 	stw	r2,0(r6)
  804e9c:	3802aa26 	beq	r7,zero,805948 <_dtoa_r+0x1178>
  804ea0:	3dc00015 	stw	r23,0(r7)
  804ea4:	d8800717 	ldw	r2,28(sp)
  804ea8:	003e7906 	br	804890 <__alt_data_end+0xff804890>
  804eac:	00800434 	movhi	r2,16
  804eb0:	10bfffc4 	addi	r2,r2,-1
  804eb4:	88a2703a 	and	r17,r17,r2
  804eb8:	883e851e 	bne	r17,zero,8048d0 <__alt_data_end+0xff8048d0>
  804ebc:	00802074 	movhi	r2,129
  804ec0:	10838804 	addi	r2,r2,3616
  804ec4:	003e8406 	br	8048d8 <__alt_data_end+0xff8048d8>
  804ec8:	10c00204 	addi	r3,r2,8
  804ecc:	003e8706 	br	8048ec <__alt_data_end+0xff8048ec>
  804ed0:	01400434 	movhi	r5,16
  804ed4:	297fffc4 	addi	r5,r5,-1
  804ed8:	994a703a 	and	r5,r19,r5
  804edc:	9009883a 	mov	r4,r18
  804ee0:	843f0044 	addi	r16,r16,-1023
  804ee4:	294ffc34 	orhi	r5,r5,16368
  804ee8:	dd800217 	ldw	r22,8(sp)
  804eec:	d8001115 	stw	zero,68(sp)
  804ef0:	003ea506 	br	804988 <__alt_data_end+0xff804988>
  804ef4:	00802074 	movhi	r2,129
  804ef8:	10837f04 	addi	r2,r2,3580
  804efc:	003e6406 	br	804890 <__alt_data_end+0xff804890>
  804f00:	e0001115 	stw	zero,68(fp)
  804f04:	000b883a 	mov	r5,zero
  804f08:	e009883a 	mov	r4,fp
  804f0c:	08089940 	call	808994 <_Balloc>
  804f10:	01bfffc4 	movi	r6,-1
  804f14:	01c00044 	movi	r7,1
  804f18:	d8800715 	stw	r2,28(sp)
  804f1c:	d9800c15 	stw	r6,48(sp)
  804f20:	e0801015 	stw	r2,64(fp)
  804f24:	d8000315 	stw	zero,12(sp)
  804f28:	d9c00b15 	stw	r7,44(sp)
  804f2c:	d9800615 	stw	r6,24(sp)
  804f30:	d8002215 	stw	zero,136(sp)
  804f34:	d8800117 	ldw	r2,4(sp)
  804f38:	10008916 	blt	r2,zero,805160 <_dtoa_r+0x990>
  804f3c:	d9000517 	ldw	r4,20(sp)
  804f40:	00c00384 	movi	r3,14
  804f44:	19008616 	blt	r3,r4,805160 <_dtoa_r+0x990>
  804f48:	200490fa 	slli	r2,r4,3
  804f4c:	00c02074 	movhi	r3,129
  804f50:	d9802217 	ldw	r6,136(sp)
  804f54:	18c3a604 	addi	r3,r3,3736
  804f58:	1885883a 	add	r2,r3,r2
  804f5c:	14000017 	ldw	r16,0(r2)
  804f60:	14400117 	ldw	r17,4(r2)
  804f64:	30016316 	blt	r6,zero,8054f4 <_dtoa_r+0xd24>
  804f68:	800d883a 	mov	r6,r16
  804f6c:	880f883a 	mov	r7,r17
  804f70:	9009883a 	mov	r4,r18
  804f74:	980b883a 	mov	r5,r19
  804f78:	080ce440 	call	80ce44 <__divdf3>
  804f7c:	180b883a 	mov	r5,r3
  804f80:	1009883a 	mov	r4,r2
  804f84:	080e2800 	call	80e280 <__fixdfsi>
  804f88:	1009883a 	mov	r4,r2
  804f8c:	102b883a 	mov	r21,r2
  804f90:	080e3000 	call	80e300 <__floatsidf>
  804f94:	800d883a 	mov	r6,r16
  804f98:	880f883a 	mov	r7,r17
  804f9c:	1009883a 	mov	r4,r2
  804fa0:	180b883a 	mov	r5,r3
  804fa4:	08013200 	call	801320 <__muldf3>
  804fa8:	100d883a 	mov	r6,r2
  804fac:	180f883a 	mov	r7,r3
  804fb0:	9009883a 	mov	r4,r18
  804fb4:	980b883a 	mov	r5,r19
  804fb8:	080d9840 	call	80d984 <__subdf3>
  804fbc:	d9c00717 	ldw	r7,28(sp)
  804fc0:	1009883a 	mov	r4,r2
  804fc4:	a8800c04 	addi	r2,r21,48
  804fc8:	38800005 	stb	r2,0(r7)
  804fcc:	3dc00044 	addi	r23,r7,1
  804fd0:	d9c00617 	ldw	r7,24(sp)
  804fd4:	01800044 	movi	r6,1
  804fd8:	180b883a 	mov	r5,r3
  804fdc:	2005883a 	mov	r2,r4
  804fe0:	39803826 	beq	r7,r6,8050c4 <_dtoa_r+0x8f4>
  804fe4:	000d883a 	mov	r6,zero
  804fe8:	01d00934 	movhi	r7,16420
  804fec:	08013200 	call	801320 <__muldf3>
  804ff0:	000d883a 	mov	r6,zero
  804ff4:	000f883a 	mov	r7,zero
  804ff8:	1009883a 	mov	r4,r2
  804ffc:	180b883a 	mov	r5,r3
  805000:	1025883a 	mov	r18,r2
  805004:	1827883a 	mov	r19,r3
  805008:	080d72c0 	call	80d72c <__eqdf2>
  80500c:	103f9a26 	beq	r2,zero,804e78 <__alt_data_end+0xff804e78>
  805010:	d9c00617 	ldw	r7,24(sp)
  805014:	d8c00717 	ldw	r3,28(sp)
  805018:	b829883a 	mov	r20,r23
  80501c:	38bfffc4 	addi	r2,r7,-1
  805020:	18ad883a 	add	r22,r3,r2
  805024:	00000a06 	br	805050 <_dtoa_r+0x880>
  805028:	08013200 	call	801320 <__muldf3>
  80502c:	000d883a 	mov	r6,zero
  805030:	000f883a 	mov	r7,zero
  805034:	1009883a 	mov	r4,r2
  805038:	180b883a 	mov	r5,r3
  80503c:	1025883a 	mov	r18,r2
  805040:	1827883a 	mov	r19,r3
  805044:	b829883a 	mov	r20,r23
  805048:	080d72c0 	call	80d72c <__eqdf2>
  80504c:	103f8a26 	beq	r2,zero,804e78 <__alt_data_end+0xff804e78>
  805050:	800d883a 	mov	r6,r16
  805054:	880f883a 	mov	r7,r17
  805058:	9009883a 	mov	r4,r18
  80505c:	980b883a 	mov	r5,r19
  805060:	080ce440 	call	80ce44 <__divdf3>
  805064:	180b883a 	mov	r5,r3
  805068:	1009883a 	mov	r4,r2
  80506c:	080e2800 	call	80e280 <__fixdfsi>
  805070:	1009883a 	mov	r4,r2
  805074:	102b883a 	mov	r21,r2
  805078:	080e3000 	call	80e300 <__floatsidf>
  80507c:	800d883a 	mov	r6,r16
  805080:	880f883a 	mov	r7,r17
  805084:	1009883a 	mov	r4,r2
  805088:	180b883a 	mov	r5,r3
  80508c:	08013200 	call	801320 <__muldf3>
  805090:	100d883a 	mov	r6,r2
  805094:	180f883a 	mov	r7,r3
  805098:	9009883a 	mov	r4,r18
  80509c:	980b883a 	mov	r5,r19
  8050a0:	080d9840 	call	80d984 <__subdf3>
  8050a4:	aa000c04 	addi	r8,r21,48
  8050a8:	a2000005 	stb	r8,0(r20)
  8050ac:	000d883a 	mov	r6,zero
  8050b0:	01d00934 	movhi	r7,16420
  8050b4:	1009883a 	mov	r4,r2
  8050b8:	180b883a 	mov	r5,r3
  8050bc:	a5c00044 	addi	r23,r20,1
  8050c0:	b53fd91e 	bne	r22,r20,805028 <__alt_data_end+0xff805028>
  8050c4:	100d883a 	mov	r6,r2
  8050c8:	180f883a 	mov	r7,r3
  8050cc:	1009883a 	mov	r4,r2
  8050d0:	180b883a 	mov	r5,r3
  8050d4:	0800a740 	call	800a74 <__adddf3>
  8050d8:	100d883a 	mov	r6,r2
  8050dc:	180f883a 	mov	r7,r3
  8050e0:	8009883a 	mov	r4,r16
  8050e4:	880b883a 	mov	r5,r17
  8050e8:	1027883a 	mov	r19,r2
  8050ec:	1825883a 	mov	r18,r3
  8050f0:	080d8900 	call	80d890 <__ledf2>
  8050f4:	10000816 	blt	r2,zero,805118 <_dtoa_r+0x948>
  8050f8:	980d883a 	mov	r6,r19
  8050fc:	900f883a 	mov	r7,r18
  805100:	8009883a 	mov	r4,r16
  805104:	880b883a 	mov	r5,r17
  805108:	080d72c0 	call	80d72c <__eqdf2>
  80510c:	103f5a1e 	bne	r2,zero,804e78 <__alt_data_end+0xff804e78>
  805110:	ad40004c 	andi	r21,r21,1
  805114:	a83f5826 	beq	r21,zero,804e78 <__alt_data_end+0xff804e78>
  805118:	bd3fffc3 	ldbu	r20,-1(r23)
  80511c:	b8bfffc4 	addi	r2,r23,-1
  805120:	1007883a 	mov	r3,r2
  805124:	01400e44 	movi	r5,57
  805128:	d9800717 	ldw	r6,28(sp)
  80512c:	00000506 	br	805144 <_dtoa_r+0x974>
  805130:	18ffffc4 	addi	r3,r3,-1
  805134:	11824726 	beq	r2,r6,805a54 <_dtoa_r+0x1284>
  805138:	1d000003 	ldbu	r20,0(r3)
  80513c:	102f883a 	mov	r23,r2
  805140:	10bfffc4 	addi	r2,r2,-1
  805144:	a1003fcc 	andi	r4,r20,255
  805148:	2100201c 	xori	r4,r4,128
  80514c:	213fe004 	addi	r4,r4,-128
  805150:	217ff726 	beq	r4,r5,805130 <__alt_data_end+0xff805130>
  805154:	a2000044 	addi	r8,r20,1
  805158:	12000005 	stb	r8,0(r2)
  80515c:	003f4606 	br	804e78 <__alt_data_end+0xff804e78>
  805160:	d9000b17 	ldw	r4,44(sp)
  805164:	2000c826 	beq	r4,zero,805488 <_dtoa_r+0xcb8>
  805168:	d9800317 	ldw	r6,12(sp)
  80516c:	00c00044 	movi	r3,1
  805170:	1980f90e 	bge	r3,r6,805558 <_dtoa_r+0xd88>
  805174:	d8800617 	ldw	r2,24(sp)
  805178:	d8c00a17 	ldw	r3,40(sp)
  80517c:	157fffc4 	addi	r21,r2,-1
  805180:	1d41f316 	blt	r3,r21,805950 <_dtoa_r+0x1180>
  805184:	1d6bc83a 	sub	r21,r3,r21
  805188:	d9c00617 	ldw	r7,24(sp)
  80518c:	3802aa16 	blt	r7,zero,805c38 <_dtoa_r+0x1468>
  805190:	dd000817 	ldw	r20,32(sp)
  805194:	d8800617 	ldw	r2,24(sp)
  805198:	d8c00817 	ldw	r3,32(sp)
  80519c:	01400044 	movi	r5,1
  8051a0:	e009883a 	mov	r4,fp
  8051a4:	1887883a 	add	r3,r3,r2
  8051a8:	d8c00815 	stw	r3,32(sp)
  8051ac:	b0ad883a 	add	r22,r22,r2
  8051b0:	0808da00 	call	808da0 <__i2b>
  8051b4:	1023883a 	mov	r17,r2
  8051b8:	a0000826 	beq	r20,zero,8051dc <_dtoa_r+0xa0c>
  8051bc:	0580070e 	bge	zero,r22,8051dc <_dtoa_r+0xa0c>
  8051c0:	a005883a 	mov	r2,r20
  8051c4:	b500b916 	blt	r22,r20,8054ac <_dtoa_r+0xcdc>
  8051c8:	d9000817 	ldw	r4,32(sp)
  8051cc:	a0a9c83a 	sub	r20,r20,r2
  8051d0:	b0adc83a 	sub	r22,r22,r2
  8051d4:	2089c83a 	sub	r4,r4,r2
  8051d8:	d9000815 	stw	r4,32(sp)
  8051dc:	d9800a17 	ldw	r6,40(sp)
  8051e0:	0181810e 	bge	zero,r6,8057e8 <_dtoa_r+0x1018>
  8051e4:	d9c00b17 	ldw	r7,44(sp)
  8051e8:	3800b326 	beq	r7,zero,8054b8 <_dtoa_r+0xce8>
  8051ec:	a800b226 	beq	r21,zero,8054b8 <_dtoa_r+0xce8>
  8051f0:	880b883a 	mov	r5,r17
  8051f4:	a80d883a 	mov	r6,r21
  8051f8:	e009883a 	mov	r4,fp
  8051fc:	0808fd40 	call	808fd4 <__pow5mult>
  805200:	d9800917 	ldw	r6,36(sp)
  805204:	100b883a 	mov	r5,r2
  805208:	e009883a 	mov	r4,fp
  80520c:	1023883a 	mov	r17,r2
  805210:	0808ddc0 	call	808ddc <__multiply>
  805214:	1021883a 	mov	r16,r2
  805218:	d8800a17 	ldw	r2,40(sp)
  80521c:	d9400917 	ldw	r5,36(sp)
  805220:	e009883a 	mov	r4,fp
  805224:	1545c83a 	sub	r2,r2,r21
  805228:	d8800a15 	stw	r2,40(sp)
  80522c:	0808a3c0 	call	808a3c <_Bfree>
  805230:	d8c00a17 	ldw	r3,40(sp)
  805234:	18009f1e 	bne	r3,zero,8054b4 <_dtoa_r+0xce4>
  805238:	05c00044 	movi	r23,1
  80523c:	e009883a 	mov	r4,fp
  805240:	b80b883a 	mov	r5,r23
  805244:	0808da00 	call	808da0 <__i2b>
  805248:	d9000d17 	ldw	r4,52(sp)
  80524c:	102b883a 	mov	r21,r2
  805250:	2000ce26 	beq	r4,zero,80558c <_dtoa_r+0xdbc>
  805254:	200d883a 	mov	r6,r4
  805258:	100b883a 	mov	r5,r2
  80525c:	e009883a 	mov	r4,fp
  805260:	0808fd40 	call	808fd4 <__pow5mult>
  805264:	d9800317 	ldw	r6,12(sp)
  805268:	102b883a 	mov	r21,r2
  80526c:	b981810e 	bge	r23,r6,805874 <_dtoa_r+0x10a4>
  805270:	0027883a 	mov	r19,zero
  805274:	a8800417 	ldw	r2,16(r21)
  805278:	05c00804 	movi	r23,32
  80527c:	10800104 	addi	r2,r2,4
  805280:	1085883a 	add	r2,r2,r2
  805284:	1085883a 	add	r2,r2,r2
  805288:	a885883a 	add	r2,r21,r2
  80528c:	11000017 	ldw	r4,0(r2)
  805290:	0808c880 	call	808c88 <__hi0bits>
  805294:	b885c83a 	sub	r2,r23,r2
  805298:	1585883a 	add	r2,r2,r22
  80529c:	108007cc 	andi	r2,r2,31
  8052a0:	1000b326 	beq	r2,zero,805570 <_dtoa_r+0xda0>
  8052a4:	00c00804 	movi	r3,32
  8052a8:	1887c83a 	sub	r3,r3,r2
  8052ac:	01000104 	movi	r4,4
  8052b0:	20c2cd0e 	bge	r4,r3,805de8 <_dtoa_r+0x1618>
  8052b4:	00c00704 	movi	r3,28
  8052b8:	1885c83a 	sub	r2,r3,r2
  8052bc:	d8c00817 	ldw	r3,32(sp)
  8052c0:	a0a9883a 	add	r20,r20,r2
  8052c4:	b0ad883a 	add	r22,r22,r2
  8052c8:	1887883a 	add	r3,r3,r2
  8052cc:	d8c00815 	stw	r3,32(sp)
  8052d0:	d9800817 	ldw	r6,32(sp)
  8052d4:	0180040e 	bge	zero,r6,8052e8 <_dtoa_r+0xb18>
  8052d8:	800b883a 	mov	r5,r16
  8052dc:	e009883a 	mov	r4,fp
  8052e0:	08091140 	call	809114 <__lshift>
  8052e4:	1021883a 	mov	r16,r2
  8052e8:	0580050e 	bge	zero,r22,805300 <_dtoa_r+0xb30>
  8052ec:	a80b883a 	mov	r5,r21
  8052f0:	b00d883a 	mov	r6,r22
  8052f4:	e009883a 	mov	r4,fp
  8052f8:	08091140 	call	809114 <__lshift>
  8052fc:	102b883a 	mov	r21,r2
  805300:	d9c00e17 	ldw	r7,56(sp)
  805304:	3801211e 	bne	r7,zero,80578c <_dtoa_r+0xfbc>
  805308:	d9800617 	ldw	r6,24(sp)
  80530c:	0181380e 	bge	zero,r6,8057f0 <_dtoa_r+0x1020>
  805310:	d8c00b17 	ldw	r3,44(sp)
  805314:	1800ab1e 	bne	r3,zero,8055c4 <_dtoa_r+0xdf4>
  805318:	dc800717 	ldw	r18,28(sp)
  80531c:	dcc00617 	ldw	r19,24(sp)
  805320:	9029883a 	mov	r20,r18
  805324:	00000206 	br	805330 <_dtoa_r+0xb60>
  805328:	0808a640 	call	808a64 <__multadd>
  80532c:	1021883a 	mov	r16,r2
  805330:	a80b883a 	mov	r5,r21
  805334:	8009883a 	mov	r4,r16
  805338:	08045d00 	call	8045d0 <quorem>
  80533c:	10800c04 	addi	r2,r2,48
  805340:	90800005 	stb	r2,0(r18)
  805344:	94800044 	addi	r18,r18,1
  805348:	9507c83a 	sub	r3,r18,r20
  80534c:	000f883a 	mov	r7,zero
  805350:	01800284 	movi	r6,10
  805354:	800b883a 	mov	r5,r16
  805358:	e009883a 	mov	r4,fp
  80535c:	1cfff216 	blt	r3,r19,805328 <__alt_data_end+0xff805328>
  805360:	1011883a 	mov	r8,r2
  805364:	d8800617 	ldw	r2,24(sp)
  805368:	0082370e 	bge	zero,r2,805c48 <_dtoa_r+0x1478>
  80536c:	d9000717 	ldw	r4,28(sp)
  805370:	0025883a 	mov	r18,zero
  805374:	20af883a 	add	r23,r4,r2
  805378:	01800044 	movi	r6,1
  80537c:	800b883a 	mov	r5,r16
  805380:	e009883a 	mov	r4,fp
  805384:	da001715 	stw	r8,92(sp)
  805388:	08091140 	call	809114 <__lshift>
  80538c:	a80b883a 	mov	r5,r21
  805390:	1009883a 	mov	r4,r2
  805394:	d8800915 	stw	r2,36(sp)
  805398:	080925c0 	call	80925c <__mcmp>
  80539c:	da001717 	ldw	r8,92(sp)
  8053a0:	0081800e 	bge	zero,r2,8059a4 <_dtoa_r+0x11d4>
  8053a4:	b93fffc3 	ldbu	r4,-1(r23)
  8053a8:	b8bfffc4 	addi	r2,r23,-1
  8053ac:	1007883a 	mov	r3,r2
  8053b0:	01800e44 	movi	r6,57
  8053b4:	d9c00717 	ldw	r7,28(sp)
  8053b8:	00000506 	br	8053d0 <_dtoa_r+0xc00>
  8053bc:	18ffffc4 	addi	r3,r3,-1
  8053c0:	11c12326 	beq	r2,r7,805850 <_dtoa_r+0x1080>
  8053c4:	19000003 	ldbu	r4,0(r3)
  8053c8:	102f883a 	mov	r23,r2
  8053cc:	10bfffc4 	addi	r2,r2,-1
  8053d0:	21403fcc 	andi	r5,r4,255
  8053d4:	2940201c 	xori	r5,r5,128
  8053d8:	297fe004 	addi	r5,r5,-128
  8053dc:	29bff726 	beq	r5,r6,8053bc <__alt_data_end+0xff8053bc>
  8053e0:	21000044 	addi	r4,r4,1
  8053e4:	11000005 	stb	r4,0(r2)
  8053e8:	a80b883a 	mov	r5,r21
  8053ec:	e009883a 	mov	r4,fp
  8053f0:	0808a3c0 	call	808a3c <_Bfree>
  8053f4:	883ea026 	beq	r17,zero,804e78 <__alt_data_end+0xff804e78>
  8053f8:	90000426 	beq	r18,zero,80540c <_dtoa_r+0xc3c>
  8053fc:	94400326 	beq	r18,r17,80540c <_dtoa_r+0xc3c>
  805400:	900b883a 	mov	r5,r18
  805404:	e009883a 	mov	r4,fp
  805408:	0808a3c0 	call	808a3c <_Bfree>
  80540c:	880b883a 	mov	r5,r17
  805410:	e009883a 	mov	r4,fp
  805414:	0808a3c0 	call	808a3c <_Bfree>
  805418:	003e9706 	br	804e78 <__alt_data_end+0xff804e78>
  80541c:	01800044 	movi	r6,1
  805420:	d9800e15 	stw	r6,56(sp)
  805424:	003d9606 	br	804a80 <__alt_data_end+0xff804a80>
  805428:	d8800817 	ldw	r2,32(sp)
  80542c:	d8c00517 	ldw	r3,20(sp)
  805430:	d8000d15 	stw	zero,52(sp)
  805434:	10c5c83a 	sub	r2,r2,r3
  805438:	00c9c83a 	sub	r4,zero,r3
  80543c:	d8800815 	stw	r2,32(sp)
  805440:	d9000a15 	stw	r4,40(sp)
  805444:	003d9706 	br	804aa4 <__alt_data_end+0xff804aa4>
  805448:	05adc83a 	sub	r22,zero,r22
  80544c:	dd800815 	stw	r22,32(sp)
  805450:	002d883a 	mov	r22,zero
  805454:	003d8e06 	br	804a90 <__alt_data_end+0xff804a90>
  805458:	d9000517 	ldw	r4,20(sp)
  80545c:	080e3000 	call	80e300 <__floatsidf>
  805460:	100d883a 	mov	r6,r2
  805464:	180f883a 	mov	r7,r3
  805468:	a009883a 	mov	r4,r20
  80546c:	880b883a 	mov	r5,r17
  805470:	080d72c0 	call	80d72c <__eqdf2>
  805474:	103d7126 	beq	r2,zero,804a3c <__alt_data_end+0xff804a3c>
  805478:	d9c00517 	ldw	r7,20(sp)
  80547c:	39ffffc4 	addi	r7,r7,-1
  805480:	d9c00515 	stw	r7,20(sp)
  805484:	003d6d06 	br	804a3c <__alt_data_end+0xff804a3c>
  805488:	dd400a17 	ldw	r21,40(sp)
  80548c:	dd000817 	ldw	r20,32(sp)
  805490:	0023883a 	mov	r17,zero
  805494:	003f4806 	br	8051b8 <__alt_data_end+0xff8051b8>
  805498:	10e3c83a 	sub	r17,r2,r3
  80549c:	9448983a 	sll	r4,r18,r17
  8054a0:	003d3206 	br	80496c <__alt_data_end+0xff80496c>
  8054a4:	d8000e15 	stw	zero,56(sp)
  8054a8:	003d7506 	br	804a80 <__alt_data_end+0xff804a80>
  8054ac:	b005883a 	mov	r2,r22
  8054b0:	003f4506 	br	8051c8 <__alt_data_end+0xff8051c8>
  8054b4:	dc000915 	stw	r16,36(sp)
  8054b8:	d9800a17 	ldw	r6,40(sp)
  8054bc:	d9400917 	ldw	r5,36(sp)
  8054c0:	e009883a 	mov	r4,fp
  8054c4:	0808fd40 	call	808fd4 <__pow5mult>
  8054c8:	1021883a 	mov	r16,r2
  8054cc:	003f5a06 	br	805238 <__alt_data_end+0xff805238>
  8054d0:	01c00044 	movi	r7,1
  8054d4:	d9c00b15 	stw	r7,44(sp)
  8054d8:	d8802217 	ldw	r2,136(sp)
  8054dc:	0081280e 	bge	zero,r2,805980 <_dtoa_r+0x11b0>
  8054e0:	100d883a 	mov	r6,r2
  8054e4:	1021883a 	mov	r16,r2
  8054e8:	d8800c15 	stw	r2,48(sp)
  8054ec:	d8800615 	stw	r2,24(sp)
  8054f0:	003d8806 	br	804b14 <__alt_data_end+0xff804b14>
  8054f4:	d8800617 	ldw	r2,24(sp)
  8054f8:	00be9b16 	blt	zero,r2,804f68 <__alt_data_end+0xff804f68>
  8054fc:	10010f1e 	bne	r2,zero,80593c <_dtoa_r+0x116c>
  805500:	880b883a 	mov	r5,r17
  805504:	000d883a 	mov	r6,zero
  805508:	01d00534 	movhi	r7,16404
  80550c:	8009883a 	mov	r4,r16
  805510:	08013200 	call	801320 <__muldf3>
  805514:	900d883a 	mov	r6,r18
  805518:	980f883a 	mov	r7,r19
  80551c:	1009883a 	mov	r4,r2
  805520:	180b883a 	mov	r5,r3
  805524:	080d7b40 	call	80d7b4 <__gedf2>
  805528:	002b883a 	mov	r21,zero
  80552c:	0023883a 	mov	r17,zero
  805530:	1000bf16 	blt	r2,zero,805830 <_dtoa_r+0x1060>
  805534:	d9802217 	ldw	r6,136(sp)
  805538:	ddc00717 	ldw	r23,28(sp)
  80553c:	018c303a 	nor	r6,zero,r6
  805540:	d9800515 	stw	r6,20(sp)
  805544:	a80b883a 	mov	r5,r21
  805548:	e009883a 	mov	r4,fp
  80554c:	0808a3c0 	call	808a3c <_Bfree>
  805550:	883e4926 	beq	r17,zero,804e78 <__alt_data_end+0xff804e78>
  805554:	003fad06 	br	80540c <__alt_data_end+0xff80540c>
  805558:	d9c01117 	ldw	r7,68(sp)
  80555c:	3801bc26 	beq	r7,zero,805c50 <_dtoa_r+0x1480>
  805560:	10810cc4 	addi	r2,r2,1075
  805564:	dd400a17 	ldw	r21,40(sp)
  805568:	dd000817 	ldw	r20,32(sp)
  80556c:	003f0a06 	br	805198 <__alt_data_end+0xff805198>
  805570:	00800704 	movi	r2,28
  805574:	d9000817 	ldw	r4,32(sp)
  805578:	a0a9883a 	add	r20,r20,r2
  80557c:	b0ad883a 	add	r22,r22,r2
  805580:	2089883a 	add	r4,r4,r2
  805584:	d9000815 	stw	r4,32(sp)
  805588:	003f5106 	br	8052d0 <__alt_data_end+0xff8052d0>
  80558c:	d8c00317 	ldw	r3,12(sp)
  805590:	b8c1fc0e 	bge	r23,r3,805d84 <_dtoa_r+0x15b4>
  805594:	0027883a 	mov	r19,zero
  805598:	b805883a 	mov	r2,r23
  80559c:	003f3e06 	br	805298 <__alt_data_end+0xff805298>
  8055a0:	880b883a 	mov	r5,r17
  8055a4:	e009883a 	mov	r4,fp
  8055a8:	000f883a 	mov	r7,zero
  8055ac:	01800284 	movi	r6,10
  8055b0:	0808a640 	call	808a64 <__multadd>
  8055b4:	d9000c17 	ldw	r4,48(sp)
  8055b8:	1023883a 	mov	r17,r2
  8055bc:	0102040e 	bge	zero,r4,805dd0 <_dtoa_r+0x1600>
  8055c0:	d9000615 	stw	r4,24(sp)
  8055c4:	0500050e 	bge	zero,r20,8055dc <_dtoa_r+0xe0c>
  8055c8:	880b883a 	mov	r5,r17
  8055cc:	a00d883a 	mov	r6,r20
  8055d0:	e009883a 	mov	r4,fp
  8055d4:	08091140 	call	809114 <__lshift>
  8055d8:	1023883a 	mov	r17,r2
  8055dc:	9801241e 	bne	r19,zero,805a70 <_dtoa_r+0x12a0>
  8055e0:	8829883a 	mov	r20,r17
  8055e4:	d9000617 	ldw	r4,24(sp)
  8055e8:	dcc00717 	ldw	r19,28(sp)
  8055ec:	9480004c 	andi	r18,r18,1
  8055f0:	20bfffc4 	addi	r2,r4,-1
  8055f4:	9885883a 	add	r2,r19,r2
  8055f8:	d8800415 	stw	r2,16(sp)
  8055fc:	dc800615 	stw	r18,24(sp)
  805600:	a80b883a 	mov	r5,r21
  805604:	8009883a 	mov	r4,r16
  805608:	08045d00 	call	8045d0 <quorem>
  80560c:	880b883a 	mov	r5,r17
  805610:	8009883a 	mov	r4,r16
  805614:	102f883a 	mov	r23,r2
  805618:	080925c0 	call	80925c <__mcmp>
  80561c:	a80b883a 	mov	r5,r21
  805620:	a00d883a 	mov	r6,r20
  805624:	e009883a 	mov	r4,fp
  805628:	102d883a 	mov	r22,r2
  80562c:	08092bc0 	call	8092bc <__mdiff>
  805630:	1007883a 	mov	r3,r2
  805634:	10800317 	ldw	r2,12(r2)
  805638:	bc800c04 	addi	r18,r23,48
  80563c:	180b883a 	mov	r5,r3
  805640:	10004e1e 	bne	r2,zero,80577c <_dtoa_r+0xfac>
  805644:	8009883a 	mov	r4,r16
  805648:	d8c01615 	stw	r3,88(sp)
  80564c:	080925c0 	call	80925c <__mcmp>
  805650:	d8c01617 	ldw	r3,88(sp)
  805654:	e009883a 	mov	r4,fp
  805658:	d8801615 	stw	r2,88(sp)
  80565c:	180b883a 	mov	r5,r3
  805660:	0808a3c0 	call	808a3c <_Bfree>
  805664:	d8801617 	ldw	r2,88(sp)
  805668:	1000041e 	bne	r2,zero,80567c <_dtoa_r+0xeac>
  80566c:	d9800317 	ldw	r6,12(sp)
  805670:	3000021e 	bne	r6,zero,80567c <_dtoa_r+0xeac>
  805674:	d8c00617 	ldw	r3,24(sp)
  805678:	18003726 	beq	r3,zero,805758 <_dtoa_r+0xf88>
  80567c:	b0002016 	blt	r22,zero,805700 <_dtoa_r+0xf30>
  805680:	b000041e 	bne	r22,zero,805694 <_dtoa_r+0xec4>
  805684:	d9000317 	ldw	r4,12(sp)
  805688:	2000021e 	bne	r4,zero,805694 <_dtoa_r+0xec4>
  80568c:	d8c00617 	ldw	r3,24(sp)
  805690:	18001b26 	beq	r3,zero,805700 <_dtoa_r+0xf30>
  805694:	00810716 	blt	zero,r2,805ab4 <_dtoa_r+0x12e4>
  805698:	d8c00417 	ldw	r3,16(sp)
  80569c:	9d800044 	addi	r22,r19,1
  8056a0:	9c800005 	stb	r18,0(r19)
  8056a4:	b02f883a 	mov	r23,r22
  8056a8:	98c10626 	beq	r19,r3,805ac4 <_dtoa_r+0x12f4>
  8056ac:	800b883a 	mov	r5,r16
  8056b0:	000f883a 	mov	r7,zero
  8056b4:	01800284 	movi	r6,10
  8056b8:	e009883a 	mov	r4,fp
  8056bc:	0808a640 	call	808a64 <__multadd>
  8056c0:	1021883a 	mov	r16,r2
  8056c4:	000f883a 	mov	r7,zero
  8056c8:	01800284 	movi	r6,10
  8056cc:	880b883a 	mov	r5,r17
  8056d0:	e009883a 	mov	r4,fp
  8056d4:	8d002526 	beq	r17,r20,80576c <_dtoa_r+0xf9c>
  8056d8:	0808a640 	call	808a64 <__multadd>
  8056dc:	a00b883a 	mov	r5,r20
  8056e0:	000f883a 	mov	r7,zero
  8056e4:	01800284 	movi	r6,10
  8056e8:	e009883a 	mov	r4,fp
  8056ec:	1023883a 	mov	r17,r2
  8056f0:	0808a640 	call	808a64 <__multadd>
  8056f4:	1029883a 	mov	r20,r2
  8056f8:	b027883a 	mov	r19,r22
  8056fc:	003fc006 	br	805600 <__alt_data_end+0xff805600>
  805700:	9011883a 	mov	r8,r18
  805704:	00800e0e 	bge	zero,r2,805740 <_dtoa_r+0xf70>
  805708:	800b883a 	mov	r5,r16
  80570c:	01800044 	movi	r6,1
  805710:	e009883a 	mov	r4,fp
  805714:	da001715 	stw	r8,92(sp)
  805718:	08091140 	call	809114 <__lshift>
  80571c:	a80b883a 	mov	r5,r21
  805720:	1009883a 	mov	r4,r2
  805724:	1021883a 	mov	r16,r2
  805728:	080925c0 	call	80925c <__mcmp>
  80572c:	da001717 	ldw	r8,92(sp)
  805730:	0081960e 	bge	zero,r2,805d8c <_dtoa_r+0x15bc>
  805734:	00800e44 	movi	r2,57
  805738:	40817026 	beq	r8,r2,805cfc <_dtoa_r+0x152c>
  80573c:	ba000c44 	addi	r8,r23,49
  805740:	8825883a 	mov	r18,r17
  805744:	9dc00044 	addi	r23,r19,1
  805748:	9a000005 	stb	r8,0(r19)
  80574c:	a023883a 	mov	r17,r20
  805750:	dc000915 	stw	r16,36(sp)
  805754:	003f2406 	br	8053e8 <__alt_data_end+0xff8053e8>
  805758:	00800e44 	movi	r2,57
  80575c:	9011883a 	mov	r8,r18
  805760:	90816626 	beq	r18,r2,805cfc <_dtoa_r+0x152c>
  805764:	05bff516 	blt	zero,r22,80573c <__alt_data_end+0xff80573c>
  805768:	003ff506 	br	805740 <__alt_data_end+0xff805740>
  80576c:	0808a640 	call	808a64 <__multadd>
  805770:	1023883a 	mov	r17,r2
  805774:	1029883a 	mov	r20,r2
  805778:	003fdf06 	br	8056f8 <__alt_data_end+0xff8056f8>
  80577c:	e009883a 	mov	r4,fp
  805780:	0808a3c0 	call	808a3c <_Bfree>
  805784:	00800044 	movi	r2,1
  805788:	003fbc06 	br	80567c <__alt_data_end+0xff80567c>
  80578c:	a80b883a 	mov	r5,r21
  805790:	8009883a 	mov	r4,r16
  805794:	080925c0 	call	80925c <__mcmp>
  805798:	103edb0e 	bge	r2,zero,805308 <__alt_data_end+0xff805308>
  80579c:	800b883a 	mov	r5,r16
  8057a0:	000f883a 	mov	r7,zero
  8057a4:	01800284 	movi	r6,10
  8057a8:	e009883a 	mov	r4,fp
  8057ac:	0808a640 	call	808a64 <__multadd>
  8057b0:	1021883a 	mov	r16,r2
  8057b4:	d8800517 	ldw	r2,20(sp)
  8057b8:	d8c00b17 	ldw	r3,44(sp)
  8057bc:	10bfffc4 	addi	r2,r2,-1
  8057c0:	d8800515 	stw	r2,20(sp)
  8057c4:	183f761e 	bne	r3,zero,8055a0 <__alt_data_end+0xff8055a0>
  8057c8:	d9000c17 	ldw	r4,48(sp)
  8057cc:	0101730e 	bge	zero,r4,805d9c <_dtoa_r+0x15cc>
  8057d0:	d9000615 	stw	r4,24(sp)
  8057d4:	003ed006 	br	805318 <__alt_data_end+0xff805318>
  8057d8:	00800084 	movi	r2,2
  8057dc:	3081861e 	bne	r6,r2,805df8 <_dtoa_r+0x1628>
  8057e0:	d8000b15 	stw	zero,44(sp)
  8057e4:	003f3c06 	br	8054d8 <__alt_data_end+0xff8054d8>
  8057e8:	dc000917 	ldw	r16,36(sp)
  8057ec:	003e9206 	br	805238 <__alt_data_end+0xff805238>
  8057f0:	d9c00317 	ldw	r7,12(sp)
  8057f4:	00800084 	movi	r2,2
  8057f8:	11fec50e 	bge	r2,r7,805310 <__alt_data_end+0xff805310>
  8057fc:	d9000617 	ldw	r4,24(sp)
  805800:	20013c1e 	bne	r4,zero,805cf4 <_dtoa_r+0x1524>
  805804:	a80b883a 	mov	r5,r21
  805808:	000f883a 	mov	r7,zero
  80580c:	01800144 	movi	r6,5
  805810:	e009883a 	mov	r4,fp
  805814:	0808a640 	call	808a64 <__multadd>
  805818:	100b883a 	mov	r5,r2
  80581c:	8009883a 	mov	r4,r16
  805820:	102b883a 	mov	r21,r2
  805824:	080925c0 	call	80925c <__mcmp>
  805828:	dc000915 	stw	r16,36(sp)
  80582c:	00bf410e 	bge	zero,r2,805534 <__alt_data_end+0xff805534>
  805830:	d9c00717 	ldw	r7,28(sp)
  805834:	00800c44 	movi	r2,49
  805838:	38800005 	stb	r2,0(r7)
  80583c:	d8800517 	ldw	r2,20(sp)
  805840:	3dc00044 	addi	r23,r7,1
  805844:	10800044 	addi	r2,r2,1
  805848:	d8800515 	stw	r2,20(sp)
  80584c:	003f3d06 	br	805544 <__alt_data_end+0xff805544>
  805850:	d9800517 	ldw	r6,20(sp)
  805854:	d9c00717 	ldw	r7,28(sp)
  805858:	00800c44 	movi	r2,49
  80585c:	31800044 	addi	r6,r6,1
  805860:	d9800515 	stw	r6,20(sp)
  805864:	38800005 	stb	r2,0(r7)
  805868:	003edf06 	br	8053e8 <__alt_data_end+0xff8053e8>
  80586c:	d8000b15 	stw	zero,44(sp)
  805870:	003c9f06 	br	804af0 <__alt_data_end+0xff804af0>
  805874:	903e7e1e 	bne	r18,zero,805270 <__alt_data_end+0xff805270>
  805878:	00800434 	movhi	r2,16
  80587c:	10bfffc4 	addi	r2,r2,-1
  805880:	9884703a 	and	r2,r19,r2
  805884:	1000ea1e 	bne	r2,zero,805c30 <_dtoa_r+0x1460>
  805888:	9cdffc2c 	andhi	r19,r19,32752
  80588c:	9800e826 	beq	r19,zero,805c30 <_dtoa_r+0x1460>
  805890:	d9c00817 	ldw	r7,32(sp)
  805894:	b5800044 	addi	r22,r22,1
  805898:	04c00044 	movi	r19,1
  80589c:	39c00044 	addi	r7,r7,1
  8058a0:	d9c00815 	stw	r7,32(sp)
  8058a4:	d8800d17 	ldw	r2,52(sp)
  8058a8:	103e721e 	bne	r2,zero,805274 <__alt_data_end+0xff805274>
  8058ac:	00800044 	movi	r2,1
  8058b0:	003e7906 	br	805298 <__alt_data_end+0xff805298>
  8058b4:	8009883a 	mov	r4,r16
  8058b8:	080e3000 	call	80e300 <__floatsidf>
  8058bc:	d9800f17 	ldw	r6,60(sp)
  8058c0:	d9c01017 	ldw	r7,64(sp)
  8058c4:	1009883a 	mov	r4,r2
  8058c8:	180b883a 	mov	r5,r3
  8058cc:	08013200 	call	801320 <__muldf3>
  8058d0:	000d883a 	mov	r6,zero
  8058d4:	01d00734 	movhi	r7,16412
  8058d8:	1009883a 	mov	r4,r2
  8058dc:	180b883a 	mov	r5,r3
  8058e0:	0800a740 	call	800a74 <__adddf3>
  8058e4:	047f3034 	movhi	r17,64704
  8058e8:	1021883a 	mov	r16,r2
  8058ec:	1c63883a 	add	r17,r3,r17
  8058f0:	d9000f17 	ldw	r4,60(sp)
  8058f4:	d9401017 	ldw	r5,64(sp)
  8058f8:	000d883a 	mov	r6,zero
  8058fc:	01d00534 	movhi	r7,16404
  805900:	080d9840 	call	80d984 <__subdf3>
  805904:	800d883a 	mov	r6,r16
  805908:	880f883a 	mov	r7,r17
  80590c:	1009883a 	mov	r4,r2
  805910:	180b883a 	mov	r5,r3
  805914:	102b883a 	mov	r21,r2
  805918:	1829883a 	mov	r20,r3
  80591c:	080d7b40 	call	80d7b4 <__gedf2>
  805920:	00806c16 	blt	zero,r2,805ad4 <_dtoa_r+0x1304>
  805924:	89e0003c 	xorhi	r7,r17,32768
  805928:	800d883a 	mov	r6,r16
  80592c:	a809883a 	mov	r4,r21
  805930:	a00b883a 	mov	r5,r20
  805934:	080d8900 	call	80d890 <__ledf2>
  805938:	103d7e0e 	bge	r2,zero,804f34 <__alt_data_end+0xff804f34>
  80593c:	002b883a 	mov	r21,zero
  805940:	0023883a 	mov	r17,zero
  805944:	003efb06 	br	805534 <__alt_data_end+0xff805534>
  805948:	d8800717 	ldw	r2,28(sp)
  80594c:	003bd006 	br	804890 <__alt_data_end+0xff804890>
  805950:	d9000a17 	ldw	r4,40(sp)
  805954:	d9800d17 	ldw	r6,52(sp)
  805958:	dd400a15 	stw	r21,40(sp)
  80595c:	a905c83a 	sub	r2,r21,r4
  805960:	308d883a 	add	r6,r6,r2
  805964:	d9800d15 	stw	r6,52(sp)
  805968:	002b883a 	mov	r21,zero
  80596c:	003e0606 	br	805188 <__alt_data_end+0xff805188>
  805970:	9023883a 	mov	r17,r18
  805974:	9829883a 	mov	r20,r19
  805978:	04000084 	movi	r16,2
  80597c:	003c9206 	br	804bc8 <__alt_data_end+0xff804bc8>
  805980:	04000044 	movi	r16,1
  805984:	dc000c15 	stw	r16,48(sp)
  805988:	dc000615 	stw	r16,24(sp)
  80598c:	dc002215 	stw	r16,136(sp)
  805990:	e0001115 	stw	zero,68(fp)
  805994:	000b883a 	mov	r5,zero
  805998:	003c6906 	br	804b40 <__alt_data_end+0xff804b40>
  80599c:	3021883a 	mov	r16,r6
  8059a0:	003ffb06 	br	805990 <__alt_data_end+0xff805990>
  8059a4:	1000021e 	bne	r2,zero,8059b0 <_dtoa_r+0x11e0>
  8059a8:	4200004c 	andi	r8,r8,1
  8059ac:	403e7d1e 	bne	r8,zero,8053a4 <__alt_data_end+0xff8053a4>
  8059b0:	01000c04 	movi	r4,48
  8059b4:	00000106 	br	8059bc <_dtoa_r+0x11ec>
  8059b8:	102f883a 	mov	r23,r2
  8059bc:	b8bfffc4 	addi	r2,r23,-1
  8059c0:	10c00007 	ldb	r3,0(r2)
  8059c4:	193ffc26 	beq	r3,r4,8059b8 <__alt_data_end+0xff8059b8>
  8059c8:	003e8706 	br	8053e8 <__alt_data_end+0xff8053e8>
  8059cc:	d8800517 	ldw	r2,20(sp)
  8059d0:	00a3c83a 	sub	r17,zero,r2
  8059d4:	8800a426 	beq	r17,zero,805c68 <_dtoa_r+0x1498>
  8059d8:	888003cc 	andi	r2,r17,15
  8059dc:	100490fa 	slli	r2,r2,3
  8059e0:	00c02074 	movhi	r3,129
  8059e4:	18c3a604 	addi	r3,r3,3736
  8059e8:	1885883a 	add	r2,r3,r2
  8059ec:	11800017 	ldw	r6,0(r2)
  8059f0:	11c00117 	ldw	r7,4(r2)
  8059f4:	9009883a 	mov	r4,r18
  8059f8:	980b883a 	mov	r5,r19
  8059fc:	8823d13a 	srai	r17,r17,4
  805a00:	08013200 	call	801320 <__muldf3>
  805a04:	d8800f15 	stw	r2,60(sp)
  805a08:	d8c01015 	stw	r3,64(sp)
  805a0c:	8800e826 	beq	r17,zero,805db0 <_dtoa_r+0x15e0>
  805a10:	05002074 	movhi	r20,129
  805a14:	a5039c04 	addi	r20,r20,3696
  805a18:	04000084 	movi	r16,2
  805a1c:	8980004c 	andi	r6,r17,1
  805a20:	1009883a 	mov	r4,r2
  805a24:	8823d07a 	srai	r17,r17,1
  805a28:	180b883a 	mov	r5,r3
  805a2c:	30000426 	beq	r6,zero,805a40 <_dtoa_r+0x1270>
  805a30:	a1800017 	ldw	r6,0(r20)
  805a34:	a1c00117 	ldw	r7,4(r20)
  805a38:	84000044 	addi	r16,r16,1
  805a3c:	08013200 	call	801320 <__muldf3>
  805a40:	a5000204 	addi	r20,r20,8
  805a44:	883ff51e 	bne	r17,zero,805a1c <__alt_data_end+0xff805a1c>
  805a48:	d8800f15 	stw	r2,60(sp)
  805a4c:	d8c01015 	stw	r3,64(sp)
  805a50:	003c7606 	br	804c2c <__alt_data_end+0xff804c2c>
  805a54:	00c00c04 	movi	r3,48
  805a58:	10c00005 	stb	r3,0(r2)
  805a5c:	d8c00517 	ldw	r3,20(sp)
  805a60:	bd3fffc3 	ldbu	r20,-1(r23)
  805a64:	18c00044 	addi	r3,r3,1
  805a68:	d8c00515 	stw	r3,20(sp)
  805a6c:	003db906 	br	805154 <__alt_data_end+0xff805154>
  805a70:	89400117 	ldw	r5,4(r17)
  805a74:	e009883a 	mov	r4,fp
  805a78:	08089940 	call	808994 <_Balloc>
  805a7c:	89800417 	ldw	r6,16(r17)
  805a80:	89400304 	addi	r5,r17,12
  805a84:	11000304 	addi	r4,r2,12
  805a88:	31800084 	addi	r6,r6,2
  805a8c:	318d883a 	add	r6,r6,r6
  805a90:	318d883a 	add	r6,r6,r6
  805a94:	1027883a 	mov	r19,r2
  805a98:	08085c80 	call	8085c8 <memcpy>
  805a9c:	01800044 	movi	r6,1
  805aa0:	980b883a 	mov	r5,r19
  805aa4:	e009883a 	mov	r4,fp
  805aa8:	08091140 	call	809114 <__lshift>
  805aac:	1029883a 	mov	r20,r2
  805ab0:	003ecc06 	br	8055e4 <__alt_data_end+0xff8055e4>
  805ab4:	00800e44 	movi	r2,57
  805ab8:	90809026 	beq	r18,r2,805cfc <_dtoa_r+0x152c>
  805abc:	92000044 	addi	r8,r18,1
  805ac0:	003f1f06 	br	805740 <__alt_data_end+0xff805740>
  805ac4:	9011883a 	mov	r8,r18
  805ac8:	8825883a 	mov	r18,r17
  805acc:	a023883a 	mov	r17,r20
  805ad0:	003e2906 	br	805378 <__alt_data_end+0xff805378>
  805ad4:	002b883a 	mov	r21,zero
  805ad8:	0023883a 	mov	r17,zero
  805adc:	003f5406 	br	805830 <__alt_data_end+0xff805830>
  805ae0:	61bfffc4 	addi	r6,r12,-1
  805ae4:	300490fa 	slli	r2,r6,3
  805ae8:	00c02074 	movhi	r3,129
  805aec:	18c3a604 	addi	r3,r3,3736
  805af0:	1885883a 	add	r2,r3,r2
  805af4:	11000017 	ldw	r4,0(r2)
  805af8:	11400117 	ldw	r5,4(r2)
  805afc:	d8800717 	ldw	r2,28(sp)
  805b00:	880f883a 	mov	r7,r17
  805b04:	d9801215 	stw	r6,72(sp)
  805b08:	800d883a 	mov	r6,r16
  805b0c:	db001615 	stw	r12,88(sp)
  805b10:	15c00044 	addi	r23,r2,1
  805b14:	08013200 	call	801320 <__muldf3>
  805b18:	d9401017 	ldw	r5,64(sp)
  805b1c:	d9000f17 	ldw	r4,60(sp)
  805b20:	d8c01515 	stw	r3,84(sp)
  805b24:	d8801415 	stw	r2,80(sp)
  805b28:	080e2800 	call	80e280 <__fixdfsi>
  805b2c:	1009883a 	mov	r4,r2
  805b30:	1021883a 	mov	r16,r2
  805b34:	080e3000 	call	80e300 <__floatsidf>
  805b38:	d9000f17 	ldw	r4,60(sp)
  805b3c:	d9401017 	ldw	r5,64(sp)
  805b40:	100d883a 	mov	r6,r2
  805b44:	180f883a 	mov	r7,r3
  805b48:	080d9840 	call	80d984 <__subdf3>
  805b4c:	1829883a 	mov	r20,r3
  805b50:	d8c00717 	ldw	r3,28(sp)
  805b54:	84000c04 	addi	r16,r16,48
  805b58:	1023883a 	mov	r17,r2
  805b5c:	1c000005 	stb	r16,0(r3)
  805b60:	db001617 	ldw	r12,88(sp)
  805b64:	00800044 	movi	r2,1
  805b68:	60802226 	beq	r12,r2,805bf4 <_dtoa_r+0x1424>
  805b6c:	d9c00717 	ldw	r7,28(sp)
  805b70:	8805883a 	mov	r2,r17
  805b74:	b82b883a 	mov	r21,r23
  805b78:	3b19883a 	add	r12,r7,r12
  805b7c:	6023883a 	mov	r17,r12
  805b80:	a007883a 	mov	r3,r20
  805b84:	dc800f15 	stw	r18,60(sp)
  805b88:	000d883a 	mov	r6,zero
  805b8c:	01d00934 	movhi	r7,16420
  805b90:	1009883a 	mov	r4,r2
  805b94:	180b883a 	mov	r5,r3
  805b98:	08013200 	call	801320 <__muldf3>
  805b9c:	180b883a 	mov	r5,r3
  805ba0:	1009883a 	mov	r4,r2
  805ba4:	1829883a 	mov	r20,r3
  805ba8:	1025883a 	mov	r18,r2
  805bac:	080e2800 	call	80e280 <__fixdfsi>
  805bb0:	1009883a 	mov	r4,r2
  805bb4:	1021883a 	mov	r16,r2
  805bb8:	080e3000 	call	80e300 <__floatsidf>
  805bbc:	100d883a 	mov	r6,r2
  805bc0:	180f883a 	mov	r7,r3
  805bc4:	9009883a 	mov	r4,r18
  805bc8:	a00b883a 	mov	r5,r20
  805bcc:	84000c04 	addi	r16,r16,48
  805bd0:	080d9840 	call	80d984 <__subdf3>
  805bd4:	ad400044 	addi	r21,r21,1
  805bd8:	ac3fffc5 	stb	r16,-1(r21)
  805bdc:	ac7fea1e 	bne	r21,r17,805b88 <__alt_data_end+0xff805b88>
  805be0:	1023883a 	mov	r17,r2
  805be4:	d8801217 	ldw	r2,72(sp)
  805be8:	dc800f17 	ldw	r18,60(sp)
  805bec:	1829883a 	mov	r20,r3
  805bf0:	b8af883a 	add	r23,r23,r2
  805bf4:	d9001417 	ldw	r4,80(sp)
  805bf8:	d9401517 	ldw	r5,84(sp)
  805bfc:	000d883a 	mov	r6,zero
  805c00:	01cff834 	movhi	r7,16352
  805c04:	0800a740 	call	800a74 <__adddf3>
  805c08:	880d883a 	mov	r6,r17
  805c0c:	a00f883a 	mov	r7,r20
  805c10:	1009883a 	mov	r4,r2
  805c14:	180b883a 	mov	r5,r3
  805c18:	080d8900 	call	80d890 <__ledf2>
  805c1c:	10003e0e 	bge	r2,zero,805d18 <_dtoa_r+0x1548>
  805c20:	d9001317 	ldw	r4,76(sp)
  805c24:	bd3fffc3 	ldbu	r20,-1(r23)
  805c28:	d9000515 	stw	r4,20(sp)
  805c2c:	003d3b06 	br	80511c <__alt_data_end+0xff80511c>
  805c30:	0027883a 	mov	r19,zero
  805c34:	003f1b06 	br	8058a4 <__alt_data_end+0xff8058a4>
  805c38:	d8800817 	ldw	r2,32(sp)
  805c3c:	11e9c83a 	sub	r20,r2,r7
  805c40:	0005883a 	mov	r2,zero
  805c44:	003d5406 	br	805198 <__alt_data_end+0xff805198>
  805c48:	00800044 	movi	r2,1
  805c4c:	003dc706 	br	80536c <__alt_data_end+0xff80536c>
  805c50:	d8c00217 	ldw	r3,8(sp)
  805c54:	00800d84 	movi	r2,54
  805c58:	dd400a17 	ldw	r21,40(sp)
  805c5c:	10c5c83a 	sub	r2,r2,r3
  805c60:	dd000817 	ldw	r20,32(sp)
  805c64:	003d4c06 	br	805198 <__alt_data_end+0xff805198>
  805c68:	dc800f15 	stw	r18,60(sp)
  805c6c:	dcc01015 	stw	r19,64(sp)
  805c70:	04000084 	movi	r16,2
  805c74:	003bed06 	br	804c2c <__alt_data_end+0xff804c2c>
  805c78:	d9000617 	ldw	r4,24(sp)
  805c7c:	203f0d26 	beq	r4,zero,8058b4 <__alt_data_end+0xff8058b4>
  805c80:	d9800c17 	ldw	r6,48(sp)
  805c84:	01bcab0e 	bge	zero,r6,804f34 <__alt_data_end+0xff804f34>
  805c88:	d9401017 	ldw	r5,64(sp)
  805c8c:	d9000f17 	ldw	r4,60(sp)
  805c90:	000d883a 	mov	r6,zero
  805c94:	01d00934 	movhi	r7,16420
  805c98:	08013200 	call	801320 <__muldf3>
  805c9c:	81000044 	addi	r4,r16,1
  805ca0:	d8800f15 	stw	r2,60(sp)
  805ca4:	d8c01015 	stw	r3,64(sp)
  805ca8:	080e3000 	call	80e300 <__floatsidf>
  805cac:	d9800f17 	ldw	r6,60(sp)
  805cb0:	d9c01017 	ldw	r7,64(sp)
  805cb4:	1009883a 	mov	r4,r2
  805cb8:	180b883a 	mov	r5,r3
  805cbc:	08013200 	call	801320 <__muldf3>
  805cc0:	01d00734 	movhi	r7,16412
  805cc4:	000d883a 	mov	r6,zero
  805cc8:	1009883a 	mov	r4,r2
  805ccc:	180b883a 	mov	r5,r3
  805cd0:	0800a740 	call	800a74 <__adddf3>
  805cd4:	d9c00517 	ldw	r7,20(sp)
  805cd8:	047f3034 	movhi	r17,64704
  805cdc:	1021883a 	mov	r16,r2
  805ce0:	39ffffc4 	addi	r7,r7,-1
  805ce4:	d9c01315 	stw	r7,76(sp)
  805ce8:	1c63883a 	add	r17,r3,r17
  805cec:	db000c17 	ldw	r12,48(sp)
  805cf0:	003bea06 	br	804c9c <__alt_data_end+0xff804c9c>
  805cf4:	dc000915 	stw	r16,36(sp)
  805cf8:	003e0e06 	br	805534 <__alt_data_end+0xff805534>
  805cfc:	01000e44 	movi	r4,57
  805d00:	8825883a 	mov	r18,r17
  805d04:	9dc00044 	addi	r23,r19,1
  805d08:	99000005 	stb	r4,0(r19)
  805d0c:	a023883a 	mov	r17,r20
  805d10:	dc000915 	stw	r16,36(sp)
  805d14:	003da406 	br	8053a8 <__alt_data_end+0xff8053a8>
  805d18:	d9801417 	ldw	r6,80(sp)
  805d1c:	d9c01517 	ldw	r7,84(sp)
  805d20:	0009883a 	mov	r4,zero
  805d24:	014ff834 	movhi	r5,16352
  805d28:	080d9840 	call	80d984 <__subdf3>
  805d2c:	880d883a 	mov	r6,r17
  805d30:	a00f883a 	mov	r7,r20
  805d34:	1009883a 	mov	r4,r2
  805d38:	180b883a 	mov	r5,r3
  805d3c:	080d7b40 	call	80d7b4 <__gedf2>
  805d40:	00bc7c0e 	bge	zero,r2,804f34 <__alt_data_end+0xff804f34>
  805d44:	01000c04 	movi	r4,48
  805d48:	00000106 	br	805d50 <_dtoa_r+0x1580>
  805d4c:	102f883a 	mov	r23,r2
  805d50:	b8bfffc4 	addi	r2,r23,-1
  805d54:	10c00007 	ldb	r3,0(r2)
  805d58:	193ffc26 	beq	r3,r4,805d4c <__alt_data_end+0xff805d4c>
  805d5c:	d9801317 	ldw	r6,76(sp)
  805d60:	d9800515 	stw	r6,20(sp)
  805d64:	003c4406 	br	804e78 <__alt_data_end+0xff804e78>
  805d68:	d9801317 	ldw	r6,76(sp)
  805d6c:	d9800515 	stw	r6,20(sp)
  805d70:	003cea06 	br	80511c <__alt_data_end+0xff80511c>
  805d74:	dd800f17 	ldw	r22,60(sp)
  805d78:	dcc01017 	ldw	r19,64(sp)
  805d7c:	dc801217 	ldw	r18,72(sp)
  805d80:	003c6c06 	br	804f34 <__alt_data_end+0xff804f34>
  805d84:	903e031e 	bne	r18,zero,805594 <__alt_data_end+0xff805594>
  805d88:	003ebb06 	br	805878 <__alt_data_end+0xff805878>
  805d8c:	103e6c1e 	bne	r2,zero,805740 <__alt_data_end+0xff805740>
  805d90:	4080004c 	andi	r2,r8,1
  805d94:	103e6a26 	beq	r2,zero,805740 <__alt_data_end+0xff805740>
  805d98:	003e6606 	br	805734 <__alt_data_end+0xff805734>
  805d9c:	d8c00317 	ldw	r3,12(sp)
  805da0:	00800084 	movi	r2,2
  805da4:	10c02916 	blt	r2,r3,805e4c <_dtoa_r+0x167c>
  805da8:	d9000c17 	ldw	r4,48(sp)
  805dac:	003e8806 	br	8057d0 <__alt_data_end+0xff8057d0>
  805db0:	04000084 	movi	r16,2
  805db4:	003b9d06 	br	804c2c <__alt_data_end+0xff804c2c>
  805db8:	d9001317 	ldw	r4,76(sp)
  805dbc:	d9000515 	stw	r4,20(sp)
  805dc0:	003cd606 	br	80511c <__alt_data_end+0xff80511c>
  805dc4:	d8801317 	ldw	r2,76(sp)
  805dc8:	d8800515 	stw	r2,20(sp)
  805dcc:	003c2a06 	br	804e78 <__alt_data_end+0xff804e78>
  805dd0:	d9800317 	ldw	r6,12(sp)
  805dd4:	00800084 	movi	r2,2
  805dd8:	11801516 	blt	r2,r6,805e30 <_dtoa_r+0x1660>
  805ddc:	d9c00c17 	ldw	r7,48(sp)
  805de0:	d9c00615 	stw	r7,24(sp)
  805de4:	003df706 	br	8055c4 <__alt_data_end+0xff8055c4>
  805de8:	193d3926 	beq	r3,r4,8052d0 <__alt_data_end+0xff8052d0>
  805dec:	00c00f04 	movi	r3,60
  805df0:	1885c83a 	sub	r2,r3,r2
  805df4:	003ddf06 	br	805574 <__alt_data_end+0xff805574>
  805df8:	e009883a 	mov	r4,fp
  805dfc:	e0001115 	stw	zero,68(fp)
  805e00:	000b883a 	mov	r5,zero
  805e04:	08089940 	call	808994 <_Balloc>
  805e08:	d8800715 	stw	r2,28(sp)
  805e0c:	d8c00717 	ldw	r3,28(sp)
  805e10:	00bfffc4 	movi	r2,-1
  805e14:	01000044 	movi	r4,1
  805e18:	d8800c15 	stw	r2,48(sp)
  805e1c:	e0c01015 	stw	r3,64(fp)
  805e20:	d9000b15 	stw	r4,44(sp)
  805e24:	d8800615 	stw	r2,24(sp)
  805e28:	d8002215 	stw	zero,136(sp)
  805e2c:	003c4106 	br	804f34 <__alt_data_end+0xff804f34>
  805e30:	d8c00c17 	ldw	r3,48(sp)
  805e34:	d8c00615 	stw	r3,24(sp)
  805e38:	003e7006 	br	8057fc <__alt_data_end+0xff8057fc>
  805e3c:	04400044 	movi	r17,1
  805e40:	003b2006 	br	804ac4 <__alt_data_end+0xff804ac4>
  805e44:	000b883a 	mov	r5,zero
  805e48:	003b3d06 	br	804b40 <__alt_data_end+0xff804b40>
  805e4c:	d8800c17 	ldw	r2,48(sp)
  805e50:	d8800615 	stw	r2,24(sp)
  805e54:	003e6906 	br	8057fc <__alt_data_end+0xff8057fc>

00805e58 <print_e>:
  805e58:	defff504 	addi	sp,sp,-44
  805e5c:	dc400815 	stw	r17,32(sp)
  805e60:	dc400b17 	ldw	r17,44(sp)
  805e64:	dc000715 	stw	r16,28(sp)
  805e68:	2821883a 	mov	r16,r5
  805e6c:	d9400504 	addi	r5,sp,20
  805e70:	d9400315 	stw	r5,12(sp)
  805e74:	300b883a 	mov	r5,r6
  805e78:	d9800604 	addi	r6,sp,24
  805e7c:	3805883a 	mov	r2,r7
  805e80:	88c00044 	addi	r3,r17,1
  805e84:	d9800215 	stw	r6,8(sp)
  805e88:	d9800404 	addi	r6,sp,16
  805e8c:	d9800115 	stw	r6,4(sp)
  805e90:	d8c00015 	stw	r3,0(sp)
  805e94:	01c00084 	movi	r7,2
  805e98:	100d883a 	mov	r6,r2
  805e9c:	dc800915 	stw	r18,36(sp)
  805ea0:	dfc00a15 	stw	ra,40(sp)
  805ea4:	dc800c17 	ldw	r18,48(sp)
  805ea8:	08047d00 	call	8047d0 <_dtoa_r>
  805eac:	d9000417 	ldw	r4,16(sp)
  805eb0:	00c9c3c4 	movi	r3,9999
  805eb4:	20c05826 	beq	r4,r3,806018 <print_e+0x1c0>
  805eb8:	10c00003 	ldbu	r3,0(r2)
  805ebc:	900f883a 	mov	r7,r18
  805ec0:	80c00005 	stb	r3,0(r16)
  805ec4:	d8c00d17 	ldw	r3,52(sp)
  805ec8:	18004526 	beq	r3,zero,805fe0 <print_e+0x188>
  805ecc:	00c00b84 	movi	r3,46
  805ed0:	80c00045 	stb	r3,1(r16)
  805ed4:	11400043 	ldbu	r5,1(r2)
  805ed8:	80c00084 	addi	r3,r16,2
  805edc:	29803fcc 	andi	r6,r5,255
  805ee0:	3180201c 	xori	r6,r6,128
  805ee4:	31bfe004 	addi	r6,r6,-128
  805ee8:	30000f26 	beq	r6,zero,805f28 <print_e+0xd0>
  805eec:	04400e0e 	bge	zero,r17,805f28 <print_e+0xd0>
  805ef0:	10800044 	addi	r2,r2,1
  805ef4:	180d883a 	mov	r6,r3
  805ef8:	00000206 	br	805f04 <print_e+0xac>
  805efc:	180d883a 	mov	r6,r3
  805f00:	88000926 	beq	r17,zero,805f28 <print_e+0xd0>
  805f04:	31400005 	stb	r5,0(r6)
  805f08:	10800044 	addi	r2,r2,1
  805f0c:	11400003 	ldbu	r5,0(r2)
  805f10:	18c00044 	addi	r3,r3,1
  805f14:	8c7fffc4 	addi	r17,r17,-1
  805f18:	29803fcc 	andi	r6,r5,255
  805f1c:	3180201c 	xori	r6,r6,128
  805f20:	31bfe004 	addi	r6,r6,-128
  805f24:	303ff51e 	bne	r6,zero,805efc <__alt_data_end+0xff805efc>
  805f28:	94803fcc 	andi	r18,r18,255
  805f2c:	9480201c 	xori	r18,r18,128
  805f30:	94bfe004 	addi	r18,r18,-128
  805f34:	008019c4 	movi	r2,103
  805f38:	90802c26 	beq	r18,r2,805fec <print_e+0x194>
  805f3c:	008011c4 	movi	r2,71
  805f40:	90803326 	beq	r18,r2,806010 <print_e+0x1b8>
  805f44:	0440060e 	bge	zero,r17,805f60 <print_e+0x108>
  805f48:	1805883a 	mov	r2,r3
  805f4c:	01400c04 	movi	r5,48
  805f50:	1c47883a 	add	r3,r3,r17
  805f54:	11400005 	stb	r5,0(r2)
  805f58:	10800044 	addi	r2,r2,1
  805f5c:	18bffd1e 	bne	r3,r2,805f54 <__alt_data_end+0xff805f54>
  805f60:	19c00005 	stb	r7,0(r3)
  805f64:	243fffc4 	addi	r16,r4,-1
  805f68:	1c400084 	addi	r17,r3,2
  805f6c:	80002416 	blt	r16,zero,806000 <print_e+0x1a8>
  805f70:	00800ac4 	movi	r2,43
  805f74:	18800045 	stb	r2,1(r3)
  805f78:	008018c4 	movi	r2,99
  805f7c:	1400080e 	bge	r2,r16,805fa0 <print_e+0x148>
  805f80:	8009883a 	mov	r4,r16
  805f84:	01401904 	movi	r5,100
  805f88:	080cc900 	call	80cc90 <__divsi3>
  805f8c:	10ffe724 	muli	r3,r2,-100
  805f90:	10800c04 	addi	r2,r2,48
  805f94:	88800005 	stb	r2,0(r17)
  805f98:	80e1883a 	add	r16,r16,r3
  805f9c:	8c400044 	addi	r17,r17,1
  805fa0:	8009883a 	mov	r4,r16
  805fa4:	01400284 	movi	r5,10
  805fa8:	080cc900 	call	80cc90 <__divsi3>
  805fac:	10fffda4 	muli	r3,r2,-10
  805fb0:	10800c04 	addi	r2,r2,48
  805fb4:	88800005 	stb	r2,0(r17)
  805fb8:	1c21883a 	add	r16,r3,r16
  805fbc:	84000c04 	addi	r16,r16,48
  805fc0:	8c000045 	stb	r16,1(r17)
  805fc4:	88000085 	stb	zero,2(r17)
  805fc8:	dfc00a17 	ldw	ra,40(sp)
  805fcc:	dc800917 	ldw	r18,36(sp)
  805fd0:	dc400817 	ldw	r17,32(sp)
  805fd4:	dc000717 	ldw	r16,28(sp)
  805fd8:	dec00b04 	addi	sp,sp,44
  805fdc:	f800283a 	ret
  805fe0:	883fba1e 	bne	r17,zero,805ecc <__alt_data_end+0xff805ecc>
  805fe4:	80c00044 	addi	r3,r16,1
  805fe8:	003fcf06 	br	805f28 <__alt_data_end+0xff805f28>
  805fec:	01c01944 	movi	r7,101
  805ff0:	19c00005 	stb	r7,0(r3)
  805ff4:	243fffc4 	addi	r16,r4,-1
  805ff8:	1c400084 	addi	r17,r3,2
  805ffc:	803fdc0e 	bge	r16,zero,805f70 <__alt_data_end+0xff805f70>
  806000:	00800b44 	movi	r2,45
  806004:	18800045 	stb	r2,1(r3)
  806008:	0421c83a 	sub	r16,zero,r16
  80600c:	003fda06 	br	805f78 <__alt_data_end+0xff805f78>
  806010:	01c01144 	movi	r7,69
  806014:	003fd206 	br	805f60 <__alt_data_end+0xff805f60>
  806018:	100b883a 	mov	r5,r2
  80601c:	8009883a 	mov	r4,r16
  806020:	080a1d40 	call	80a1d4 <strcpy>
  806024:	003fe806 	br	805fc8 <__alt_data_end+0xff805fc8>

00806028 <fcvtbuf>:
  806028:	defff304 	addi	sp,sp,-52
  80602c:	dc000515 	stw	r16,20(sp)
  806030:	dc000e17 	ldw	r16,56(sp)
  806034:	00802074 	movhi	r2,129
  806038:	dd400a15 	stw	r21,40(sp)
  80603c:	dd000915 	stw	r20,36(sp)
  806040:	dcc00815 	stw	r19,32(sp)
  806044:	dc800715 	stw	r18,28(sp)
  806048:	dc400615 	stw	r17,24(sp)
  80604c:	109a8904 	addi	r2,r2,27172
  806050:	dfc00c15 	stw	ra,48(sp)
  806054:	dd800b15 	stw	r22,44(sp)
  806058:	2027883a 	mov	r19,r4
  80605c:	2825883a 	mov	r18,r5
  806060:	3023883a 	mov	r17,r6
  806064:	3829883a 	mov	r20,r7
  806068:	15400017 	ldw	r21,0(r2)
  80606c:	80004426 	beq	r16,zero,806180 <fcvtbuf+0x158>
  806070:	000d883a 	mov	r6,zero
  806074:	01cffc34 	movhi	r7,16368
  806078:	9809883a 	mov	r4,r19
  80607c:	900b883a 	mov	r5,r18
  806080:	080d8900 	call	80d890 <__ledf2>
  806084:	10002c16 	blt	r2,zero,806138 <fcvtbuf+0x110>
  806088:	d8800404 	addi	r2,sp,16
  80608c:	d8800315 	stw	r2,12(sp)
  806090:	d8800d17 	ldw	r2,52(sp)
  806094:	dd000115 	stw	r20,4(sp)
  806098:	dc400015 	stw	r17,0(sp)
  80609c:	d8800215 	stw	r2,8(sp)
  8060a0:	01c000c4 	movi	r7,3
  8060a4:	980b883a 	mov	r5,r19
  8060a8:	900d883a 	mov	r6,r18
  8060ac:	a809883a 	mov	r4,r21
  8060b0:	08047d00 	call	8047d0 <_dtoa_r>
  8060b4:	a1400017 	ldw	r5,0(r20)
  8060b8:	d8c00417 	ldw	r3,16(sp)
  8060bc:	014bc83a 	sub	r5,zero,r5
  8060c0:	10c0342e 	bgeu	r2,r3,806194 <fcvtbuf+0x16c>
  8060c4:	8007883a 	mov	r3,r16
  8060c8:	11800003 	ldbu	r6,0(r2)
  8060cc:	19000044 	addi	r4,r3,1
  8060d0:	10800044 	addi	r2,r2,1
  8060d4:	19800005 	stb	r6,0(r3)
  8060d8:	d9800417 	ldw	r6,16(sp)
  8060dc:	29400044 	addi	r5,r5,1
  8060e0:	2007883a 	mov	r3,r4
  8060e4:	11bff836 	bltu	r2,r6,8060c8 <__alt_data_end+0xff8060c8>
  8060e8:	2c40070e 	bge	r5,r17,806108 <fcvtbuf+0xe0>
  8060ec:	894bc83a 	sub	r5,r17,r5
  8060f0:	2007883a 	mov	r3,r4
  8060f4:	00800c04 	movi	r2,48
  8060f8:	2149883a 	add	r4,r4,r5
  8060fc:	18800005 	stb	r2,0(r3)
  806100:	18c00044 	addi	r3,r3,1
  806104:	20fffd1e 	bne	r4,r3,8060fc <__alt_data_end+0xff8060fc>
  806108:	20000005 	stb	zero,0(r4)
  80610c:	8005883a 	mov	r2,r16
  806110:	dfc00c17 	ldw	ra,48(sp)
  806114:	dd800b17 	ldw	r22,44(sp)
  806118:	dd400a17 	ldw	r21,40(sp)
  80611c:	dd000917 	ldw	r20,36(sp)
  806120:	dcc00817 	ldw	r19,32(sp)
  806124:	dc800717 	ldw	r18,28(sp)
  806128:	dc400617 	ldw	r17,24(sp)
  80612c:	dc000517 	ldw	r16,20(sp)
  806130:	dec00d04 	addi	sp,sp,52
  806134:	f800283a 	ret
  806138:	000d883a 	mov	r6,zero
  80613c:	01effc34 	movhi	r7,49136
  806140:	9809883a 	mov	r4,r19
  806144:	900b883a 	mov	r5,r18
  806148:	080d7b40 	call	80d7b4 <__gedf2>
  80614c:	00bfce0e 	bge	zero,r2,806088 <__alt_data_end+0xff806088>
  806150:	d8800404 	addi	r2,sp,16
  806154:	d8800315 	stw	r2,12(sp)
  806158:	d8800d17 	ldw	r2,52(sp)
  80615c:	dd000115 	stw	r20,4(sp)
  806160:	dc400015 	stw	r17,0(sp)
  806164:	d8800215 	stw	r2,8(sp)
  806168:	01c00084 	movi	r7,2
  80616c:	980b883a 	mov	r5,r19
  806170:	900d883a 	mov	r6,r18
  806174:	a809883a 	mov	r4,r21
  806178:	08047d00 	call	8047d0 <_dtoa_r>
  80617c:	003fcd06 	br	8060b4 <__alt_data_end+0xff8060b4>
  806180:	a8801417 	ldw	r2,80(r21)
  806184:	30c008c4 	addi	r3,r6,35
  806188:	1880040e 	bge	r3,r2,80619c <fcvtbuf+0x174>
  80618c:	ac001517 	ldw	r16,84(r21)
  806190:	003fb706 	br	806070 <__alt_data_end+0xff806070>
  806194:	8009883a 	mov	r4,r16
  806198:	003fd306 	br	8060e8 <__alt_data_end+0xff8060e8>
  80619c:	a9401517 	ldw	r5,84(r21)
  8061a0:	35800904 	addi	r22,r6,36
  8061a4:	b00d883a 	mov	r6,r22
  8061a8:	a809883a 	mov	r4,r21
  8061ac:	08099900 	call	809990 <_realloc_r>
  8061b0:	1021883a 	mov	r16,r2
  8061b4:	10000326 	beq	r2,zero,8061c4 <fcvtbuf+0x19c>
  8061b8:	ad801415 	stw	r22,80(r21)
  8061bc:	a8801515 	stw	r2,84(r21)
  8061c0:	003fab06 	br	806070 <__alt_data_end+0xff806070>
  8061c4:	0005883a 	mov	r2,zero
  8061c8:	003fd106 	br	806110 <__alt_data_end+0xff806110>

008061cc <ecvtbuf>:
  8061cc:	defff304 	addi	sp,sp,-52
  8061d0:	dc000615 	stw	r16,24(sp)
  8061d4:	dc000e17 	ldw	r16,56(sp)
  8061d8:	00802074 	movhi	r2,129
  8061dc:	dd000a15 	stw	r20,40(sp)
  8061e0:	dcc00915 	stw	r19,36(sp)
  8061e4:	dc800815 	stw	r18,32(sp)
  8061e8:	dc400715 	stw	r17,28(sp)
  8061ec:	109a8904 	addi	r2,r2,27172
  8061f0:	dfc00c15 	stw	ra,48(sp)
  8061f4:	dd400b15 	stw	r21,44(sp)
  8061f8:	2029883a 	mov	r20,r4
  8061fc:	2827883a 	mov	r19,r5
  806200:	3023883a 	mov	r17,r6
  806204:	14800017 	ldw	r18,0(r2)
  806208:	80002b26 	beq	r16,zero,8062b8 <ecvtbuf+0xec>
  80620c:	d8800404 	addi	r2,sp,16
  806210:	d8800315 	stw	r2,12(sp)
  806214:	d8800d17 	ldw	r2,52(sp)
  806218:	d9c00115 	stw	r7,4(sp)
  80621c:	dc400015 	stw	r17,0(sp)
  806220:	d8800215 	stw	r2,8(sp)
  806224:	01c00084 	movi	r7,2
  806228:	a00b883a 	mov	r5,r20
  80622c:	980d883a 	mov	r6,r19
  806230:	9009883a 	mov	r4,r18
  806234:	08047d00 	call	8047d0 <_dtoa_r>
  806238:	d8c00417 	ldw	r3,16(sp)
  80623c:	10c0222e 	bgeu	r2,r3,8062c8 <ecvtbuf+0xfc>
  806240:	01800044 	movi	r6,1
  806244:	8007883a 	mov	r3,r16
  806248:	340dc83a 	sub	r6,r6,r16
  80624c:	11400003 	ldbu	r5,0(r2)
  806250:	19000044 	addi	r4,r3,1
  806254:	10800044 	addi	r2,r2,1
  806258:	19400005 	stb	r5,0(r3)
  80625c:	d9400417 	ldw	r5,16(sp)
  806260:	30cf883a 	add	r7,r6,r3
  806264:	2007883a 	mov	r3,r4
  806268:	117ff836 	bltu	r2,r5,80624c <__alt_data_end+0xff80624c>
  80626c:	3c40070e 	bge	r7,r17,80628c <ecvtbuf+0xc0>
  806270:	89cfc83a 	sub	r7,r17,r7
  806274:	2007883a 	mov	r3,r4
  806278:	01400c04 	movi	r5,48
  80627c:	21c9883a 	add	r4,r4,r7
  806280:	19400005 	stb	r5,0(r3)
  806284:	18c00044 	addi	r3,r3,1
  806288:	20fffd1e 	bne	r4,r3,806280 <__alt_data_end+0xff806280>
  80628c:	20000005 	stb	zero,0(r4)
  806290:	8005883a 	mov	r2,r16
  806294:	dfc00c17 	ldw	ra,48(sp)
  806298:	dd400b17 	ldw	r21,44(sp)
  80629c:	dd000a17 	ldw	r20,40(sp)
  8062a0:	dcc00917 	ldw	r19,36(sp)
  8062a4:	dc800817 	ldw	r18,32(sp)
  8062a8:	dc400717 	ldw	r17,28(sp)
  8062ac:	dc000617 	ldw	r16,24(sp)
  8062b0:	dec00d04 	addi	sp,sp,52
  8062b4:	f800283a 	ret
  8062b8:	90801417 	ldw	r2,80(r18)
  8062bc:	3080050e 	bge	r6,r2,8062d4 <ecvtbuf+0x108>
  8062c0:	94001517 	ldw	r16,84(r18)
  8062c4:	003fd106 	br	80620c <__alt_data_end+0xff80620c>
  8062c8:	8009883a 	mov	r4,r16
  8062cc:	000f883a 	mov	r7,zero
  8062d0:	003fe606 	br	80626c <__alt_data_end+0xff80626c>
  8062d4:	91401517 	ldw	r5,84(r18)
  8062d8:	35400044 	addi	r21,r6,1
  8062dc:	a80d883a 	mov	r6,r21
  8062e0:	9009883a 	mov	r4,r18
  8062e4:	d9c00515 	stw	r7,20(sp)
  8062e8:	08099900 	call	809990 <_realloc_r>
  8062ec:	1021883a 	mov	r16,r2
  8062f0:	d9c00517 	ldw	r7,20(sp)
  8062f4:	10000326 	beq	r2,zero,806304 <ecvtbuf+0x138>
  8062f8:	95401415 	stw	r21,80(r18)
  8062fc:	90801515 	stw	r2,84(r18)
  806300:	003fc206 	br	80620c <__alt_data_end+0xff80620c>
  806304:	0005883a 	mov	r2,zero
  806308:	003fe206 	br	806294 <__alt_data_end+0xff806294>

0080630c <_gcvt>:
  80630c:	defff204 	addi	sp,sp,-56
  806310:	dc800915 	stw	r18,36(sp)
  806314:	3025883a 	mov	r18,r6
  806318:	dd400c15 	stw	r21,48(sp)
  80631c:	dcc00a15 	stw	r19,40(sp)
  806320:	dc400815 	stw	r17,32(sp)
  806324:	2827883a 	mov	r19,r5
  806328:	202b883a 	mov	r21,r4
  80632c:	3823883a 	mov	r17,r7
  806330:	2809883a 	mov	r4,r5
  806334:	000d883a 	mov	r6,zero
  806338:	000f883a 	mov	r7,zero
  80633c:	900b883a 	mov	r5,r18
  806340:	dd000b15 	stw	r20,44(sp)
  806344:	dc000715 	stw	r16,28(sp)
  806348:	dfc00d15 	stw	ra,52(sp)
  80634c:	dc000e17 	ldw	r16,56(sp)
  806350:	dd000f17 	ldw	r20,60(sp)
  806354:	080d8900 	call	80d890 <__ledf2>
  806358:	10009d16 	blt	r2,zero,8065d0 <_gcvt+0x2c4>
  80635c:	000d883a 	mov	r6,zero
  806360:	000f883a 	mov	r7,zero
  806364:	9809883a 	mov	r4,r19
  806368:	900b883a 	mov	r5,r18
  80636c:	080d72c0 	call	80d72c <__eqdf2>
  806370:	10009326 	beq	r2,zero,8065c0 <_gcvt+0x2b4>
  806374:	01bac734 	movhi	r6,60188
  806378:	01cfc6b4 	movhi	r7,16154
  80637c:	3190cb44 	addi	r6,r6,17197
  806380:	39cdb884 	addi	r7,r7,14050
  806384:	9809883a 	mov	r4,r19
  806388:	900b883a 	mov	r5,r18
  80638c:	080d8900 	call	80d890 <__ledf2>
  806390:	0080740e 	bge	zero,r2,806564 <_gcvt+0x258>
  806394:	8809883a 	mov	r4,r17
  806398:	08098180 	call	809818 <_mprec_log10>
  80639c:	100d883a 	mov	r6,r2
  8063a0:	180f883a 	mov	r7,r3
  8063a4:	9809883a 	mov	r4,r19
  8063a8:	900b883a 	mov	r5,r18
  8063ac:	080d7b40 	call	80d7b4 <__gedf2>
  8063b0:	10006c0e 	bge	r2,zero,806564 <_gcvt+0x258>
  8063b4:	000d883a 	mov	r6,zero
  8063b8:	01cffc34 	movhi	r7,16368
  8063bc:	9809883a 	mov	r4,r19
  8063c0:	900b883a 	mov	r5,r18
  8063c4:	080d8900 	call	80d890 <__ledf2>
  8063c8:	10008316 	blt	r2,zero,8065d8 <_gcvt+0x2cc>
  8063cc:	d8800404 	addi	r2,sp,16
  8063d0:	d8800315 	stw	r2,12(sp)
  8063d4:	d8800504 	addi	r2,sp,20
  8063d8:	d8800215 	stw	r2,8(sp)
  8063dc:	d8800604 	addi	r2,sp,24
  8063e0:	d8800115 	stw	r2,4(sp)
  8063e4:	dc400015 	stw	r17,0(sp)
  8063e8:	01c00084 	movi	r7,2
  8063ec:	980b883a 	mov	r5,r19
  8063f0:	900d883a 	mov	r6,r18
  8063f4:	a809883a 	mov	r4,r21
  8063f8:	08047d00 	call	8047d0 <_dtoa_r>
  8063fc:	d9400617 	ldw	r5,24(sp)
  806400:	00c9c3c4 	movi	r3,9999
  806404:	28c08b26 	beq	r5,r3,806634 <_gcvt+0x328>
  806408:	11c00003 	ldbu	r7,0(r2)
  80640c:	38c03fcc 	andi	r3,r7,255
  806410:	18c0201c 	xori	r3,r3,128
  806414:	18ffe004 	addi	r3,r3,-128
  806418:	18008a26 	beq	r3,zero,806644 <_gcvt+0x338>
  80641c:	01408d0e 	bge	zero,r5,806654 <_gcvt+0x348>
  806420:	8011883a 	mov	r8,r16
  806424:	280d883a 	mov	r6,r5
  806428:	00000206 	br	806434 <_gcvt+0x128>
  80642c:	2011883a 	mov	r8,r4
  806430:	30001926 	beq	r6,zero,806498 <_gcvt+0x18c>
  806434:	31bfffc4 	addi	r6,r6,-1
  806438:	41c00005 	stb	r7,0(r8)
  80643c:	d9800615 	stw	r6,24(sp)
  806440:	10800044 	addi	r2,r2,1
  806444:	11c00003 	ldbu	r7,0(r2)
  806448:	41000044 	addi	r4,r8,1
  80644c:	3147c83a 	sub	r3,r6,r5
  806450:	3a003fcc 	andi	r8,r7,255
  806454:	4200201c 	xori	r8,r8,128
  806458:	423fe004 	addi	r8,r8,-128
  80645c:	1c47883a 	add	r3,r3,r17
  806460:	403ff21e 	bne	r8,zero,80642c <__alt_data_end+0xff80642c>
  806464:	01800c0e 	bge	zero,r6,806498 <_gcvt+0x18c>
  806468:	200f883a 	mov	r7,r4
  80646c:	00c00a0e 	bge	zero,r3,806498 <_gcvt+0x18c>
  806470:	01400c04 	movi	r5,48
  806474:	00000206 	br	806480 <_gcvt+0x174>
  806478:	200f883a 	mov	r7,r4
  80647c:	18006326 	beq	r3,zero,80660c <_gcvt+0x300>
  806480:	39400005 	stb	r5,0(r7)
  806484:	31bfffc4 	addi	r6,r6,-1
  806488:	21000044 	addi	r4,r4,1
  80648c:	18ffffc4 	addi	r3,r3,-1
  806490:	303ff91e 	bne	r6,zero,806478 <__alt_data_end+0xff806478>
  806494:	d8000615 	stw	zero,24(sp)
  806498:	d9401017 	ldw	r5,64(sp)
  80649c:	2800021e 	bne	r5,zero,8064a8 <_gcvt+0x19c>
  8064a0:	11400007 	ldb	r5,0(r2)
  8064a4:	28002d26 	beq	r5,zero,80655c <_gcvt+0x250>
  8064a8:	81005e26 	beq	r16,r4,806624 <_gcvt+0x318>
  8064ac:	d9800617 	ldw	r6,24(sp)
  8064b0:	01400b84 	movi	r5,46
  8064b4:	21400005 	stb	r5,0(r4)
  8064b8:	21c00044 	addi	r7,r4,1
  8064bc:	3000680e 	bge	r6,zero,806660 <_gcvt+0x354>
  8064c0:	00c0690e 	bge	zero,r3,806668 <_gcvt+0x35c>
  8064c4:	01400c04 	movi	r5,48
  8064c8:	00000206 	br	8064d4 <_gcvt+0x1c8>
  8064cc:	200f883a 	mov	r7,r4
  8064d0:	18005026 	beq	r3,zero,806614 <_gcvt+0x308>
  8064d4:	39400005 	stb	r5,0(r7)
  8064d8:	31800044 	addi	r6,r6,1
  8064dc:	39000044 	addi	r4,r7,1
  8064e0:	18ffffc4 	addi	r3,r3,-1
  8064e4:	303ff91e 	bne	r6,zero,8064cc <__alt_data_end+0xff8064cc>
  8064e8:	d8000615 	stw	zero,24(sp)
  8064ec:	11800003 	ldbu	r6,0(r2)
  8064f0:	31403fcc 	andi	r5,r6,255
  8064f4:	2940201c 	xori	r5,r5,128
  8064f8:	297fe004 	addi	r5,r5,-128
  8064fc:	28000e26 	beq	r5,zero,806538 <_gcvt+0x22c>
  806500:	200b883a 	mov	r5,r4
  806504:	00c00316 	blt	zero,r3,806514 <_gcvt+0x208>
  806508:	00001406 	br	80655c <_gcvt+0x250>
  80650c:	200b883a 	mov	r5,r4
  806510:	18001226 	beq	r3,zero,80655c <_gcvt+0x250>
  806514:	29800005 	stb	r6,0(r5)
  806518:	10800044 	addi	r2,r2,1
  80651c:	11800003 	ldbu	r6,0(r2)
  806520:	21000044 	addi	r4,r4,1
  806524:	18ffffc4 	addi	r3,r3,-1
  806528:	31403fcc 	andi	r5,r6,255
  80652c:	2940201c 	xori	r5,r5,128
  806530:	297fe004 	addi	r5,r5,-128
  806534:	283ff51e 	bne	r5,zero,80650c <__alt_data_end+0xff80650c>
  806538:	d8801017 	ldw	r2,64(sp)
  80653c:	10000726 	beq	r2,zero,80655c <_gcvt+0x250>
  806540:	00c0060e 	bge	zero,r3,80655c <_gcvt+0x250>
  806544:	2005883a 	mov	r2,r4
  806548:	01400c04 	movi	r5,48
  80654c:	20c9883a 	add	r4,r4,r3
  806550:	11400005 	stb	r5,0(r2)
  806554:	10800044 	addi	r2,r2,1
  806558:	20bffd1e 	bne	r4,r2,806550 <__alt_data_end+0xff806550>
  80655c:	20000005 	stb	zero,0(r4)
  806560:	00000d06 	br	806598 <_gcvt+0x28c>
  806564:	a5003fcc 	andi	r20,r20,255
  806568:	d8801017 	ldw	r2,64(sp)
  80656c:	a500201c 	xori	r20,r20,128
  806570:	a53fe004 	addi	r20,r20,-128
  806574:	8c7fffc4 	addi	r17,r17,-1
  806578:	d8800215 	stw	r2,8(sp)
  80657c:	dd000115 	stw	r20,4(sp)
  806580:	dc400015 	stw	r17,0(sp)
  806584:	980d883a 	mov	r6,r19
  806588:	900f883a 	mov	r7,r18
  80658c:	800b883a 	mov	r5,r16
  806590:	a809883a 	mov	r4,r21
  806594:	0805e580 	call	805e58 <print_e>
  806598:	8005883a 	mov	r2,r16
  80659c:	dfc00d17 	ldw	ra,52(sp)
  8065a0:	dd400c17 	ldw	r21,48(sp)
  8065a4:	dd000b17 	ldw	r20,44(sp)
  8065a8:	dcc00a17 	ldw	r19,40(sp)
  8065ac:	dc800917 	ldw	r18,36(sp)
  8065b0:	dc400817 	ldw	r17,32(sp)
  8065b4:	dc000717 	ldw	r16,28(sp)
  8065b8:	dec00e04 	addi	sp,sp,56
  8065bc:	f800283a 	ret
  8065c0:	00800c04 	movi	r2,48
  8065c4:	80800005 	stb	r2,0(r16)
  8065c8:	80000045 	stb	zero,1(r16)
  8065cc:	003ff206 	br	806598 <__alt_data_end+0xff806598>
  8065d0:	94a0003c 	xorhi	r18,r18,32768
  8065d4:	003f6106 	br	80635c <__alt_data_end+0xff80635c>
  8065d8:	d8800504 	addi	r2,sp,20
  8065dc:	d9400404 	addi	r5,sp,16
  8065e0:	d8800215 	stw	r2,8(sp)
  8065e4:	d8800604 	addi	r2,sp,24
  8065e8:	d9400315 	stw	r5,12(sp)
  8065ec:	d8800115 	stw	r2,4(sp)
  8065f0:	dc400015 	stw	r17,0(sp)
  8065f4:	01c000c4 	movi	r7,3
  8065f8:	980b883a 	mov	r5,r19
  8065fc:	900d883a 	mov	r6,r18
  806600:	a809883a 	mov	r4,r21
  806604:	08047d00 	call	8047d0 <_dtoa_r>
  806608:	003f7c06 	br	8063fc <__alt_data_end+0xff8063fc>
  80660c:	d9800615 	stw	r6,24(sp)
  806610:	003fa106 	br	806498 <__alt_data_end+0xff806498>
  806614:	d9800615 	stw	r6,24(sp)
  806618:	10800007 	ldb	r2,0(r2)
  80661c:	103fc626 	beq	r2,zero,806538 <__alt_data_end+0xff806538>
  806620:	003fce06 	br	80655c <__alt_data_end+0xff80655c>
  806624:	01400c04 	movi	r5,48
  806628:	81000044 	addi	r4,r16,1
  80662c:	81400005 	stb	r5,0(r16)
  806630:	003f9e06 	br	8064ac <__alt_data_end+0xff8064ac>
  806634:	100b883a 	mov	r5,r2
  806638:	8009883a 	mov	r4,r16
  80663c:	080a1d40 	call	80a1d4 <strcpy>
  806640:	003fd506 	br	806598 <__alt_data_end+0xff806598>
  806644:	280d883a 	mov	r6,r5
  806648:	8009883a 	mov	r4,r16
  80664c:	8807883a 	mov	r3,r17
  806650:	003f8406 	br	806464 <__alt_data_end+0xff806464>
  806654:	8009883a 	mov	r4,r16
  806658:	8807883a 	mov	r3,r17
  80665c:	003f8e06 	br	806498 <__alt_data_end+0xff806498>
  806660:	3809883a 	mov	r4,r7
  806664:	003fa106 	br	8064ec <__alt_data_end+0xff8064ec>
  806668:	3809883a 	mov	r4,r7
  80666c:	003fea06 	br	806618 <__alt_data_end+0xff806618>

00806670 <_dcvt>:
  806670:	defff504 	addi	sp,sp,-44
  806674:	da000d17 	ldw	r8,52(sp)
  806678:	dc800915 	stw	r18,36(sp)
  80667c:	dc000715 	stw	r16,28(sp)
  806680:	40bfeec4 	addi	r2,r8,-69
  806684:	dfc00a15 	stw	ra,40(sp)
  806688:	dc400815 	stw	r17,32(sp)
  80668c:	10803fcc 	andi	r2,r2,255
  806690:	00c00884 	movi	r3,34
  806694:	2825883a 	mov	r18,r5
  806698:	dc000b17 	ldw	r16,44(sp)
  80669c:	18802c36 	bltu	r3,r2,806750 <_dcvt+0xe0>
  8066a0:	100490ba 	slli	r2,r2,2
  8066a4:	00c02034 	movhi	r3,128
  8066a8:	18d9af04 	addi	r3,r3,26300
  8066ac:	10c5883a 	add	r2,r2,r3
  8066b0:	10800017 	ldw	r2,0(r2)
  8066b4:	3813883a 	mov	r9,r7
  8066b8:	1000683a 	jmp	r2
  8066bc:	00806914 	movui	r2,420
  8066c0:	008067a4 	muli	r2,zero,414
  8066c4:	0080676c 	andhi	r2,zero,413
  8066c8:	00806750 	cmplti	r2,zero,413
  8066cc:	00806750 	cmplti	r2,zero,413
  8066d0:	00806750 	cmplti	r2,zero,413
  8066d4:	00806750 	cmplti	r2,zero,413
  8066d8:	00806750 	cmplti	r2,zero,413
  8066dc:	00806750 	cmplti	r2,zero,413
  8066e0:	00806750 	cmplti	r2,zero,413
  8066e4:	00806750 	cmplti	r2,zero,413
  8066e8:	00806750 	cmplti	r2,zero,413
  8066ec:	00806750 	cmplti	r2,zero,413
  8066f0:	00806750 	cmplti	r2,zero,413
  8066f4:	00806750 	cmplti	r2,zero,413
  8066f8:	00806750 	cmplti	r2,zero,413
  8066fc:	00806750 	cmplti	r2,zero,413
  806700:	00806750 	cmplti	r2,zero,413
  806704:	00806750 	cmplti	r2,zero,413
  806708:	00806750 	cmplti	r2,zero,413
  80670c:	00806750 	cmplti	r2,zero,413
  806710:	00806750 	cmplti	r2,zero,413
  806714:	00806750 	cmplti	r2,zero,413
  806718:	00806750 	cmplti	r2,zero,413
  80671c:	00806750 	cmplti	r2,zero,413
  806720:	00806750 	cmplti	r2,zero,413
  806724:	00806750 	cmplti	r2,zero,413
  806728:	00806750 	cmplti	r2,zero,413
  80672c:	00806750 	cmplti	r2,zero,413
  806730:	00806750 	cmplti	r2,zero,413
  806734:	00806750 	cmplti	r2,zero,413
  806738:	00806750 	cmplti	r2,zero,413
  80673c:	00806914 	movui	r2,420
  806740:	008067a4 	muli	r2,zero,414
  806744:	0080676c 	andhi	r2,zero,413
  806748:	1007883a 	mov	r3,r2
  80674c:	18000005 	stb	zero,0(r3)
  806750:	9005883a 	mov	r2,r18
  806754:	dfc00a17 	ldw	ra,40(sp)
  806758:	dc800917 	ldw	r18,36(sp)
  80675c:	dc400817 	ldw	r17,32(sp)
  806760:	dc000717 	ldw	r16,28(sp)
  806764:	dec00b04 	addi	sp,sp,44
  806768:	f800283a 	ret
  80676c:	8000011e 	bne	r16,zero,806774 <_dcvt+0x104>
  806770:	04000044 	movi	r16,1
  806774:	d8800e17 	ldw	r2,56(sp)
  806778:	42003fcc 	andi	r8,r8,255
  80677c:	4200201c 	xori	r8,r8,128
  806780:	423fe004 	addi	r8,r8,-128
  806784:	300b883a 	mov	r5,r6
  806788:	d8800215 	stw	r2,8(sp)
  80678c:	da000115 	stw	r8,4(sp)
  806790:	dc800015 	stw	r18,0(sp)
  806794:	800f883a 	mov	r7,r16
  806798:	480d883a 	mov	r6,r9
  80679c:	080630c0 	call	80630c <_gcvt>
  8067a0:	003feb06 	br	806750 <__alt_data_end+0xff806750>
  8067a4:	8000641e 	bne	r16,zero,806938 <_dcvt+0x2c8>
  8067a8:	dc400e17 	ldw	r17,56(sp)
  8067ac:	d8800404 	addi	r2,sp,16
  8067b0:	d8800315 	stw	r2,12(sp)
  8067b4:	d8800504 	addi	r2,sp,20
  8067b8:	d8800215 	stw	r2,8(sp)
  8067bc:	d8800604 	addi	r2,sp,24
  8067c0:	300b883a 	mov	r5,r6
  8067c4:	d8800115 	stw	r2,4(sp)
  8067c8:	480d883a 	mov	r6,r9
  8067cc:	dc000015 	stw	r16,0(sp)
  8067d0:	01c000c4 	movi	r7,3
  8067d4:	08047d00 	call	8047d0 <_dtoa_r>
  8067d8:	d9800617 	ldw	r6,24(sp)
  8067dc:	00c9c3c4 	movi	r3,9999
  8067e0:	30c05b26 	beq	r6,r3,806950 <_dcvt+0x2e0>
  8067e4:	11c00003 	ldbu	r7,0(r2)
  8067e8:	38c03fcc 	andi	r3,r7,255
  8067ec:	18c0201c 	xori	r3,r3,128
  8067f0:	18ffe004 	addi	r3,r3,-128
  8067f4:	18005a26 	beq	r3,zero,806960 <_dcvt+0x2f0>
  8067f8:	01805c0e 	bge	zero,r6,80696c <_dcvt+0x2fc>
  8067fc:	9011883a 	mov	r8,r18
  806800:	1009883a 	mov	r4,r2
  806804:	00000206 	br	806810 <_dcvt+0x1a0>
  806808:	1811883a 	mov	r8,r3
  80680c:	30001226 	beq	r6,zero,806858 <_dcvt+0x1e8>
  806810:	31bfffc4 	addi	r6,r6,-1
  806814:	41c00005 	stb	r7,0(r8)
  806818:	21000044 	addi	r4,r4,1
  80681c:	d9800615 	stw	r6,24(sp)
  806820:	21c00003 	ldbu	r7,0(r4)
  806824:	40c00044 	addi	r3,r8,1
  806828:	3a003fcc 	andi	r8,r7,255
  80682c:	4200201c 	xori	r8,r8,128
  806830:	423fe004 	addi	r8,r8,-128
  806834:	403ff41e 	bne	r8,zero,806808 <__alt_data_end+0xff806808>
  806838:	0180070e 	bge	zero,r6,806858 <_dcvt+0x1e8>
  80683c:	180f883a 	mov	r7,r3
  806840:	02000c04 	movi	r8,48
  806844:	1987883a 	add	r3,r3,r6
  806848:	3a000005 	stb	r8,0(r7)
  80684c:	39c00044 	addi	r7,r7,1
  806850:	19fffd1e 	bne	r3,r7,806848 <__alt_data_end+0xff806848>
  806854:	d8000615 	stw	zero,24(sp)
  806858:	8800021e 	bne	r17,zero,806864 <_dcvt+0x1f4>
  80685c:	21400007 	ldb	r5,0(r4)
  806860:	283fba26 	beq	r5,zero,80674c <__alt_data_end+0xff80674c>
  806864:	11003626 	beq	r2,r4,806940 <_dcvt+0x2d0>
  806868:	d9400617 	ldw	r5,24(sp)
  80686c:	00800b84 	movi	r2,46
  806870:	18800005 	stb	r2,0(r3)
  806874:	18800044 	addi	r2,r3,1
  806878:	28003f0e 	bge	r5,zero,806978 <_dcvt+0x308>
  80687c:	043fb20e 	bge	zero,r16,806748 <__alt_data_end+0xff806748>
  806880:	01800c04 	movi	r6,48
  806884:	00000206 	br	806890 <_dcvt+0x220>
  806888:	1805883a 	mov	r2,r3
  80688c:	803faf26 	beq	r16,zero,80674c <__alt_data_end+0xff80674c>
  806890:	11800005 	stb	r6,0(r2)
  806894:	29400044 	addi	r5,r5,1
  806898:	10c00044 	addi	r3,r2,1
  80689c:	843fffc4 	addi	r16,r16,-1
  8068a0:	283ff91e 	bne	r5,zero,806888 <__alt_data_end+0xff806888>
  8068a4:	d8000615 	stw	zero,24(sp)
  8068a8:	20800003 	ldbu	r2,0(r4)
  8068ac:	11403fcc 	andi	r5,r2,255
  8068b0:	2940201c 	xori	r5,r5,128
  8068b4:	297fe004 	addi	r5,r5,-128
  8068b8:	28000e26 	beq	r5,zero,8068f4 <_dcvt+0x284>
  8068bc:	043fa30e 	bge	zero,r16,80674c <__alt_data_end+0xff80674c>
  8068c0:	180b883a 	mov	r5,r3
  8068c4:	00000206 	br	8068d0 <_dcvt+0x260>
  8068c8:	180b883a 	mov	r5,r3
  8068cc:	803f9f26 	beq	r16,zero,80674c <__alt_data_end+0xff80674c>
  8068d0:	28800005 	stb	r2,0(r5)
  8068d4:	21000044 	addi	r4,r4,1
  8068d8:	20800003 	ldbu	r2,0(r4)
  8068dc:	18c00044 	addi	r3,r3,1
  8068e0:	843fffc4 	addi	r16,r16,-1
  8068e4:	11403fcc 	andi	r5,r2,255
  8068e8:	2940201c 	xori	r5,r5,128
  8068ec:	297fe004 	addi	r5,r5,-128
  8068f0:	283ff51e 	bne	r5,zero,8068c8 <__alt_data_end+0xff8068c8>
  8068f4:	043f950e 	bge	zero,r16,80674c <__alt_data_end+0xff80674c>
  8068f8:	1805883a 	mov	r2,r3
  8068fc:	01000c04 	movi	r4,48
  806900:	1c07883a 	add	r3,r3,r16
  806904:	11000005 	stb	r4,0(r2)
  806908:	10800044 	addi	r2,r2,1
  80690c:	18bffd1e 	bne	r3,r2,806904 <__alt_data_end+0xff806904>
  806910:	003f8e06 	br	80674c <__alt_data_end+0xff80674c>
  806914:	d8800e17 	ldw	r2,56(sp)
  806918:	42003fcc 	andi	r8,r8,255
  80691c:	4200201c 	xori	r8,r8,128
  806920:	423fe004 	addi	r8,r8,-128
  806924:	d8800215 	stw	r2,8(sp)
  806928:	da000115 	stw	r8,4(sp)
  80692c:	dc000015 	stw	r16,0(sp)
  806930:	0805e580 	call	805e58 <print_e>
  806934:	003f8606 	br	806750 <__alt_data_end+0xff806750>
  806938:	04400044 	movi	r17,1
  80693c:	003f9b06 	br	8067ac <__alt_data_end+0xff8067ac>
  806940:	00800c04 	movi	r2,48
  806944:	18800005 	stb	r2,0(r3)
  806948:	18c00044 	addi	r3,r3,1
  80694c:	003fc606 	br	806868 <__alt_data_end+0xff806868>
  806950:	100b883a 	mov	r5,r2
  806954:	9009883a 	mov	r4,r18
  806958:	080a1d40 	call	80a1d4 <strcpy>
  80695c:	003f7c06 	br	806750 <__alt_data_end+0xff806750>
  806960:	1009883a 	mov	r4,r2
  806964:	9007883a 	mov	r3,r18
  806968:	003fb306 	br	806838 <__alt_data_end+0xff806838>
  80696c:	1009883a 	mov	r4,r2
  806970:	9007883a 	mov	r3,r18
  806974:	003fb806 	br	806858 <__alt_data_end+0xff806858>
  806978:	1007883a 	mov	r3,r2
  80697c:	003fca06 	br	8068a8 <__alt_data_end+0xff8068a8>

00806980 <__sflush_r>:
  806980:	2880030b 	ldhu	r2,12(r5)
  806984:	defffb04 	addi	sp,sp,-20
  806988:	dcc00315 	stw	r19,12(sp)
  80698c:	dc400115 	stw	r17,4(sp)
  806990:	dfc00415 	stw	ra,16(sp)
  806994:	dc800215 	stw	r18,8(sp)
  806998:	dc000015 	stw	r16,0(sp)
  80699c:	10c0020c 	andi	r3,r2,8
  8069a0:	2823883a 	mov	r17,r5
  8069a4:	2027883a 	mov	r19,r4
  8069a8:	1800311e 	bne	r3,zero,806a70 <__sflush_r+0xf0>
  8069ac:	28c00117 	ldw	r3,4(r5)
  8069b0:	10820014 	ori	r2,r2,2048
  8069b4:	2880030d 	sth	r2,12(r5)
  8069b8:	00c04b0e 	bge	zero,r3,806ae8 <__sflush_r+0x168>
  8069bc:	8a000a17 	ldw	r8,40(r17)
  8069c0:	40002326 	beq	r8,zero,806a50 <__sflush_r+0xd0>
  8069c4:	9c000017 	ldw	r16,0(r19)
  8069c8:	10c4000c 	andi	r3,r2,4096
  8069cc:	98000015 	stw	zero,0(r19)
  8069d0:	18004826 	beq	r3,zero,806af4 <__sflush_r+0x174>
  8069d4:	89801417 	ldw	r6,80(r17)
  8069d8:	10c0010c 	andi	r3,r2,4
  8069dc:	18000626 	beq	r3,zero,8069f8 <__sflush_r+0x78>
  8069e0:	88c00117 	ldw	r3,4(r17)
  8069e4:	88800c17 	ldw	r2,48(r17)
  8069e8:	30cdc83a 	sub	r6,r6,r3
  8069ec:	10000226 	beq	r2,zero,8069f8 <__sflush_r+0x78>
  8069f0:	88800f17 	ldw	r2,60(r17)
  8069f4:	308dc83a 	sub	r6,r6,r2
  8069f8:	89400717 	ldw	r5,28(r17)
  8069fc:	000f883a 	mov	r7,zero
  806a00:	9809883a 	mov	r4,r19
  806a04:	403ee83a 	callr	r8
  806a08:	00ffffc4 	movi	r3,-1
  806a0c:	10c04426 	beq	r2,r3,806b20 <__sflush_r+0x1a0>
  806a10:	88c0030b 	ldhu	r3,12(r17)
  806a14:	89000417 	ldw	r4,16(r17)
  806a18:	88000115 	stw	zero,4(r17)
  806a1c:	197dffcc 	andi	r5,r3,63487
  806a20:	8940030d 	sth	r5,12(r17)
  806a24:	89000015 	stw	r4,0(r17)
  806a28:	18c4000c 	andi	r3,r3,4096
  806a2c:	18002c1e 	bne	r3,zero,806ae0 <__sflush_r+0x160>
  806a30:	89400c17 	ldw	r5,48(r17)
  806a34:	9c000015 	stw	r16,0(r19)
  806a38:	28000526 	beq	r5,zero,806a50 <__sflush_r+0xd0>
  806a3c:	88801004 	addi	r2,r17,64
  806a40:	28800226 	beq	r5,r2,806a4c <__sflush_r+0xcc>
  806a44:	9809883a 	mov	r4,r19
  806a48:	08070ec0 	call	8070ec <_free_r>
  806a4c:	88000c15 	stw	zero,48(r17)
  806a50:	0005883a 	mov	r2,zero
  806a54:	dfc00417 	ldw	ra,16(sp)
  806a58:	dcc00317 	ldw	r19,12(sp)
  806a5c:	dc800217 	ldw	r18,8(sp)
  806a60:	dc400117 	ldw	r17,4(sp)
  806a64:	dc000017 	ldw	r16,0(sp)
  806a68:	dec00504 	addi	sp,sp,20
  806a6c:	f800283a 	ret
  806a70:	2c800417 	ldw	r18,16(r5)
  806a74:	903ff626 	beq	r18,zero,806a50 <__alt_data_end+0xff806a50>
  806a78:	2c000017 	ldw	r16,0(r5)
  806a7c:	108000cc 	andi	r2,r2,3
  806a80:	2c800015 	stw	r18,0(r5)
  806a84:	84a1c83a 	sub	r16,r16,r18
  806a88:	1000131e 	bne	r2,zero,806ad8 <__sflush_r+0x158>
  806a8c:	28800517 	ldw	r2,20(r5)
  806a90:	88800215 	stw	r2,8(r17)
  806a94:	04000316 	blt	zero,r16,806aa4 <__sflush_r+0x124>
  806a98:	003fed06 	br	806a50 <__alt_data_end+0xff806a50>
  806a9c:	90a5883a 	add	r18,r18,r2
  806aa0:	043feb0e 	bge	zero,r16,806a50 <__alt_data_end+0xff806a50>
  806aa4:	88800917 	ldw	r2,36(r17)
  806aa8:	89400717 	ldw	r5,28(r17)
  806aac:	800f883a 	mov	r7,r16
  806ab0:	900d883a 	mov	r6,r18
  806ab4:	9809883a 	mov	r4,r19
  806ab8:	103ee83a 	callr	r2
  806abc:	80a1c83a 	sub	r16,r16,r2
  806ac0:	00bff616 	blt	zero,r2,806a9c <__alt_data_end+0xff806a9c>
  806ac4:	88c0030b 	ldhu	r3,12(r17)
  806ac8:	00bfffc4 	movi	r2,-1
  806acc:	18c01014 	ori	r3,r3,64
  806ad0:	88c0030d 	sth	r3,12(r17)
  806ad4:	003fdf06 	br	806a54 <__alt_data_end+0xff806a54>
  806ad8:	0005883a 	mov	r2,zero
  806adc:	003fec06 	br	806a90 <__alt_data_end+0xff806a90>
  806ae0:	88801415 	stw	r2,80(r17)
  806ae4:	003fd206 	br	806a30 <__alt_data_end+0xff806a30>
  806ae8:	28c00f17 	ldw	r3,60(r5)
  806aec:	00ffb316 	blt	zero,r3,8069bc <__alt_data_end+0xff8069bc>
  806af0:	003fd706 	br	806a50 <__alt_data_end+0xff806a50>
  806af4:	89400717 	ldw	r5,28(r17)
  806af8:	000d883a 	mov	r6,zero
  806afc:	01c00044 	movi	r7,1
  806b00:	9809883a 	mov	r4,r19
  806b04:	403ee83a 	callr	r8
  806b08:	100d883a 	mov	r6,r2
  806b0c:	00bfffc4 	movi	r2,-1
  806b10:	30801426 	beq	r6,r2,806b64 <__sflush_r+0x1e4>
  806b14:	8880030b 	ldhu	r2,12(r17)
  806b18:	8a000a17 	ldw	r8,40(r17)
  806b1c:	003fae06 	br	8069d8 <__alt_data_end+0xff8069d8>
  806b20:	98c00017 	ldw	r3,0(r19)
  806b24:	183fba26 	beq	r3,zero,806a10 <__alt_data_end+0xff806a10>
  806b28:	01000744 	movi	r4,29
  806b2c:	19000626 	beq	r3,r4,806b48 <__sflush_r+0x1c8>
  806b30:	01000584 	movi	r4,22
  806b34:	19000426 	beq	r3,r4,806b48 <__sflush_r+0x1c8>
  806b38:	88c0030b 	ldhu	r3,12(r17)
  806b3c:	18c01014 	ori	r3,r3,64
  806b40:	88c0030d 	sth	r3,12(r17)
  806b44:	003fc306 	br	806a54 <__alt_data_end+0xff806a54>
  806b48:	8880030b 	ldhu	r2,12(r17)
  806b4c:	88c00417 	ldw	r3,16(r17)
  806b50:	88000115 	stw	zero,4(r17)
  806b54:	10bdffcc 	andi	r2,r2,63487
  806b58:	8880030d 	sth	r2,12(r17)
  806b5c:	88c00015 	stw	r3,0(r17)
  806b60:	003fb306 	br	806a30 <__alt_data_end+0xff806a30>
  806b64:	98800017 	ldw	r2,0(r19)
  806b68:	103fea26 	beq	r2,zero,806b14 <__alt_data_end+0xff806b14>
  806b6c:	00c00744 	movi	r3,29
  806b70:	10c00226 	beq	r2,r3,806b7c <__sflush_r+0x1fc>
  806b74:	00c00584 	movi	r3,22
  806b78:	10c0031e 	bne	r2,r3,806b88 <__sflush_r+0x208>
  806b7c:	9c000015 	stw	r16,0(r19)
  806b80:	0005883a 	mov	r2,zero
  806b84:	003fb306 	br	806a54 <__alt_data_end+0xff806a54>
  806b88:	88c0030b 	ldhu	r3,12(r17)
  806b8c:	3005883a 	mov	r2,r6
  806b90:	18c01014 	ori	r3,r3,64
  806b94:	88c0030d 	sth	r3,12(r17)
  806b98:	003fae06 	br	806a54 <__alt_data_end+0xff806a54>

00806b9c <_fflush_r>:
  806b9c:	defffd04 	addi	sp,sp,-12
  806ba0:	dc000115 	stw	r16,4(sp)
  806ba4:	dfc00215 	stw	ra,8(sp)
  806ba8:	2021883a 	mov	r16,r4
  806bac:	20000226 	beq	r4,zero,806bb8 <_fflush_r+0x1c>
  806bb0:	20800e17 	ldw	r2,56(r4)
  806bb4:	10000c26 	beq	r2,zero,806be8 <_fflush_r+0x4c>
  806bb8:	2880030f 	ldh	r2,12(r5)
  806bbc:	1000051e 	bne	r2,zero,806bd4 <_fflush_r+0x38>
  806bc0:	0005883a 	mov	r2,zero
  806bc4:	dfc00217 	ldw	ra,8(sp)
  806bc8:	dc000117 	ldw	r16,4(sp)
  806bcc:	dec00304 	addi	sp,sp,12
  806bd0:	f800283a 	ret
  806bd4:	8009883a 	mov	r4,r16
  806bd8:	dfc00217 	ldw	ra,8(sp)
  806bdc:	dc000117 	ldw	r16,4(sp)
  806be0:	dec00304 	addi	sp,sp,12
  806be4:	08069801 	jmpi	806980 <__sflush_r>
  806be8:	d9400015 	stw	r5,0(sp)
  806bec:	0806f780 	call	806f78 <__sinit>
  806bf0:	d9400017 	ldw	r5,0(sp)
  806bf4:	003ff006 	br	806bb8 <__alt_data_end+0xff806bb8>

00806bf8 <fflush>:
  806bf8:	20000526 	beq	r4,zero,806c10 <fflush+0x18>
  806bfc:	00802074 	movhi	r2,129
  806c00:	109a8904 	addi	r2,r2,27172
  806c04:	200b883a 	mov	r5,r4
  806c08:	11000017 	ldw	r4,0(r2)
  806c0c:	0806b9c1 	jmpi	806b9c <_fflush_r>
  806c10:	00802074 	movhi	r2,129
  806c14:	109a8804 	addi	r2,r2,27168
  806c18:	11000017 	ldw	r4,0(r2)
  806c1c:	01402034 	movhi	r5,128
  806c20:	295ae704 	addi	r5,r5,27548
  806c24:	080797c1 	jmpi	80797c <_fwalk_reent>

00806c28 <__fp_unlock>:
  806c28:	0005883a 	mov	r2,zero
  806c2c:	f800283a 	ret

00806c30 <_cleanup_r>:
  806c30:	01402074 	movhi	r5,129
  806c34:	296e8904 	addi	r5,r5,-17884
  806c38:	080797c1 	jmpi	80797c <_fwalk_reent>

00806c3c <__sinit.part.1>:
  806c3c:	defff704 	addi	sp,sp,-36
  806c40:	00c02034 	movhi	r3,128
  806c44:	dfc00815 	stw	ra,32(sp)
  806c48:	ddc00715 	stw	r23,28(sp)
  806c4c:	dd800615 	stw	r22,24(sp)
  806c50:	dd400515 	stw	r21,20(sp)
  806c54:	dd000415 	stw	r20,16(sp)
  806c58:	dcc00315 	stw	r19,12(sp)
  806c5c:	dc800215 	stw	r18,8(sp)
  806c60:	dc400115 	stw	r17,4(sp)
  806c64:	dc000015 	stw	r16,0(sp)
  806c68:	18db0c04 	addi	r3,r3,27696
  806c6c:	24000117 	ldw	r16,4(r4)
  806c70:	20c00f15 	stw	r3,60(r4)
  806c74:	2080bb04 	addi	r2,r4,748
  806c78:	00c000c4 	movi	r3,3
  806c7c:	20c0b915 	stw	r3,740(r4)
  806c80:	2080ba15 	stw	r2,744(r4)
  806c84:	2000b815 	stw	zero,736(r4)
  806c88:	05c00204 	movi	r23,8
  806c8c:	00800104 	movi	r2,4
  806c90:	2025883a 	mov	r18,r4
  806c94:	b80d883a 	mov	r6,r23
  806c98:	81001704 	addi	r4,r16,92
  806c9c:	000b883a 	mov	r5,zero
  806ca0:	80000015 	stw	zero,0(r16)
  806ca4:	80000115 	stw	zero,4(r16)
  806ca8:	80000215 	stw	zero,8(r16)
  806cac:	8080030d 	sth	r2,12(r16)
  806cb0:	80001915 	stw	zero,100(r16)
  806cb4:	8000038d 	sth	zero,14(r16)
  806cb8:	80000415 	stw	zero,16(r16)
  806cbc:	80000515 	stw	zero,20(r16)
  806cc0:	80000615 	stw	zero,24(r16)
  806cc4:	080886c0 	call	80886c <memset>
  806cc8:	05802074 	movhi	r22,129
  806ccc:	94400217 	ldw	r17,8(r18)
  806cd0:	05402074 	movhi	r21,129
  806cd4:	05002074 	movhi	r20,129
  806cd8:	04c02074 	movhi	r19,129
  806cdc:	b5a7ef04 	addi	r22,r22,-24644
  806ce0:	ad680604 	addi	r21,r21,-24552
  806ce4:	a5282504 	addi	r20,r20,-24428
  806ce8:	9ce83c04 	addi	r19,r19,-24336
  806cec:	85800815 	stw	r22,32(r16)
  806cf0:	85400915 	stw	r21,36(r16)
  806cf4:	85000a15 	stw	r20,40(r16)
  806cf8:	84c00b15 	stw	r19,44(r16)
  806cfc:	84000715 	stw	r16,28(r16)
  806d00:	00800284 	movi	r2,10
  806d04:	8880030d 	sth	r2,12(r17)
  806d08:	00800044 	movi	r2,1
  806d0c:	b80d883a 	mov	r6,r23
  806d10:	89001704 	addi	r4,r17,92
  806d14:	000b883a 	mov	r5,zero
  806d18:	88000015 	stw	zero,0(r17)
  806d1c:	88000115 	stw	zero,4(r17)
  806d20:	88000215 	stw	zero,8(r17)
  806d24:	88001915 	stw	zero,100(r17)
  806d28:	8880038d 	sth	r2,14(r17)
  806d2c:	88000415 	stw	zero,16(r17)
  806d30:	88000515 	stw	zero,20(r17)
  806d34:	88000615 	stw	zero,24(r17)
  806d38:	080886c0 	call	80886c <memset>
  806d3c:	94000317 	ldw	r16,12(r18)
  806d40:	00800484 	movi	r2,18
  806d44:	8c400715 	stw	r17,28(r17)
  806d48:	8d800815 	stw	r22,32(r17)
  806d4c:	8d400915 	stw	r21,36(r17)
  806d50:	8d000a15 	stw	r20,40(r17)
  806d54:	8cc00b15 	stw	r19,44(r17)
  806d58:	8080030d 	sth	r2,12(r16)
  806d5c:	00800084 	movi	r2,2
  806d60:	80000015 	stw	zero,0(r16)
  806d64:	80000115 	stw	zero,4(r16)
  806d68:	80000215 	stw	zero,8(r16)
  806d6c:	80001915 	stw	zero,100(r16)
  806d70:	8080038d 	sth	r2,14(r16)
  806d74:	80000415 	stw	zero,16(r16)
  806d78:	80000515 	stw	zero,20(r16)
  806d7c:	80000615 	stw	zero,24(r16)
  806d80:	b80d883a 	mov	r6,r23
  806d84:	000b883a 	mov	r5,zero
  806d88:	81001704 	addi	r4,r16,92
  806d8c:	080886c0 	call	80886c <memset>
  806d90:	00800044 	movi	r2,1
  806d94:	84000715 	stw	r16,28(r16)
  806d98:	85800815 	stw	r22,32(r16)
  806d9c:	85400915 	stw	r21,36(r16)
  806da0:	85000a15 	stw	r20,40(r16)
  806da4:	84c00b15 	stw	r19,44(r16)
  806da8:	90800e15 	stw	r2,56(r18)
  806dac:	dfc00817 	ldw	ra,32(sp)
  806db0:	ddc00717 	ldw	r23,28(sp)
  806db4:	dd800617 	ldw	r22,24(sp)
  806db8:	dd400517 	ldw	r21,20(sp)
  806dbc:	dd000417 	ldw	r20,16(sp)
  806dc0:	dcc00317 	ldw	r19,12(sp)
  806dc4:	dc800217 	ldw	r18,8(sp)
  806dc8:	dc400117 	ldw	r17,4(sp)
  806dcc:	dc000017 	ldw	r16,0(sp)
  806dd0:	dec00904 	addi	sp,sp,36
  806dd4:	f800283a 	ret

00806dd8 <__fp_lock>:
  806dd8:	0005883a 	mov	r2,zero
  806ddc:	f800283a 	ret

00806de0 <__sfmoreglue>:
  806de0:	defffc04 	addi	sp,sp,-16
  806de4:	dc400115 	stw	r17,4(sp)
  806de8:	2c7fffc4 	addi	r17,r5,-1
  806dec:	8c401a24 	muli	r17,r17,104
  806df0:	dc800215 	stw	r18,8(sp)
  806df4:	2825883a 	mov	r18,r5
  806df8:	89401d04 	addi	r5,r17,116
  806dfc:	dc000015 	stw	r16,0(sp)
  806e00:	dfc00315 	stw	ra,12(sp)
  806e04:	0807cd80 	call	807cd8 <_malloc_r>
  806e08:	1021883a 	mov	r16,r2
  806e0c:	10000726 	beq	r2,zero,806e2c <__sfmoreglue+0x4c>
  806e10:	11000304 	addi	r4,r2,12
  806e14:	10000015 	stw	zero,0(r2)
  806e18:	14800115 	stw	r18,4(r2)
  806e1c:	11000215 	stw	r4,8(r2)
  806e20:	89801a04 	addi	r6,r17,104
  806e24:	000b883a 	mov	r5,zero
  806e28:	080886c0 	call	80886c <memset>
  806e2c:	8005883a 	mov	r2,r16
  806e30:	dfc00317 	ldw	ra,12(sp)
  806e34:	dc800217 	ldw	r18,8(sp)
  806e38:	dc400117 	ldw	r17,4(sp)
  806e3c:	dc000017 	ldw	r16,0(sp)
  806e40:	dec00404 	addi	sp,sp,16
  806e44:	f800283a 	ret

00806e48 <__sfp>:
  806e48:	defffb04 	addi	sp,sp,-20
  806e4c:	dc000015 	stw	r16,0(sp)
  806e50:	04002074 	movhi	r16,129
  806e54:	841a8804 	addi	r16,r16,27168
  806e58:	dcc00315 	stw	r19,12(sp)
  806e5c:	2027883a 	mov	r19,r4
  806e60:	81000017 	ldw	r4,0(r16)
  806e64:	dfc00415 	stw	ra,16(sp)
  806e68:	dc800215 	stw	r18,8(sp)
  806e6c:	20800e17 	ldw	r2,56(r4)
  806e70:	dc400115 	stw	r17,4(sp)
  806e74:	1000021e 	bne	r2,zero,806e80 <__sfp+0x38>
  806e78:	0806c3c0 	call	806c3c <__sinit.part.1>
  806e7c:	81000017 	ldw	r4,0(r16)
  806e80:	2480b804 	addi	r18,r4,736
  806e84:	047fffc4 	movi	r17,-1
  806e88:	91000117 	ldw	r4,4(r18)
  806e8c:	94000217 	ldw	r16,8(r18)
  806e90:	213fffc4 	addi	r4,r4,-1
  806e94:	20000a16 	blt	r4,zero,806ec0 <__sfp+0x78>
  806e98:	8080030f 	ldh	r2,12(r16)
  806e9c:	10000c26 	beq	r2,zero,806ed0 <__sfp+0x88>
  806ea0:	80c01d04 	addi	r3,r16,116
  806ea4:	00000206 	br	806eb0 <__sfp+0x68>
  806ea8:	18bfe60f 	ldh	r2,-104(r3)
  806eac:	10000826 	beq	r2,zero,806ed0 <__sfp+0x88>
  806eb0:	213fffc4 	addi	r4,r4,-1
  806eb4:	1c3ffd04 	addi	r16,r3,-12
  806eb8:	18c01a04 	addi	r3,r3,104
  806ebc:	247ffa1e 	bne	r4,r17,806ea8 <__alt_data_end+0xff806ea8>
  806ec0:	90800017 	ldw	r2,0(r18)
  806ec4:	10001d26 	beq	r2,zero,806f3c <__sfp+0xf4>
  806ec8:	1025883a 	mov	r18,r2
  806ecc:	003fee06 	br	806e88 <__alt_data_end+0xff806e88>
  806ed0:	00bfffc4 	movi	r2,-1
  806ed4:	8080038d 	sth	r2,14(r16)
  806ed8:	00800044 	movi	r2,1
  806edc:	8080030d 	sth	r2,12(r16)
  806ee0:	80001915 	stw	zero,100(r16)
  806ee4:	80000015 	stw	zero,0(r16)
  806ee8:	80000215 	stw	zero,8(r16)
  806eec:	80000115 	stw	zero,4(r16)
  806ef0:	80000415 	stw	zero,16(r16)
  806ef4:	80000515 	stw	zero,20(r16)
  806ef8:	80000615 	stw	zero,24(r16)
  806efc:	01800204 	movi	r6,8
  806f00:	000b883a 	mov	r5,zero
  806f04:	81001704 	addi	r4,r16,92
  806f08:	080886c0 	call	80886c <memset>
  806f0c:	8005883a 	mov	r2,r16
  806f10:	80000c15 	stw	zero,48(r16)
  806f14:	80000d15 	stw	zero,52(r16)
  806f18:	80001115 	stw	zero,68(r16)
  806f1c:	80001215 	stw	zero,72(r16)
  806f20:	dfc00417 	ldw	ra,16(sp)
  806f24:	dcc00317 	ldw	r19,12(sp)
  806f28:	dc800217 	ldw	r18,8(sp)
  806f2c:	dc400117 	ldw	r17,4(sp)
  806f30:	dc000017 	ldw	r16,0(sp)
  806f34:	dec00504 	addi	sp,sp,20
  806f38:	f800283a 	ret
  806f3c:	01400104 	movi	r5,4
  806f40:	9809883a 	mov	r4,r19
  806f44:	0806de00 	call	806de0 <__sfmoreglue>
  806f48:	90800015 	stw	r2,0(r18)
  806f4c:	103fde1e 	bne	r2,zero,806ec8 <__alt_data_end+0xff806ec8>
  806f50:	00800304 	movi	r2,12
  806f54:	98800015 	stw	r2,0(r19)
  806f58:	0005883a 	mov	r2,zero
  806f5c:	003ff006 	br	806f20 <__alt_data_end+0xff806f20>

00806f60 <_cleanup>:
  806f60:	00802074 	movhi	r2,129
  806f64:	109a8804 	addi	r2,r2,27168
  806f68:	11000017 	ldw	r4,0(r2)
  806f6c:	01402074 	movhi	r5,129
  806f70:	296e8904 	addi	r5,r5,-17884
  806f74:	080797c1 	jmpi	80797c <_fwalk_reent>

00806f78 <__sinit>:
  806f78:	20800e17 	ldw	r2,56(r4)
  806f7c:	10000126 	beq	r2,zero,806f84 <__sinit+0xc>
  806f80:	f800283a 	ret
  806f84:	0806c3c1 	jmpi	806c3c <__sinit.part.1>

00806f88 <__sfp_lock_acquire>:
  806f88:	f800283a 	ret

00806f8c <__sfp_lock_release>:
  806f8c:	f800283a 	ret

00806f90 <__sinit_lock_acquire>:
  806f90:	f800283a 	ret

00806f94 <__sinit_lock_release>:
  806f94:	f800283a 	ret

00806f98 <__fp_lock_all>:
  806f98:	00802074 	movhi	r2,129
  806f9c:	109a8904 	addi	r2,r2,27172
  806fa0:	11000017 	ldw	r4,0(r2)
  806fa4:	01402034 	movhi	r5,128
  806fa8:	295b7604 	addi	r5,r5,28120
  806fac:	08078b81 	jmpi	8078b8 <_fwalk>

00806fb0 <__fp_unlock_all>:
  806fb0:	00802074 	movhi	r2,129
  806fb4:	109a8904 	addi	r2,r2,27172
  806fb8:	11000017 	ldw	r4,0(r2)
  806fbc:	01402034 	movhi	r5,128
  806fc0:	295b0a04 	addi	r5,r5,27688
  806fc4:	08078b81 	jmpi	8078b8 <_fwalk>

00806fc8 <_malloc_trim_r>:
  806fc8:	defffb04 	addi	sp,sp,-20
  806fcc:	dcc00315 	stw	r19,12(sp)
  806fd0:	04c02074 	movhi	r19,129
  806fd4:	dc800215 	stw	r18,8(sp)
  806fd8:	dc400115 	stw	r17,4(sp)
  806fdc:	dc000015 	stw	r16,0(sp)
  806fe0:	dfc00415 	stw	ra,16(sp)
  806fe4:	2821883a 	mov	r16,r5
  806fe8:	9cd50404 	addi	r19,r19,21520
  806fec:	2025883a 	mov	r18,r4
  806ff0:	080e9580 	call	80e958 <__malloc_lock>
  806ff4:	98800217 	ldw	r2,8(r19)
  806ff8:	14400117 	ldw	r17,4(r2)
  806ffc:	00bfff04 	movi	r2,-4
  807000:	88a2703a 	and	r17,r17,r2
  807004:	8c21c83a 	sub	r16,r17,r16
  807008:	8403fbc4 	addi	r16,r16,4079
  80700c:	8020d33a 	srli	r16,r16,12
  807010:	0083ffc4 	movi	r2,4095
  807014:	843fffc4 	addi	r16,r16,-1
  807018:	8020933a 	slli	r16,r16,12
  80701c:	1400060e 	bge	r2,r16,807038 <_malloc_trim_r+0x70>
  807020:	000b883a 	mov	r5,zero
  807024:	9009883a 	mov	r4,r18
  807028:	0809f680 	call	809f68 <_sbrk_r>
  80702c:	98c00217 	ldw	r3,8(r19)
  807030:	1c47883a 	add	r3,r3,r17
  807034:	10c00a26 	beq	r2,r3,807060 <_malloc_trim_r+0x98>
  807038:	9009883a 	mov	r4,r18
  80703c:	080e97c0 	call	80e97c <__malloc_unlock>
  807040:	0005883a 	mov	r2,zero
  807044:	dfc00417 	ldw	ra,16(sp)
  807048:	dcc00317 	ldw	r19,12(sp)
  80704c:	dc800217 	ldw	r18,8(sp)
  807050:	dc400117 	ldw	r17,4(sp)
  807054:	dc000017 	ldw	r16,0(sp)
  807058:	dec00504 	addi	sp,sp,20
  80705c:	f800283a 	ret
  807060:	040bc83a 	sub	r5,zero,r16
  807064:	9009883a 	mov	r4,r18
  807068:	0809f680 	call	809f68 <_sbrk_r>
  80706c:	00ffffc4 	movi	r3,-1
  807070:	10c00d26 	beq	r2,r3,8070a8 <_malloc_trim_r+0xe0>
  807074:	00c020b4 	movhi	r3,130
  807078:	18f15304 	addi	r3,r3,-15028
  80707c:	18800017 	ldw	r2,0(r3)
  807080:	99000217 	ldw	r4,8(r19)
  807084:	8c23c83a 	sub	r17,r17,r16
  807088:	8c400054 	ori	r17,r17,1
  80708c:	1421c83a 	sub	r16,r2,r16
  807090:	24400115 	stw	r17,4(r4)
  807094:	9009883a 	mov	r4,r18
  807098:	1c000015 	stw	r16,0(r3)
  80709c:	080e97c0 	call	80e97c <__malloc_unlock>
  8070a0:	00800044 	movi	r2,1
  8070a4:	003fe706 	br	807044 <__alt_data_end+0xff807044>
  8070a8:	000b883a 	mov	r5,zero
  8070ac:	9009883a 	mov	r4,r18
  8070b0:	0809f680 	call	809f68 <_sbrk_r>
  8070b4:	99000217 	ldw	r4,8(r19)
  8070b8:	014003c4 	movi	r5,15
  8070bc:	1107c83a 	sub	r3,r2,r4
  8070c0:	28ffdd0e 	bge	r5,r3,807038 <__alt_data_end+0xff807038>
  8070c4:	01402074 	movhi	r5,129
  8070c8:	295a8b04 	addi	r5,r5,27180
  8070cc:	29400017 	ldw	r5,0(r5)
  8070d0:	18c00054 	ori	r3,r3,1
  8070d4:	20c00115 	stw	r3,4(r4)
  8070d8:	00c020b4 	movhi	r3,130
  8070dc:	1145c83a 	sub	r2,r2,r5
  8070e0:	18f15304 	addi	r3,r3,-15028
  8070e4:	18800015 	stw	r2,0(r3)
  8070e8:	003fd306 	br	807038 <__alt_data_end+0xff807038>

008070ec <_free_r>:
  8070ec:	28004126 	beq	r5,zero,8071f4 <_free_r+0x108>
  8070f0:	defffd04 	addi	sp,sp,-12
  8070f4:	dc400115 	stw	r17,4(sp)
  8070f8:	dc000015 	stw	r16,0(sp)
  8070fc:	2023883a 	mov	r17,r4
  807100:	2821883a 	mov	r16,r5
  807104:	dfc00215 	stw	ra,8(sp)
  807108:	080e9580 	call	80e958 <__malloc_lock>
  80710c:	81ffff17 	ldw	r7,-4(r16)
  807110:	00bfff84 	movi	r2,-2
  807114:	01002074 	movhi	r4,129
  807118:	81bffe04 	addi	r6,r16,-8
  80711c:	3884703a 	and	r2,r7,r2
  807120:	21150404 	addi	r4,r4,21520
  807124:	308b883a 	add	r5,r6,r2
  807128:	2a400117 	ldw	r9,4(r5)
  80712c:	22000217 	ldw	r8,8(r4)
  807130:	00ffff04 	movi	r3,-4
  807134:	48c6703a 	and	r3,r9,r3
  807138:	2a005726 	beq	r5,r8,807298 <_free_r+0x1ac>
  80713c:	28c00115 	stw	r3,4(r5)
  807140:	39c0004c 	andi	r7,r7,1
  807144:	3800091e 	bne	r7,zero,80716c <_free_r+0x80>
  807148:	823ffe17 	ldw	r8,-8(r16)
  80714c:	22400204 	addi	r9,r4,8
  807150:	320dc83a 	sub	r6,r6,r8
  807154:	31c00217 	ldw	r7,8(r6)
  807158:	1205883a 	add	r2,r2,r8
  80715c:	3a406526 	beq	r7,r9,8072f4 <_free_r+0x208>
  807160:	32000317 	ldw	r8,12(r6)
  807164:	3a000315 	stw	r8,12(r7)
  807168:	41c00215 	stw	r7,8(r8)
  80716c:	28cf883a 	add	r7,r5,r3
  807170:	39c00117 	ldw	r7,4(r7)
  807174:	39c0004c 	andi	r7,r7,1
  807178:	38003a26 	beq	r7,zero,807264 <_free_r+0x178>
  80717c:	10c00054 	ori	r3,r2,1
  807180:	30c00115 	stw	r3,4(r6)
  807184:	3087883a 	add	r3,r6,r2
  807188:	18800015 	stw	r2,0(r3)
  80718c:	00c07fc4 	movi	r3,511
  807190:	18801936 	bltu	r3,r2,8071f8 <_free_r+0x10c>
  807194:	1004d0fa 	srli	r2,r2,3
  807198:	01c00044 	movi	r7,1
  80719c:	21400117 	ldw	r5,4(r4)
  8071a0:	10c00044 	addi	r3,r2,1
  8071a4:	18c7883a 	add	r3,r3,r3
  8071a8:	1005d0ba 	srai	r2,r2,2
  8071ac:	18c7883a 	add	r3,r3,r3
  8071b0:	18c7883a 	add	r3,r3,r3
  8071b4:	1907883a 	add	r3,r3,r4
  8071b8:	3884983a 	sll	r2,r7,r2
  8071bc:	19c00017 	ldw	r7,0(r3)
  8071c0:	1a3ffe04 	addi	r8,r3,-8
  8071c4:	1144b03a 	or	r2,r2,r5
  8071c8:	32000315 	stw	r8,12(r6)
  8071cc:	31c00215 	stw	r7,8(r6)
  8071d0:	20800115 	stw	r2,4(r4)
  8071d4:	19800015 	stw	r6,0(r3)
  8071d8:	39800315 	stw	r6,12(r7)
  8071dc:	8809883a 	mov	r4,r17
  8071e0:	dfc00217 	ldw	ra,8(sp)
  8071e4:	dc400117 	ldw	r17,4(sp)
  8071e8:	dc000017 	ldw	r16,0(sp)
  8071ec:	dec00304 	addi	sp,sp,12
  8071f0:	080e97c1 	jmpi	80e97c <__malloc_unlock>
  8071f4:	f800283a 	ret
  8071f8:	100ad27a 	srli	r5,r2,9
  8071fc:	00c00104 	movi	r3,4
  807200:	19404a36 	bltu	r3,r5,80732c <_free_r+0x240>
  807204:	100ad1ba 	srli	r5,r2,6
  807208:	28c00e44 	addi	r3,r5,57
  80720c:	18c7883a 	add	r3,r3,r3
  807210:	29400e04 	addi	r5,r5,56
  807214:	18c7883a 	add	r3,r3,r3
  807218:	18c7883a 	add	r3,r3,r3
  80721c:	1909883a 	add	r4,r3,r4
  807220:	20c00017 	ldw	r3,0(r4)
  807224:	01c02074 	movhi	r7,129
  807228:	213ffe04 	addi	r4,r4,-8
  80722c:	39d50404 	addi	r7,r7,21520
  807230:	20c04426 	beq	r4,r3,807344 <_free_r+0x258>
  807234:	01ffff04 	movi	r7,-4
  807238:	19400117 	ldw	r5,4(r3)
  80723c:	29ca703a 	and	r5,r5,r7
  807240:	1140022e 	bgeu	r2,r5,80724c <_free_r+0x160>
  807244:	18c00217 	ldw	r3,8(r3)
  807248:	20fffb1e 	bne	r4,r3,807238 <__alt_data_end+0xff807238>
  80724c:	19000317 	ldw	r4,12(r3)
  807250:	31000315 	stw	r4,12(r6)
  807254:	30c00215 	stw	r3,8(r6)
  807258:	21800215 	stw	r6,8(r4)
  80725c:	19800315 	stw	r6,12(r3)
  807260:	003fde06 	br	8071dc <__alt_data_end+0xff8071dc>
  807264:	29c00217 	ldw	r7,8(r5)
  807268:	10c5883a 	add	r2,r2,r3
  80726c:	00c02074 	movhi	r3,129
  807270:	18d50604 	addi	r3,r3,21528
  807274:	38c03b26 	beq	r7,r3,807364 <_free_r+0x278>
  807278:	2a000317 	ldw	r8,12(r5)
  80727c:	11400054 	ori	r5,r2,1
  807280:	3087883a 	add	r3,r6,r2
  807284:	3a000315 	stw	r8,12(r7)
  807288:	41c00215 	stw	r7,8(r8)
  80728c:	31400115 	stw	r5,4(r6)
  807290:	18800015 	stw	r2,0(r3)
  807294:	003fbd06 	br	80718c <__alt_data_end+0xff80718c>
  807298:	39c0004c 	andi	r7,r7,1
  80729c:	10c5883a 	add	r2,r2,r3
  8072a0:	3800071e 	bne	r7,zero,8072c0 <_free_r+0x1d4>
  8072a4:	81fffe17 	ldw	r7,-8(r16)
  8072a8:	31cdc83a 	sub	r6,r6,r7
  8072ac:	30c00317 	ldw	r3,12(r6)
  8072b0:	31400217 	ldw	r5,8(r6)
  8072b4:	11c5883a 	add	r2,r2,r7
  8072b8:	28c00315 	stw	r3,12(r5)
  8072bc:	19400215 	stw	r5,8(r3)
  8072c0:	10c00054 	ori	r3,r2,1
  8072c4:	30c00115 	stw	r3,4(r6)
  8072c8:	00c02074 	movhi	r3,129
  8072cc:	18da8c04 	addi	r3,r3,27184
  8072d0:	18c00017 	ldw	r3,0(r3)
  8072d4:	21800215 	stw	r6,8(r4)
  8072d8:	10ffc036 	bltu	r2,r3,8071dc <__alt_data_end+0xff8071dc>
  8072dc:	008020b4 	movhi	r2,130
  8072e0:	10b14a04 	addi	r2,r2,-15064
  8072e4:	11400017 	ldw	r5,0(r2)
  8072e8:	8809883a 	mov	r4,r17
  8072ec:	0806fc80 	call	806fc8 <_malloc_trim_r>
  8072f0:	003fba06 	br	8071dc <__alt_data_end+0xff8071dc>
  8072f4:	28c9883a 	add	r4,r5,r3
  8072f8:	21000117 	ldw	r4,4(r4)
  8072fc:	2100004c 	andi	r4,r4,1
  807300:	2000391e 	bne	r4,zero,8073e8 <_free_r+0x2fc>
  807304:	29c00217 	ldw	r7,8(r5)
  807308:	29000317 	ldw	r4,12(r5)
  80730c:	1885883a 	add	r2,r3,r2
  807310:	10c00054 	ori	r3,r2,1
  807314:	39000315 	stw	r4,12(r7)
  807318:	21c00215 	stw	r7,8(r4)
  80731c:	30c00115 	stw	r3,4(r6)
  807320:	308d883a 	add	r6,r6,r2
  807324:	30800015 	stw	r2,0(r6)
  807328:	003fac06 	br	8071dc <__alt_data_end+0xff8071dc>
  80732c:	00c00504 	movi	r3,20
  807330:	19401536 	bltu	r3,r5,807388 <_free_r+0x29c>
  807334:	28c01704 	addi	r3,r5,92
  807338:	18c7883a 	add	r3,r3,r3
  80733c:	294016c4 	addi	r5,r5,91
  807340:	003fb406 	br	807214 <__alt_data_end+0xff807214>
  807344:	280bd0ba 	srai	r5,r5,2
  807348:	00c00044 	movi	r3,1
  80734c:	38800117 	ldw	r2,4(r7)
  807350:	194a983a 	sll	r5,r3,r5
  807354:	2007883a 	mov	r3,r4
  807358:	2884b03a 	or	r2,r5,r2
  80735c:	38800115 	stw	r2,4(r7)
  807360:	003fbb06 	br	807250 <__alt_data_end+0xff807250>
  807364:	21800515 	stw	r6,20(r4)
  807368:	21800415 	stw	r6,16(r4)
  80736c:	10c00054 	ori	r3,r2,1
  807370:	31c00315 	stw	r7,12(r6)
  807374:	31c00215 	stw	r7,8(r6)
  807378:	30c00115 	stw	r3,4(r6)
  80737c:	308d883a 	add	r6,r6,r2
  807380:	30800015 	stw	r2,0(r6)
  807384:	003f9506 	br	8071dc <__alt_data_end+0xff8071dc>
  807388:	00c01504 	movi	r3,84
  80738c:	19400536 	bltu	r3,r5,8073a4 <_free_r+0x2b8>
  807390:	100ad33a 	srli	r5,r2,12
  807394:	28c01bc4 	addi	r3,r5,111
  807398:	18c7883a 	add	r3,r3,r3
  80739c:	29401b84 	addi	r5,r5,110
  8073a0:	003f9c06 	br	807214 <__alt_data_end+0xff807214>
  8073a4:	00c05504 	movi	r3,340
  8073a8:	19400536 	bltu	r3,r5,8073c0 <_free_r+0x2d4>
  8073ac:	100ad3fa 	srli	r5,r2,15
  8073b0:	28c01e04 	addi	r3,r5,120
  8073b4:	18c7883a 	add	r3,r3,r3
  8073b8:	29401dc4 	addi	r5,r5,119
  8073bc:	003f9506 	br	807214 <__alt_data_end+0xff807214>
  8073c0:	00c15504 	movi	r3,1364
  8073c4:	19400536 	bltu	r3,r5,8073dc <_free_r+0x2f0>
  8073c8:	100ad4ba 	srli	r5,r2,18
  8073cc:	28c01f44 	addi	r3,r5,125
  8073d0:	18c7883a 	add	r3,r3,r3
  8073d4:	29401f04 	addi	r5,r5,124
  8073d8:	003f8e06 	br	807214 <__alt_data_end+0xff807214>
  8073dc:	00c03f84 	movi	r3,254
  8073e0:	01401f84 	movi	r5,126
  8073e4:	003f8b06 	br	807214 <__alt_data_end+0xff807214>
  8073e8:	10c00054 	ori	r3,r2,1
  8073ec:	30c00115 	stw	r3,4(r6)
  8073f0:	308d883a 	add	r6,r6,r2
  8073f4:	30800015 	stw	r2,0(r6)
  8073f8:	003f7806 	br	8071dc <__alt_data_end+0xff8071dc>

008073fc <__sfvwrite_r>:
  8073fc:	30800217 	ldw	r2,8(r6)
  807400:	10006726 	beq	r2,zero,8075a0 <__sfvwrite_r+0x1a4>
  807404:	28c0030b 	ldhu	r3,12(r5)
  807408:	defff404 	addi	sp,sp,-48
  80740c:	dd400715 	stw	r21,28(sp)
  807410:	dd000615 	stw	r20,24(sp)
  807414:	dc000215 	stw	r16,8(sp)
  807418:	dfc00b15 	stw	ra,44(sp)
  80741c:	df000a15 	stw	fp,40(sp)
  807420:	ddc00915 	stw	r23,36(sp)
  807424:	dd800815 	stw	r22,32(sp)
  807428:	dcc00515 	stw	r19,20(sp)
  80742c:	dc800415 	stw	r18,16(sp)
  807430:	dc400315 	stw	r17,12(sp)
  807434:	1880020c 	andi	r2,r3,8
  807438:	2821883a 	mov	r16,r5
  80743c:	202b883a 	mov	r21,r4
  807440:	3029883a 	mov	r20,r6
  807444:	10002726 	beq	r2,zero,8074e4 <__sfvwrite_r+0xe8>
  807448:	28800417 	ldw	r2,16(r5)
  80744c:	10002526 	beq	r2,zero,8074e4 <__sfvwrite_r+0xe8>
  807450:	1880008c 	andi	r2,r3,2
  807454:	a4400017 	ldw	r17,0(r20)
  807458:	10002a26 	beq	r2,zero,807504 <__sfvwrite_r+0x108>
  80745c:	05a00034 	movhi	r22,32768
  807460:	0027883a 	mov	r19,zero
  807464:	0025883a 	mov	r18,zero
  807468:	b5bf0004 	addi	r22,r22,-1024
  80746c:	980d883a 	mov	r6,r19
  807470:	a809883a 	mov	r4,r21
  807474:	90004626 	beq	r18,zero,807590 <__sfvwrite_r+0x194>
  807478:	900f883a 	mov	r7,r18
  80747c:	b480022e 	bgeu	r22,r18,807488 <__sfvwrite_r+0x8c>
  807480:	01e00034 	movhi	r7,32768
  807484:	39ff0004 	addi	r7,r7,-1024
  807488:	80800917 	ldw	r2,36(r16)
  80748c:	81400717 	ldw	r5,28(r16)
  807490:	103ee83a 	callr	r2
  807494:	0080570e 	bge	zero,r2,8075f4 <__sfvwrite_r+0x1f8>
  807498:	a0c00217 	ldw	r3,8(r20)
  80749c:	98a7883a 	add	r19,r19,r2
  8074a0:	90a5c83a 	sub	r18,r18,r2
  8074a4:	1885c83a 	sub	r2,r3,r2
  8074a8:	a0800215 	stw	r2,8(r20)
  8074ac:	103fef1e 	bne	r2,zero,80746c <__alt_data_end+0xff80746c>
  8074b0:	0005883a 	mov	r2,zero
  8074b4:	dfc00b17 	ldw	ra,44(sp)
  8074b8:	df000a17 	ldw	fp,40(sp)
  8074bc:	ddc00917 	ldw	r23,36(sp)
  8074c0:	dd800817 	ldw	r22,32(sp)
  8074c4:	dd400717 	ldw	r21,28(sp)
  8074c8:	dd000617 	ldw	r20,24(sp)
  8074cc:	dcc00517 	ldw	r19,20(sp)
  8074d0:	dc800417 	ldw	r18,16(sp)
  8074d4:	dc400317 	ldw	r17,12(sp)
  8074d8:	dc000217 	ldw	r16,8(sp)
  8074dc:	dec00c04 	addi	sp,sp,48
  8074e0:	f800283a 	ret
  8074e4:	800b883a 	mov	r5,r16
  8074e8:	a809883a 	mov	r4,r21
  8074ec:	080447c0 	call	80447c <__swsetup_r>
  8074f0:	1000eb1e 	bne	r2,zero,8078a0 <__sfvwrite_r+0x4a4>
  8074f4:	80c0030b 	ldhu	r3,12(r16)
  8074f8:	a4400017 	ldw	r17,0(r20)
  8074fc:	1880008c 	andi	r2,r3,2
  807500:	103fd61e 	bne	r2,zero,80745c <__alt_data_end+0xff80745c>
  807504:	1880004c 	andi	r2,r3,1
  807508:	10003f1e 	bne	r2,zero,807608 <__sfvwrite_r+0x20c>
  80750c:	0039883a 	mov	fp,zero
  807510:	0025883a 	mov	r18,zero
  807514:	90001a26 	beq	r18,zero,807580 <__sfvwrite_r+0x184>
  807518:	1880800c 	andi	r2,r3,512
  80751c:	84c00217 	ldw	r19,8(r16)
  807520:	10002126 	beq	r2,zero,8075a8 <__sfvwrite_r+0x1ac>
  807524:	982f883a 	mov	r23,r19
  807528:	94c09336 	bltu	r18,r19,807778 <__sfvwrite_r+0x37c>
  80752c:	1881200c 	andi	r2,r3,1152
  807530:	10009e1e 	bne	r2,zero,8077ac <__sfvwrite_r+0x3b0>
  807534:	81000017 	ldw	r4,0(r16)
  807538:	b80d883a 	mov	r6,r23
  80753c:	e00b883a 	mov	r5,fp
  807540:	08087100 	call	808710 <memmove>
  807544:	80c00217 	ldw	r3,8(r16)
  807548:	81000017 	ldw	r4,0(r16)
  80754c:	9005883a 	mov	r2,r18
  807550:	1ce7c83a 	sub	r19,r3,r19
  807554:	25cf883a 	add	r7,r4,r23
  807558:	84c00215 	stw	r19,8(r16)
  80755c:	81c00015 	stw	r7,0(r16)
  807560:	a0c00217 	ldw	r3,8(r20)
  807564:	e0b9883a 	add	fp,fp,r2
  807568:	90a5c83a 	sub	r18,r18,r2
  80756c:	18a7c83a 	sub	r19,r3,r2
  807570:	a4c00215 	stw	r19,8(r20)
  807574:	983fce26 	beq	r19,zero,8074b0 <__alt_data_end+0xff8074b0>
  807578:	80c0030b 	ldhu	r3,12(r16)
  80757c:	903fe61e 	bne	r18,zero,807518 <__alt_data_end+0xff807518>
  807580:	8f000017 	ldw	fp,0(r17)
  807584:	8c800117 	ldw	r18,4(r17)
  807588:	8c400204 	addi	r17,r17,8
  80758c:	003fe106 	br	807514 <__alt_data_end+0xff807514>
  807590:	8cc00017 	ldw	r19,0(r17)
  807594:	8c800117 	ldw	r18,4(r17)
  807598:	8c400204 	addi	r17,r17,8
  80759c:	003fb306 	br	80746c <__alt_data_end+0xff80746c>
  8075a0:	0005883a 	mov	r2,zero
  8075a4:	f800283a 	ret
  8075a8:	81000017 	ldw	r4,0(r16)
  8075ac:	80800417 	ldw	r2,16(r16)
  8075b0:	11005736 	bltu	r2,r4,807710 <__sfvwrite_r+0x314>
  8075b4:	85c00517 	ldw	r23,20(r16)
  8075b8:	95c05536 	bltu	r18,r23,807710 <__sfvwrite_r+0x314>
  8075bc:	00a00034 	movhi	r2,32768
  8075c0:	10bfffc4 	addi	r2,r2,-1
  8075c4:	9009883a 	mov	r4,r18
  8075c8:	1480012e 	bgeu	r2,r18,8075d0 <__sfvwrite_r+0x1d4>
  8075cc:	1009883a 	mov	r4,r2
  8075d0:	b80b883a 	mov	r5,r23
  8075d4:	080cc900 	call	80cc90 <__divsi3>
  8075d8:	15cf383a 	mul	r7,r2,r23
  8075dc:	81400717 	ldw	r5,28(r16)
  8075e0:	80800917 	ldw	r2,36(r16)
  8075e4:	e00d883a 	mov	r6,fp
  8075e8:	a809883a 	mov	r4,r21
  8075ec:	103ee83a 	callr	r2
  8075f0:	00bfdb16 	blt	zero,r2,807560 <__alt_data_end+0xff807560>
  8075f4:	8080030b 	ldhu	r2,12(r16)
  8075f8:	10801014 	ori	r2,r2,64
  8075fc:	8080030d 	sth	r2,12(r16)
  807600:	00bfffc4 	movi	r2,-1
  807604:	003fab06 	br	8074b4 <__alt_data_end+0xff8074b4>
  807608:	0027883a 	mov	r19,zero
  80760c:	0011883a 	mov	r8,zero
  807610:	0039883a 	mov	fp,zero
  807614:	0025883a 	mov	r18,zero
  807618:	90001f26 	beq	r18,zero,807698 <__sfvwrite_r+0x29c>
  80761c:	40005a26 	beq	r8,zero,807788 <__sfvwrite_r+0x38c>
  807620:	982d883a 	mov	r22,r19
  807624:	94c0012e 	bgeu	r18,r19,80762c <__sfvwrite_r+0x230>
  807628:	902d883a 	mov	r22,r18
  80762c:	81000017 	ldw	r4,0(r16)
  807630:	80800417 	ldw	r2,16(r16)
  807634:	b02f883a 	mov	r23,r22
  807638:	81c00517 	ldw	r7,20(r16)
  80763c:	1100032e 	bgeu	r2,r4,80764c <__sfvwrite_r+0x250>
  807640:	80c00217 	ldw	r3,8(r16)
  807644:	38c7883a 	add	r3,r7,r3
  807648:	1d801816 	blt	r3,r22,8076ac <__sfvwrite_r+0x2b0>
  80764c:	b1c03e16 	blt	r22,r7,807748 <__sfvwrite_r+0x34c>
  807650:	80800917 	ldw	r2,36(r16)
  807654:	81400717 	ldw	r5,28(r16)
  807658:	e00d883a 	mov	r6,fp
  80765c:	da000115 	stw	r8,4(sp)
  807660:	a809883a 	mov	r4,r21
  807664:	103ee83a 	callr	r2
  807668:	102f883a 	mov	r23,r2
  80766c:	da000117 	ldw	r8,4(sp)
  807670:	00bfe00e 	bge	zero,r2,8075f4 <__alt_data_end+0xff8075f4>
  807674:	9de7c83a 	sub	r19,r19,r23
  807678:	98001f26 	beq	r19,zero,8076f8 <__sfvwrite_r+0x2fc>
  80767c:	a0800217 	ldw	r2,8(r20)
  807680:	e5f9883a 	add	fp,fp,r23
  807684:	95e5c83a 	sub	r18,r18,r23
  807688:	15efc83a 	sub	r23,r2,r23
  80768c:	a5c00215 	stw	r23,8(r20)
  807690:	b83f8726 	beq	r23,zero,8074b0 <__alt_data_end+0xff8074b0>
  807694:	903fe11e 	bne	r18,zero,80761c <__alt_data_end+0xff80761c>
  807698:	8f000017 	ldw	fp,0(r17)
  80769c:	8c800117 	ldw	r18,4(r17)
  8076a0:	0011883a 	mov	r8,zero
  8076a4:	8c400204 	addi	r17,r17,8
  8076a8:	003fdb06 	br	807618 <__alt_data_end+0xff807618>
  8076ac:	180d883a 	mov	r6,r3
  8076b0:	e00b883a 	mov	r5,fp
  8076b4:	da000115 	stw	r8,4(sp)
  8076b8:	d8c00015 	stw	r3,0(sp)
  8076bc:	08087100 	call	808710 <memmove>
  8076c0:	d8c00017 	ldw	r3,0(sp)
  8076c4:	80800017 	ldw	r2,0(r16)
  8076c8:	800b883a 	mov	r5,r16
  8076cc:	a809883a 	mov	r4,r21
  8076d0:	10c5883a 	add	r2,r2,r3
  8076d4:	80800015 	stw	r2,0(r16)
  8076d8:	d8c00015 	stw	r3,0(sp)
  8076dc:	0806b9c0 	call	806b9c <_fflush_r>
  8076e0:	d8c00017 	ldw	r3,0(sp)
  8076e4:	da000117 	ldw	r8,4(sp)
  8076e8:	103fc21e 	bne	r2,zero,8075f4 <__alt_data_end+0xff8075f4>
  8076ec:	182f883a 	mov	r23,r3
  8076f0:	9de7c83a 	sub	r19,r19,r23
  8076f4:	983fe11e 	bne	r19,zero,80767c <__alt_data_end+0xff80767c>
  8076f8:	800b883a 	mov	r5,r16
  8076fc:	a809883a 	mov	r4,r21
  807700:	0806b9c0 	call	806b9c <_fflush_r>
  807704:	103fbb1e 	bne	r2,zero,8075f4 <__alt_data_end+0xff8075f4>
  807708:	0011883a 	mov	r8,zero
  80770c:	003fdb06 	br	80767c <__alt_data_end+0xff80767c>
  807710:	94c0012e 	bgeu	r18,r19,807718 <__sfvwrite_r+0x31c>
  807714:	9027883a 	mov	r19,r18
  807718:	980d883a 	mov	r6,r19
  80771c:	e00b883a 	mov	r5,fp
  807720:	08087100 	call	808710 <memmove>
  807724:	80800217 	ldw	r2,8(r16)
  807728:	80c00017 	ldw	r3,0(r16)
  80772c:	14c5c83a 	sub	r2,r2,r19
  807730:	1cc7883a 	add	r3,r3,r19
  807734:	80800215 	stw	r2,8(r16)
  807738:	80c00015 	stw	r3,0(r16)
  80773c:	10004326 	beq	r2,zero,80784c <__sfvwrite_r+0x450>
  807740:	9805883a 	mov	r2,r19
  807744:	003f8606 	br	807560 <__alt_data_end+0xff807560>
  807748:	b00d883a 	mov	r6,r22
  80774c:	e00b883a 	mov	r5,fp
  807750:	da000115 	stw	r8,4(sp)
  807754:	08087100 	call	808710 <memmove>
  807758:	80800217 	ldw	r2,8(r16)
  80775c:	80c00017 	ldw	r3,0(r16)
  807760:	da000117 	ldw	r8,4(sp)
  807764:	1585c83a 	sub	r2,r2,r22
  807768:	1dad883a 	add	r22,r3,r22
  80776c:	80800215 	stw	r2,8(r16)
  807770:	85800015 	stw	r22,0(r16)
  807774:	003fbf06 	br	807674 <__alt_data_end+0xff807674>
  807778:	81000017 	ldw	r4,0(r16)
  80777c:	9027883a 	mov	r19,r18
  807780:	902f883a 	mov	r23,r18
  807784:	003f6c06 	br	807538 <__alt_data_end+0xff807538>
  807788:	900d883a 	mov	r6,r18
  80778c:	01400284 	movi	r5,10
  807790:	e009883a 	mov	r4,fp
  807794:	08084e40 	call	8084e4 <memchr>
  807798:	10003e26 	beq	r2,zero,807894 <__sfvwrite_r+0x498>
  80779c:	10800044 	addi	r2,r2,1
  8077a0:	1727c83a 	sub	r19,r2,fp
  8077a4:	02000044 	movi	r8,1
  8077a8:	003f9d06 	br	807620 <__alt_data_end+0xff807620>
  8077ac:	80800517 	ldw	r2,20(r16)
  8077b0:	81400417 	ldw	r5,16(r16)
  8077b4:	81c00017 	ldw	r7,0(r16)
  8077b8:	10a7883a 	add	r19,r2,r2
  8077bc:	9885883a 	add	r2,r19,r2
  8077c0:	1026d7fa 	srli	r19,r2,31
  8077c4:	396dc83a 	sub	r22,r7,r5
  8077c8:	b1000044 	addi	r4,r22,1
  8077cc:	9885883a 	add	r2,r19,r2
  8077d0:	1027d07a 	srai	r19,r2,1
  8077d4:	2485883a 	add	r2,r4,r18
  8077d8:	980d883a 	mov	r6,r19
  8077dc:	9880022e 	bgeu	r19,r2,8077e8 <__sfvwrite_r+0x3ec>
  8077e0:	1027883a 	mov	r19,r2
  8077e4:	100d883a 	mov	r6,r2
  8077e8:	18c1000c 	andi	r3,r3,1024
  8077ec:	18001c26 	beq	r3,zero,807860 <__sfvwrite_r+0x464>
  8077f0:	300b883a 	mov	r5,r6
  8077f4:	a809883a 	mov	r4,r21
  8077f8:	0807cd80 	call	807cd8 <_malloc_r>
  8077fc:	102f883a 	mov	r23,r2
  807800:	10002926 	beq	r2,zero,8078a8 <__sfvwrite_r+0x4ac>
  807804:	81400417 	ldw	r5,16(r16)
  807808:	b00d883a 	mov	r6,r22
  80780c:	1009883a 	mov	r4,r2
  807810:	08085c80 	call	8085c8 <memcpy>
  807814:	8080030b 	ldhu	r2,12(r16)
  807818:	00fedfc4 	movi	r3,-1153
  80781c:	10c4703a 	and	r2,r2,r3
  807820:	10802014 	ori	r2,r2,128
  807824:	8080030d 	sth	r2,12(r16)
  807828:	bd89883a 	add	r4,r23,r22
  80782c:	9d8fc83a 	sub	r7,r19,r22
  807830:	85c00415 	stw	r23,16(r16)
  807834:	84c00515 	stw	r19,20(r16)
  807838:	81000015 	stw	r4,0(r16)
  80783c:	9027883a 	mov	r19,r18
  807840:	81c00215 	stw	r7,8(r16)
  807844:	902f883a 	mov	r23,r18
  807848:	003f3b06 	br	807538 <__alt_data_end+0xff807538>
  80784c:	800b883a 	mov	r5,r16
  807850:	a809883a 	mov	r4,r21
  807854:	0806b9c0 	call	806b9c <_fflush_r>
  807858:	103fb926 	beq	r2,zero,807740 <__alt_data_end+0xff807740>
  80785c:	003f6506 	br	8075f4 <__alt_data_end+0xff8075f4>
  807860:	a809883a 	mov	r4,r21
  807864:	08099900 	call	809990 <_realloc_r>
  807868:	102f883a 	mov	r23,r2
  80786c:	103fee1e 	bne	r2,zero,807828 <__alt_data_end+0xff807828>
  807870:	81400417 	ldw	r5,16(r16)
  807874:	a809883a 	mov	r4,r21
  807878:	08070ec0 	call	8070ec <_free_r>
  80787c:	8080030b 	ldhu	r2,12(r16)
  807880:	00ffdfc4 	movi	r3,-129
  807884:	1884703a 	and	r2,r3,r2
  807888:	00c00304 	movi	r3,12
  80788c:	a8c00015 	stw	r3,0(r21)
  807890:	003f5906 	br	8075f8 <__alt_data_end+0xff8075f8>
  807894:	94c00044 	addi	r19,r18,1
  807898:	02000044 	movi	r8,1
  80789c:	003f6006 	br	807620 <__alt_data_end+0xff807620>
  8078a0:	00bfffc4 	movi	r2,-1
  8078a4:	003f0306 	br	8074b4 <__alt_data_end+0xff8074b4>
  8078a8:	00800304 	movi	r2,12
  8078ac:	a8800015 	stw	r2,0(r21)
  8078b0:	8080030b 	ldhu	r2,12(r16)
  8078b4:	003f5006 	br	8075f8 <__alt_data_end+0xff8075f8>

008078b8 <_fwalk>:
  8078b8:	defff704 	addi	sp,sp,-36
  8078bc:	dd000415 	stw	r20,16(sp)
  8078c0:	dfc00815 	stw	ra,32(sp)
  8078c4:	ddc00715 	stw	r23,28(sp)
  8078c8:	dd800615 	stw	r22,24(sp)
  8078cc:	dd400515 	stw	r21,20(sp)
  8078d0:	dcc00315 	stw	r19,12(sp)
  8078d4:	dc800215 	stw	r18,8(sp)
  8078d8:	dc400115 	stw	r17,4(sp)
  8078dc:	dc000015 	stw	r16,0(sp)
  8078e0:	2500b804 	addi	r20,r4,736
  8078e4:	a0002326 	beq	r20,zero,807974 <_fwalk+0xbc>
  8078e8:	282b883a 	mov	r21,r5
  8078ec:	002f883a 	mov	r23,zero
  8078f0:	05800044 	movi	r22,1
  8078f4:	04ffffc4 	movi	r19,-1
  8078f8:	a4400117 	ldw	r17,4(r20)
  8078fc:	a4800217 	ldw	r18,8(r20)
  807900:	8c7fffc4 	addi	r17,r17,-1
  807904:	88000d16 	blt	r17,zero,80793c <_fwalk+0x84>
  807908:	94000304 	addi	r16,r18,12
  80790c:	94800384 	addi	r18,r18,14
  807910:	8080000b 	ldhu	r2,0(r16)
  807914:	8c7fffc4 	addi	r17,r17,-1
  807918:	813ffd04 	addi	r4,r16,-12
  80791c:	b080042e 	bgeu	r22,r2,807930 <_fwalk+0x78>
  807920:	9080000f 	ldh	r2,0(r18)
  807924:	14c00226 	beq	r2,r19,807930 <_fwalk+0x78>
  807928:	a83ee83a 	callr	r21
  80792c:	b8aeb03a 	or	r23,r23,r2
  807930:	84001a04 	addi	r16,r16,104
  807934:	94801a04 	addi	r18,r18,104
  807938:	8cfff51e 	bne	r17,r19,807910 <__alt_data_end+0xff807910>
  80793c:	a5000017 	ldw	r20,0(r20)
  807940:	a03fed1e 	bne	r20,zero,8078f8 <__alt_data_end+0xff8078f8>
  807944:	b805883a 	mov	r2,r23
  807948:	dfc00817 	ldw	ra,32(sp)
  80794c:	ddc00717 	ldw	r23,28(sp)
  807950:	dd800617 	ldw	r22,24(sp)
  807954:	dd400517 	ldw	r21,20(sp)
  807958:	dd000417 	ldw	r20,16(sp)
  80795c:	dcc00317 	ldw	r19,12(sp)
  807960:	dc800217 	ldw	r18,8(sp)
  807964:	dc400117 	ldw	r17,4(sp)
  807968:	dc000017 	ldw	r16,0(sp)
  80796c:	dec00904 	addi	sp,sp,36
  807970:	f800283a 	ret
  807974:	002f883a 	mov	r23,zero
  807978:	003ff206 	br	807944 <__alt_data_end+0xff807944>

0080797c <_fwalk_reent>:
  80797c:	defff704 	addi	sp,sp,-36
  807980:	dd000415 	stw	r20,16(sp)
  807984:	dfc00815 	stw	ra,32(sp)
  807988:	ddc00715 	stw	r23,28(sp)
  80798c:	dd800615 	stw	r22,24(sp)
  807990:	dd400515 	stw	r21,20(sp)
  807994:	dcc00315 	stw	r19,12(sp)
  807998:	dc800215 	stw	r18,8(sp)
  80799c:	dc400115 	stw	r17,4(sp)
  8079a0:	dc000015 	stw	r16,0(sp)
  8079a4:	2500b804 	addi	r20,r4,736
  8079a8:	a0002326 	beq	r20,zero,807a38 <_fwalk_reent+0xbc>
  8079ac:	282b883a 	mov	r21,r5
  8079b0:	2027883a 	mov	r19,r4
  8079b4:	002f883a 	mov	r23,zero
  8079b8:	05800044 	movi	r22,1
  8079bc:	04bfffc4 	movi	r18,-1
  8079c0:	a4400117 	ldw	r17,4(r20)
  8079c4:	a4000217 	ldw	r16,8(r20)
  8079c8:	8c7fffc4 	addi	r17,r17,-1
  8079cc:	88000c16 	blt	r17,zero,807a00 <_fwalk_reent+0x84>
  8079d0:	84000304 	addi	r16,r16,12
  8079d4:	8080000b 	ldhu	r2,0(r16)
  8079d8:	8c7fffc4 	addi	r17,r17,-1
  8079dc:	817ffd04 	addi	r5,r16,-12
  8079e0:	b080052e 	bgeu	r22,r2,8079f8 <_fwalk_reent+0x7c>
  8079e4:	8080008f 	ldh	r2,2(r16)
  8079e8:	9809883a 	mov	r4,r19
  8079ec:	14800226 	beq	r2,r18,8079f8 <_fwalk_reent+0x7c>
  8079f0:	a83ee83a 	callr	r21
  8079f4:	b8aeb03a 	or	r23,r23,r2
  8079f8:	84001a04 	addi	r16,r16,104
  8079fc:	8cbff51e 	bne	r17,r18,8079d4 <__alt_data_end+0xff8079d4>
  807a00:	a5000017 	ldw	r20,0(r20)
  807a04:	a03fee1e 	bne	r20,zero,8079c0 <__alt_data_end+0xff8079c0>
  807a08:	b805883a 	mov	r2,r23
  807a0c:	dfc00817 	ldw	ra,32(sp)
  807a10:	ddc00717 	ldw	r23,28(sp)
  807a14:	dd800617 	ldw	r22,24(sp)
  807a18:	dd400517 	ldw	r21,20(sp)
  807a1c:	dd000417 	ldw	r20,16(sp)
  807a20:	dcc00317 	ldw	r19,12(sp)
  807a24:	dc800217 	ldw	r18,8(sp)
  807a28:	dc400117 	ldw	r17,4(sp)
  807a2c:	dc000017 	ldw	r16,0(sp)
  807a30:	dec00904 	addi	sp,sp,36
  807a34:	f800283a 	ret
  807a38:	002f883a 	mov	r23,zero
  807a3c:	003ff206 	br	807a08 <__alt_data_end+0xff807a08>

00807a40 <_setlocale_r>:
  807a40:	30001b26 	beq	r6,zero,807ab0 <_setlocale_r+0x70>
  807a44:	01402074 	movhi	r5,129
  807a48:	defffe04 	addi	sp,sp,-8
  807a4c:	29438c04 	addi	r5,r5,3632
  807a50:	3009883a 	mov	r4,r6
  807a54:	dc000015 	stw	r16,0(sp)
  807a58:	dfc00115 	stw	ra,4(sp)
  807a5c:	3021883a 	mov	r16,r6
  807a60:	080a0f80 	call	80a0f8 <strcmp>
  807a64:	1000061e 	bne	r2,zero,807a80 <_setlocale_r+0x40>
  807a68:	00802074 	movhi	r2,129
  807a6c:	10836d04 	addi	r2,r2,3508
  807a70:	dfc00117 	ldw	ra,4(sp)
  807a74:	dc000017 	ldw	r16,0(sp)
  807a78:	dec00204 	addi	sp,sp,8
  807a7c:	f800283a 	ret
  807a80:	01402074 	movhi	r5,129
  807a84:	29436d04 	addi	r5,r5,3508
  807a88:	8009883a 	mov	r4,r16
  807a8c:	080a0f80 	call	80a0f8 <strcmp>
  807a90:	103ff526 	beq	r2,zero,807a68 <__alt_data_end+0xff807a68>
  807a94:	01402074 	movhi	r5,129
  807a98:	29437704 	addi	r5,r5,3548
  807a9c:	8009883a 	mov	r4,r16
  807aa0:	080a0f80 	call	80a0f8 <strcmp>
  807aa4:	103ff026 	beq	r2,zero,807a68 <__alt_data_end+0xff807a68>
  807aa8:	0005883a 	mov	r2,zero
  807aac:	003ff006 	br	807a70 <__alt_data_end+0xff807a70>
  807ab0:	00802074 	movhi	r2,129
  807ab4:	10836d04 	addi	r2,r2,3508
  807ab8:	f800283a 	ret

00807abc <__locale_charset>:
  807abc:	00802074 	movhi	r2,129
  807ac0:	1094ee04 	addi	r2,r2,21432
  807ac4:	f800283a 	ret

00807ac8 <__locale_mb_cur_max>:
  807ac8:	00802074 	movhi	r2,129
  807acc:	109a8a04 	addi	r2,r2,27176
  807ad0:	10800017 	ldw	r2,0(r2)
  807ad4:	f800283a 	ret

00807ad8 <__locale_msgcharset>:
  807ad8:	00802074 	movhi	r2,129
  807adc:	1094e604 	addi	r2,r2,21400
  807ae0:	f800283a 	ret

00807ae4 <__locale_cjk_lang>:
  807ae4:	0005883a 	mov	r2,zero
  807ae8:	f800283a 	ret

00807aec <_localeconv_r>:
  807aec:	00802074 	movhi	r2,129
  807af0:	1094f604 	addi	r2,r2,21464
  807af4:	f800283a 	ret

00807af8 <setlocale>:
  807af8:	00802074 	movhi	r2,129
  807afc:	109a8904 	addi	r2,r2,27172
  807b00:	280d883a 	mov	r6,r5
  807b04:	200b883a 	mov	r5,r4
  807b08:	11000017 	ldw	r4,0(r2)
  807b0c:	0807a401 	jmpi	807a40 <_setlocale_r>

00807b10 <localeconv>:
  807b10:	00802074 	movhi	r2,129
  807b14:	1094f604 	addi	r2,r2,21464
  807b18:	f800283a 	ret

00807b1c <__smakebuf_r>:
  807b1c:	2880030b 	ldhu	r2,12(r5)
  807b20:	10c0008c 	andi	r3,r2,2
  807b24:	1800411e 	bne	r3,zero,807c2c <__smakebuf_r+0x110>
  807b28:	deffec04 	addi	sp,sp,-80
  807b2c:	dc000f15 	stw	r16,60(sp)
  807b30:	2821883a 	mov	r16,r5
  807b34:	2940038f 	ldh	r5,14(r5)
  807b38:	dc401015 	stw	r17,64(sp)
  807b3c:	dfc01315 	stw	ra,76(sp)
  807b40:	dcc01215 	stw	r19,72(sp)
  807b44:	dc801115 	stw	r18,68(sp)
  807b48:	2023883a 	mov	r17,r4
  807b4c:	28001c16 	blt	r5,zero,807bc0 <__smakebuf_r+0xa4>
  807b50:	d80d883a 	mov	r6,sp
  807b54:	080bd300 	call	80bd30 <_fstat_r>
  807b58:	10001816 	blt	r2,zero,807bbc <__smakebuf_r+0xa0>
  807b5c:	d8800117 	ldw	r2,4(sp)
  807b60:	00e00014 	movui	r3,32768
  807b64:	10bc000c 	andi	r2,r2,61440
  807b68:	14c80020 	cmpeqi	r19,r2,8192
  807b6c:	10c03726 	beq	r2,r3,807c4c <__smakebuf_r+0x130>
  807b70:	80c0030b 	ldhu	r3,12(r16)
  807b74:	18c20014 	ori	r3,r3,2048
  807b78:	80c0030d 	sth	r3,12(r16)
  807b7c:	00c80004 	movi	r3,8192
  807b80:	10c0521e 	bne	r2,r3,807ccc <__smakebuf_r+0x1b0>
  807b84:	8140038f 	ldh	r5,14(r16)
  807b88:	8809883a 	mov	r4,r17
  807b8c:	080bd8c0 	call	80bd8c <_isatty_r>
  807b90:	10004c26 	beq	r2,zero,807cc4 <__smakebuf_r+0x1a8>
  807b94:	8080030b 	ldhu	r2,12(r16)
  807b98:	80c010c4 	addi	r3,r16,67
  807b9c:	80c00015 	stw	r3,0(r16)
  807ba0:	10800054 	ori	r2,r2,1
  807ba4:	8080030d 	sth	r2,12(r16)
  807ba8:	00800044 	movi	r2,1
  807bac:	80c00415 	stw	r3,16(r16)
  807bb0:	80800515 	stw	r2,20(r16)
  807bb4:	04810004 	movi	r18,1024
  807bb8:	00000706 	br	807bd8 <__smakebuf_r+0xbc>
  807bbc:	8080030b 	ldhu	r2,12(r16)
  807bc0:	10c0200c 	andi	r3,r2,128
  807bc4:	18001f1e 	bne	r3,zero,807c44 <__smakebuf_r+0x128>
  807bc8:	04810004 	movi	r18,1024
  807bcc:	10820014 	ori	r2,r2,2048
  807bd0:	8080030d 	sth	r2,12(r16)
  807bd4:	0027883a 	mov	r19,zero
  807bd8:	900b883a 	mov	r5,r18
  807bdc:	8809883a 	mov	r4,r17
  807be0:	0807cd80 	call	807cd8 <_malloc_r>
  807be4:	10002c26 	beq	r2,zero,807c98 <__smakebuf_r+0x17c>
  807be8:	80c0030b 	ldhu	r3,12(r16)
  807bec:	01002034 	movhi	r4,128
  807bf0:	211b0c04 	addi	r4,r4,27696
  807bf4:	89000f15 	stw	r4,60(r17)
  807bf8:	18c02014 	ori	r3,r3,128
  807bfc:	80c0030d 	sth	r3,12(r16)
  807c00:	80800015 	stw	r2,0(r16)
  807c04:	80800415 	stw	r2,16(r16)
  807c08:	84800515 	stw	r18,20(r16)
  807c0c:	98001a1e 	bne	r19,zero,807c78 <__smakebuf_r+0x15c>
  807c10:	dfc01317 	ldw	ra,76(sp)
  807c14:	dcc01217 	ldw	r19,72(sp)
  807c18:	dc801117 	ldw	r18,68(sp)
  807c1c:	dc401017 	ldw	r17,64(sp)
  807c20:	dc000f17 	ldw	r16,60(sp)
  807c24:	dec01404 	addi	sp,sp,80
  807c28:	f800283a 	ret
  807c2c:	288010c4 	addi	r2,r5,67
  807c30:	28800015 	stw	r2,0(r5)
  807c34:	28800415 	stw	r2,16(r5)
  807c38:	00800044 	movi	r2,1
  807c3c:	28800515 	stw	r2,20(r5)
  807c40:	f800283a 	ret
  807c44:	04801004 	movi	r18,64
  807c48:	003fe006 	br	807bcc <__alt_data_end+0xff807bcc>
  807c4c:	81000a17 	ldw	r4,40(r16)
  807c50:	00c02074 	movhi	r3,129
  807c54:	18e82504 	addi	r3,r3,-24428
  807c58:	20ffc51e 	bne	r4,r3,807b70 <__alt_data_end+0xff807b70>
  807c5c:	8080030b 	ldhu	r2,12(r16)
  807c60:	04810004 	movi	r18,1024
  807c64:	84801315 	stw	r18,76(r16)
  807c68:	1484b03a 	or	r2,r2,r18
  807c6c:	8080030d 	sth	r2,12(r16)
  807c70:	0027883a 	mov	r19,zero
  807c74:	003fd806 	br	807bd8 <__alt_data_end+0xff807bd8>
  807c78:	8140038f 	ldh	r5,14(r16)
  807c7c:	8809883a 	mov	r4,r17
  807c80:	080bd8c0 	call	80bd8c <_isatty_r>
  807c84:	103fe226 	beq	r2,zero,807c10 <__alt_data_end+0xff807c10>
  807c88:	8080030b 	ldhu	r2,12(r16)
  807c8c:	10800054 	ori	r2,r2,1
  807c90:	8080030d 	sth	r2,12(r16)
  807c94:	003fde06 	br	807c10 <__alt_data_end+0xff807c10>
  807c98:	8080030b 	ldhu	r2,12(r16)
  807c9c:	10c0800c 	andi	r3,r2,512
  807ca0:	183fdb1e 	bne	r3,zero,807c10 <__alt_data_end+0xff807c10>
  807ca4:	10800094 	ori	r2,r2,2
  807ca8:	80c010c4 	addi	r3,r16,67
  807cac:	8080030d 	sth	r2,12(r16)
  807cb0:	00800044 	movi	r2,1
  807cb4:	80c00015 	stw	r3,0(r16)
  807cb8:	80c00415 	stw	r3,16(r16)
  807cbc:	80800515 	stw	r2,20(r16)
  807cc0:	003fd306 	br	807c10 <__alt_data_end+0xff807c10>
  807cc4:	04810004 	movi	r18,1024
  807cc8:	003fc306 	br	807bd8 <__alt_data_end+0xff807bd8>
  807ccc:	0027883a 	mov	r19,zero
  807cd0:	04810004 	movi	r18,1024
  807cd4:	003fc006 	br	807bd8 <__alt_data_end+0xff807bd8>

00807cd8 <_malloc_r>:
  807cd8:	defff504 	addi	sp,sp,-44
  807cdc:	dc800315 	stw	r18,12(sp)
  807ce0:	dfc00a15 	stw	ra,40(sp)
  807ce4:	df000915 	stw	fp,36(sp)
  807ce8:	ddc00815 	stw	r23,32(sp)
  807cec:	dd800715 	stw	r22,28(sp)
  807cf0:	dd400615 	stw	r21,24(sp)
  807cf4:	dd000515 	stw	r20,20(sp)
  807cf8:	dcc00415 	stw	r19,16(sp)
  807cfc:	dc400215 	stw	r17,8(sp)
  807d00:	dc000115 	stw	r16,4(sp)
  807d04:	288002c4 	addi	r2,r5,11
  807d08:	00c00584 	movi	r3,22
  807d0c:	2025883a 	mov	r18,r4
  807d10:	18807f2e 	bgeu	r3,r2,807f10 <_malloc_r+0x238>
  807d14:	047ffe04 	movi	r17,-8
  807d18:	1462703a 	and	r17,r2,r17
  807d1c:	8800a316 	blt	r17,zero,807fac <_malloc_r+0x2d4>
  807d20:	8940a236 	bltu	r17,r5,807fac <_malloc_r+0x2d4>
  807d24:	080e9580 	call	80e958 <__malloc_lock>
  807d28:	00807dc4 	movi	r2,503
  807d2c:	1441e92e 	bgeu	r2,r17,8084d4 <_malloc_r+0x7fc>
  807d30:	8804d27a 	srli	r2,r17,9
  807d34:	1000a126 	beq	r2,zero,807fbc <_malloc_r+0x2e4>
  807d38:	00c00104 	movi	r3,4
  807d3c:	18811e36 	bltu	r3,r2,8081b8 <_malloc_r+0x4e0>
  807d40:	8804d1ba 	srli	r2,r17,6
  807d44:	12000e44 	addi	r8,r2,57
  807d48:	11c00e04 	addi	r7,r2,56
  807d4c:	4209883a 	add	r4,r8,r8
  807d50:	04c02074 	movhi	r19,129
  807d54:	2109883a 	add	r4,r4,r4
  807d58:	9cd50404 	addi	r19,r19,21520
  807d5c:	2109883a 	add	r4,r4,r4
  807d60:	9909883a 	add	r4,r19,r4
  807d64:	24000117 	ldw	r16,4(r4)
  807d68:	213ffe04 	addi	r4,r4,-8
  807d6c:	24009726 	beq	r4,r16,807fcc <_malloc_r+0x2f4>
  807d70:	80800117 	ldw	r2,4(r16)
  807d74:	01bfff04 	movi	r6,-4
  807d78:	014003c4 	movi	r5,15
  807d7c:	1184703a 	and	r2,r2,r6
  807d80:	1447c83a 	sub	r3,r2,r17
  807d84:	28c00716 	blt	r5,r3,807da4 <_malloc_r+0xcc>
  807d88:	1800920e 	bge	r3,zero,807fd4 <_malloc_r+0x2fc>
  807d8c:	84000317 	ldw	r16,12(r16)
  807d90:	24008e26 	beq	r4,r16,807fcc <_malloc_r+0x2f4>
  807d94:	80800117 	ldw	r2,4(r16)
  807d98:	1184703a 	and	r2,r2,r6
  807d9c:	1447c83a 	sub	r3,r2,r17
  807da0:	28fff90e 	bge	r5,r3,807d88 <__alt_data_end+0xff807d88>
  807da4:	3809883a 	mov	r4,r7
  807da8:	01802074 	movhi	r6,129
  807dac:	9c000417 	ldw	r16,16(r19)
  807db0:	31950404 	addi	r6,r6,21520
  807db4:	32000204 	addi	r8,r6,8
  807db8:	82013426 	beq	r16,r8,80828c <_malloc_r+0x5b4>
  807dbc:	80c00117 	ldw	r3,4(r16)
  807dc0:	00bfff04 	movi	r2,-4
  807dc4:	188e703a 	and	r7,r3,r2
  807dc8:	3c45c83a 	sub	r2,r7,r17
  807dcc:	00c003c4 	movi	r3,15
  807dd0:	18811f16 	blt	r3,r2,808250 <_malloc_r+0x578>
  807dd4:	32000515 	stw	r8,20(r6)
  807dd8:	32000415 	stw	r8,16(r6)
  807ddc:	10007f0e 	bge	r2,zero,807fdc <_malloc_r+0x304>
  807de0:	00807fc4 	movi	r2,511
  807de4:	11c0fd36 	bltu	r2,r7,8081dc <_malloc_r+0x504>
  807de8:	3806d0fa 	srli	r3,r7,3
  807dec:	01c00044 	movi	r7,1
  807df0:	30800117 	ldw	r2,4(r6)
  807df4:	19400044 	addi	r5,r3,1
  807df8:	294b883a 	add	r5,r5,r5
  807dfc:	1807d0ba 	srai	r3,r3,2
  807e00:	294b883a 	add	r5,r5,r5
  807e04:	294b883a 	add	r5,r5,r5
  807e08:	298b883a 	add	r5,r5,r6
  807e0c:	38c6983a 	sll	r3,r7,r3
  807e10:	29c00017 	ldw	r7,0(r5)
  807e14:	2a7ffe04 	addi	r9,r5,-8
  807e18:	1886b03a 	or	r3,r3,r2
  807e1c:	82400315 	stw	r9,12(r16)
  807e20:	81c00215 	stw	r7,8(r16)
  807e24:	30c00115 	stw	r3,4(r6)
  807e28:	2c000015 	stw	r16,0(r5)
  807e2c:	3c000315 	stw	r16,12(r7)
  807e30:	2005d0ba 	srai	r2,r4,2
  807e34:	01400044 	movi	r5,1
  807e38:	288a983a 	sll	r5,r5,r2
  807e3c:	19406f36 	bltu	r3,r5,807ffc <_malloc_r+0x324>
  807e40:	28c4703a 	and	r2,r5,r3
  807e44:	10000a1e 	bne	r2,zero,807e70 <_malloc_r+0x198>
  807e48:	00bfff04 	movi	r2,-4
  807e4c:	294b883a 	add	r5,r5,r5
  807e50:	2088703a 	and	r4,r4,r2
  807e54:	28c4703a 	and	r2,r5,r3
  807e58:	21000104 	addi	r4,r4,4
  807e5c:	1000041e 	bne	r2,zero,807e70 <_malloc_r+0x198>
  807e60:	294b883a 	add	r5,r5,r5
  807e64:	28c4703a 	and	r2,r5,r3
  807e68:	21000104 	addi	r4,r4,4
  807e6c:	103ffc26 	beq	r2,zero,807e60 <__alt_data_end+0xff807e60>
  807e70:	02bfff04 	movi	r10,-4
  807e74:	024003c4 	movi	r9,15
  807e78:	21800044 	addi	r6,r4,1
  807e7c:	318d883a 	add	r6,r6,r6
  807e80:	318d883a 	add	r6,r6,r6
  807e84:	318d883a 	add	r6,r6,r6
  807e88:	998d883a 	add	r6,r19,r6
  807e8c:	333ffe04 	addi	r12,r6,-8
  807e90:	2017883a 	mov	r11,r4
  807e94:	31800104 	addi	r6,r6,4
  807e98:	34000017 	ldw	r16,0(r6)
  807e9c:	31fffd04 	addi	r7,r6,-12
  807ea0:	81c0041e 	bne	r16,r7,807eb4 <_malloc_r+0x1dc>
  807ea4:	0000fb06 	br	808294 <_malloc_r+0x5bc>
  807ea8:	1801030e 	bge	r3,zero,8082b8 <_malloc_r+0x5e0>
  807eac:	84000317 	ldw	r16,12(r16)
  807eb0:	81c0f826 	beq	r16,r7,808294 <_malloc_r+0x5bc>
  807eb4:	80800117 	ldw	r2,4(r16)
  807eb8:	1284703a 	and	r2,r2,r10
  807ebc:	1447c83a 	sub	r3,r2,r17
  807ec0:	48fff90e 	bge	r9,r3,807ea8 <__alt_data_end+0xff807ea8>
  807ec4:	80800317 	ldw	r2,12(r16)
  807ec8:	81000217 	ldw	r4,8(r16)
  807ecc:	89400054 	ori	r5,r17,1
  807ed0:	81400115 	stw	r5,4(r16)
  807ed4:	20800315 	stw	r2,12(r4)
  807ed8:	11000215 	stw	r4,8(r2)
  807edc:	8463883a 	add	r17,r16,r17
  807ee0:	9c400515 	stw	r17,20(r19)
  807ee4:	9c400415 	stw	r17,16(r19)
  807ee8:	18800054 	ori	r2,r3,1
  807eec:	88800115 	stw	r2,4(r17)
  807ef0:	8a000315 	stw	r8,12(r17)
  807ef4:	8a000215 	stw	r8,8(r17)
  807ef8:	88e3883a 	add	r17,r17,r3
  807efc:	88c00015 	stw	r3,0(r17)
  807f00:	9009883a 	mov	r4,r18
  807f04:	080e97c0 	call	80e97c <__malloc_unlock>
  807f08:	80800204 	addi	r2,r16,8
  807f0c:	00001b06 	br	807f7c <_malloc_r+0x2a4>
  807f10:	04400404 	movi	r17,16
  807f14:	89402536 	bltu	r17,r5,807fac <_malloc_r+0x2d4>
  807f18:	080e9580 	call	80e958 <__malloc_lock>
  807f1c:	00800184 	movi	r2,6
  807f20:	01000084 	movi	r4,2
  807f24:	04c02074 	movhi	r19,129
  807f28:	1085883a 	add	r2,r2,r2
  807f2c:	9cd50404 	addi	r19,r19,21520
  807f30:	1085883a 	add	r2,r2,r2
  807f34:	9885883a 	add	r2,r19,r2
  807f38:	14000117 	ldw	r16,4(r2)
  807f3c:	10fffe04 	addi	r3,r2,-8
  807f40:	80c0d926 	beq	r16,r3,8082a8 <_malloc_r+0x5d0>
  807f44:	80c00117 	ldw	r3,4(r16)
  807f48:	81000317 	ldw	r4,12(r16)
  807f4c:	00bfff04 	movi	r2,-4
  807f50:	1884703a 	and	r2,r3,r2
  807f54:	81400217 	ldw	r5,8(r16)
  807f58:	8085883a 	add	r2,r16,r2
  807f5c:	10c00117 	ldw	r3,4(r2)
  807f60:	29000315 	stw	r4,12(r5)
  807f64:	21400215 	stw	r5,8(r4)
  807f68:	18c00054 	ori	r3,r3,1
  807f6c:	10c00115 	stw	r3,4(r2)
  807f70:	9009883a 	mov	r4,r18
  807f74:	080e97c0 	call	80e97c <__malloc_unlock>
  807f78:	80800204 	addi	r2,r16,8
  807f7c:	dfc00a17 	ldw	ra,40(sp)
  807f80:	df000917 	ldw	fp,36(sp)
  807f84:	ddc00817 	ldw	r23,32(sp)
  807f88:	dd800717 	ldw	r22,28(sp)
  807f8c:	dd400617 	ldw	r21,24(sp)
  807f90:	dd000517 	ldw	r20,20(sp)
  807f94:	dcc00417 	ldw	r19,16(sp)
  807f98:	dc800317 	ldw	r18,12(sp)
  807f9c:	dc400217 	ldw	r17,8(sp)
  807fa0:	dc000117 	ldw	r16,4(sp)
  807fa4:	dec00b04 	addi	sp,sp,44
  807fa8:	f800283a 	ret
  807fac:	00800304 	movi	r2,12
  807fb0:	90800015 	stw	r2,0(r18)
  807fb4:	0005883a 	mov	r2,zero
  807fb8:	003ff006 	br	807f7c <__alt_data_end+0xff807f7c>
  807fbc:	01002004 	movi	r4,128
  807fc0:	02001004 	movi	r8,64
  807fc4:	01c00fc4 	movi	r7,63
  807fc8:	003f6106 	br	807d50 <__alt_data_end+0xff807d50>
  807fcc:	4009883a 	mov	r4,r8
  807fd0:	003f7506 	br	807da8 <__alt_data_end+0xff807da8>
  807fd4:	81000317 	ldw	r4,12(r16)
  807fd8:	003fde06 	br	807f54 <__alt_data_end+0xff807f54>
  807fdc:	81c5883a 	add	r2,r16,r7
  807fe0:	11400117 	ldw	r5,4(r2)
  807fe4:	9009883a 	mov	r4,r18
  807fe8:	29400054 	ori	r5,r5,1
  807fec:	11400115 	stw	r5,4(r2)
  807ff0:	080e97c0 	call	80e97c <__malloc_unlock>
  807ff4:	80800204 	addi	r2,r16,8
  807ff8:	003fe006 	br	807f7c <__alt_data_end+0xff807f7c>
  807ffc:	9c000217 	ldw	r16,8(r19)
  808000:	00bfff04 	movi	r2,-4
  808004:	85800117 	ldw	r22,4(r16)
  808008:	b0ac703a 	and	r22,r22,r2
  80800c:	b4400336 	bltu	r22,r17,80801c <_malloc_r+0x344>
  808010:	b445c83a 	sub	r2,r22,r17
  808014:	00c003c4 	movi	r3,15
  808018:	18805d16 	blt	r3,r2,808190 <_malloc_r+0x4b8>
  80801c:	05c02074 	movhi	r23,129
  808020:	008020b4 	movhi	r2,130
  808024:	10b14a04 	addi	r2,r2,-15064
  808028:	bdda8b04 	addi	r23,r23,27180
  80802c:	15400017 	ldw	r21,0(r2)
  808030:	b8c00017 	ldw	r3,0(r23)
  808034:	00bfffc4 	movi	r2,-1
  808038:	858d883a 	add	r6,r16,r22
  80803c:	8d6b883a 	add	r21,r17,r21
  808040:	1880ea26 	beq	r3,r2,8083ec <_malloc_r+0x714>
  808044:	ad4403c4 	addi	r21,r21,4111
  808048:	00bc0004 	movi	r2,-4096
  80804c:	a8aa703a 	and	r21,r21,r2
  808050:	a80b883a 	mov	r5,r21
  808054:	9009883a 	mov	r4,r18
  808058:	d9800015 	stw	r6,0(sp)
  80805c:	0809f680 	call	809f68 <_sbrk_r>
  808060:	1029883a 	mov	r20,r2
  808064:	00bfffc4 	movi	r2,-1
  808068:	d9800017 	ldw	r6,0(sp)
  80806c:	a080e826 	beq	r20,r2,808410 <_malloc_r+0x738>
  808070:	a180a636 	bltu	r20,r6,80830c <_malloc_r+0x634>
  808074:	070020b4 	movhi	fp,130
  808078:	e7315304 	addi	fp,fp,-15028
  80807c:	e0800017 	ldw	r2,0(fp)
  808080:	a887883a 	add	r3,r21,r2
  808084:	e0c00015 	stw	r3,0(fp)
  808088:	3500e626 	beq	r6,r20,808424 <_malloc_r+0x74c>
  80808c:	b9000017 	ldw	r4,0(r23)
  808090:	00bfffc4 	movi	r2,-1
  808094:	2080ee26 	beq	r4,r2,808450 <_malloc_r+0x778>
  808098:	a185c83a 	sub	r2,r20,r6
  80809c:	10c5883a 	add	r2,r2,r3
  8080a0:	e0800015 	stw	r2,0(fp)
  8080a4:	a0c001cc 	andi	r3,r20,7
  8080a8:	1800bc26 	beq	r3,zero,80839c <_malloc_r+0x6c4>
  8080ac:	a0e9c83a 	sub	r20,r20,r3
  8080b0:	00840204 	movi	r2,4104
  8080b4:	a5000204 	addi	r20,r20,8
  8080b8:	10c7c83a 	sub	r3,r2,r3
  8080bc:	a545883a 	add	r2,r20,r21
  8080c0:	1083ffcc 	andi	r2,r2,4095
  8080c4:	18abc83a 	sub	r21,r3,r2
  8080c8:	a80b883a 	mov	r5,r21
  8080cc:	9009883a 	mov	r4,r18
  8080d0:	0809f680 	call	809f68 <_sbrk_r>
  8080d4:	00ffffc4 	movi	r3,-1
  8080d8:	10c0e126 	beq	r2,r3,808460 <_malloc_r+0x788>
  8080dc:	1505c83a 	sub	r2,r2,r20
  8080e0:	1545883a 	add	r2,r2,r21
  8080e4:	10800054 	ori	r2,r2,1
  8080e8:	e0c00017 	ldw	r3,0(fp)
  8080ec:	9d000215 	stw	r20,8(r19)
  8080f0:	a0800115 	stw	r2,4(r20)
  8080f4:	a8c7883a 	add	r3,r21,r3
  8080f8:	e0c00015 	stw	r3,0(fp)
  8080fc:	84c00e26 	beq	r16,r19,808138 <_malloc_r+0x460>
  808100:	018003c4 	movi	r6,15
  808104:	3580a72e 	bgeu	r6,r22,8083a4 <_malloc_r+0x6cc>
  808108:	81400117 	ldw	r5,4(r16)
  80810c:	013ffe04 	movi	r4,-8
  808110:	b0bffd04 	addi	r2,r22,-12
  808114:	1104703a 	and	r2,r2,r4
  808118:	2900004c 	andi	r4,r5,1
  80811c:	2088b03a 	or	r4,r4,r2
  808120:	81000115 	stw	r4,4(r16)
  808124:	01400144 	movi	r5,5
  808128:	8089883a 	add	r4,r16,r2
  80812c:	21400115 	stw	r5,4(r4)
  808130:	21400215 	stw	r5,8(r4)
  808134:	3080cd36 	bltu	r6,r2,80846c <_malloc_r+0x794>
  808138:	008020b4 	movhi	r2,130
  80813c:	10b14904 	addi	r2,r2,-15068
  808140:	11000017 	ldw	r4,0(r2)
  808144:	20c0012e 	bgeu	r4,r3,80814c <_malloc_r+0x474>
  808148:	10c00015 	stw	r3,0(r2)
  80814c:	008020b4 	movhi	r2,130
  808150:	10b14804 	addi	r2,r2,-15072
  808154:	11000017 	ldw	r4,0(r2)
  808158:	9c000217 	ldw	r16,8(r19)
  80815c:	20c0012e 	bgeu	r4,r3,808164 <_malloc_r+0x48c>
  808160:	10c00015 	stw	r3,0(r2)
  808164:	80c00117 	ldw	r3,4(r16)
  808168:	00bfff04 	movi	r2,-4
  80816c:	1886703a 	and	r3,r3,r2
  808170:	1c45c83a 	sub	r2,r3,r17
  808174:	1c400236 	bltu	r3,r17,808180 <_malloc_r+0x4a8>
  808178:	00c003c4 	movi	r3,15
  80817c:	18800416 	blt	r3,r2,808190 <_malloc_r+0x4b8>
  808180:	9009883a 	mov	r4,r18
  808184:	080e97c0 	call	80e97c <__malloc_unlock>
  808188:	0005883a 	mov	r2,zero
  80818c:	003f7b06 	br	807f7c <__alt_data_end+0xff807f7c>
  808190:	88c00054 	ori	r3,r17,1
  808194:	80c00115 	stw	r3,4(r16)
  808198:	8463883a 	add	r17,r16,r17
  80819c:	10800054 	ori	r2,r2,1
  8081a0:	9c400215 	stw	r17,8(r19)
  8081a4:	88800115 	stw	r2,4(r17)
  8081a8:	9009883a 	mov	r4,r18
  8081ac:	080e97c0 	call	80e97c <__malloc_unlock>
  8081b0:	80800204 	addi	r2,r16,8
  8081b4:	003f7106 	br	807f7c <__alt_data_end+0xff807f7c>
  8081b8:	00c00504 	movi	r3,20
  8081bc:	18804a2e 	bgeu	r3,r2,8082e8 <_malloc_r+0x610>
  8081c0:	00c01504 	movi	r3,84
  8081c4:	18806e36 	bltu	r3,r2,808380 <_malloc_r+0x6a8>
  8081c8:	8804d33a 	srli	r2,r17,12
  8081cc:	12001bc4 	addi	r8,r2,111
  8081d0:	11c01b84 	addi	r7,r2,110
  8081d4:	4209883a 	add	r4,r8,r8
  8081d8:	003edd06 	br	807d50 <__alt_data_end+0xff807d50>
  8081dc:	3804d27a 	srli	r2,r7,9
  8081e0:	00c00104 	movi	r3,4
  8081e4:	1880442e 	bgeu	r3,r2,8082f8 <_malloc_r+0x620>
  8081e8:	00c00504 	movi	r3,20
  8081ec:	18808136 	bltu	r3,r2,8083f4 <_malloc_r+0x71c>
  8081f0:	11401704 	addi	r5,r2,92
  8081f4:	10c016c4 	addi	r3,r2,91
  8081f8:	294b883a 	add	r5,r5,r5
  8081fc:	294b883a 	add	r5,r5,r5
  808200:	294b883a 	add	r5,r5,r5
  808204:	994b883a 	add	r5,r19,r5
  808208:	28800017 	ldw	r2,0(r5)
  80820c:	01802074 	movhi	r6,129
  808210:	297ffe04 	addi	r5,r5,-8
  808214:	31950404 	addi	r6,r6,21520
  808218:	28806526 	beq	r5,r2,8083b0 <_malloc_r+0x6d8>
  80821c:	01bfff04 	movi	r6,-4
  808220:	10c00117 	ldw	r3,4(r2)
  808224:	1986703a 	and	r3,r3,r6
  808228:	38c0022e 	bgeu	r7,r3,808234 <_malloc_r+0x55c>
  80822c:	10800217 	ldw	r2,8(r2)
  808230:	28bffb1e 	bne	r5,r2,808220 <__alt_data_end+0xff808220>
  808234:	11400317 	ldw	r5,12(r2)
  808238:	98c00117 	ldw	r3,4(r19)
  80823c:	81400315 	stw	r5,12(r16)
  808240:	80800215 	stw	r2,8(r16)
  808244:	2c000215 	stw	r16,8(r5)
  808248:	14000315 	stw	r16,12(r2)
  80824c:	003ef806 	br	807e30 <__alt_data_end+0xff807e30>
  808250:	88c00054 	ori	r3,r17,1
  808254:	80c00115 	stw	r3,4(r16)
  808258:	8463883a 	add	r17,r16,r17
  80825c:	34400515 	stw	r17,20(r6)
  808260:	34400415 	stw	r17,16(r6)
  808264:	10c00054 	ori	r3,r2,1
  808268:	8a000315 	stw	r8,12(r17)
  80826c:	8a000215 	stw	r8,8(r17)
  808270:	88c00115 	stw	r3,4(r17)
  808274:	88a3883a 	add	r17,r17,r2
  808278:	88800015 	stw	r2,0(r17)
  80827c:	9009883a 	mov	r4,r18
  808280:	080e97c0 	call	80e97c <__malloc_unlock>
  808284:	80800204 	addi	r2,r16,8
  808288:	003f3c06 	br	807f7c <__alt_data_end+0xff807f7c>
  80828c:	30c00117 	ldw	r3,4(r6)
  808290:	003ee706 	br	807e30 <__alt_data_end+0xff807e30>
  808294:	5ac00044 	addi	r11,r11,1
  808298:	588000cc 	andi	r2,r11,3
  80829c:	31800204 	addi	r6,r6,8
  8082a0:	103efd1e 	bne	r2,zero,807e98 <__alt_data_end+0xff807e98>
  8082a4:	00002406 	br	808338 <_malloc_r+0x660>
  8082a8:	14000317 	ldw	r16,12(r2)
  8082ac:	143f251e 	bne	r2,r16,807f44 <__alt_data_end+0xff807f44>
  8082b0:	21000084 	addi	r4,r4,2
  8082b4:	003ebc06 	br	807da8 <__alt_data_end+0xff807da8>
  8082b8:	8085883a 	add	r2,r16,r2
  8082bc:	10c00117 	ldw	r3,4(r2)
  8082c0:	81000317 	ldw	r4,12(r16)
  8082c4:	81400217 	ldw	r5,8(r16)
  8082c8:	18c00054 	ori	r3,r3,1
  8082cc:	10c00115 	stw	r3,4(r2)
  8082d0:	29000315 	stw	r4,12(r5)
  8082d4:	21400215 	stw	r5,8(r4)
  8082d8:	9009883a 	mov	r4,r18
  8082dc:	080e97c0 	call	80e97c <__malloc_unlock>
  8082e0:	80800204 	addi	r2,r16,8
  8082e4:	003f2506 	br	807f7c <__alt_data_end+0xff807f7c>
  8082e8:	12001704 	addi	r8,r2,92
  8082ec:	11c016c4 	addi	r7,r2,91
  8082f0:	4209883a 	add	r4,r8,r8
  8082f4:	003e9606 	br	807d50 <__alt_data_end+0xff807d50>
  8082f8:	3804d1ba 	srli	r2,r7,6
  8082fc:	11400e44 	addi	r5,r2,57
  808300:	10c00e04 	addi	r3,r2,56
  808304:	294b883a 	add	r5,r5,r5
  808308:	003fbc06 	br	8081fc <__alt_data_end+0xff8081fc>
  80830c:	84ff5926 	beq	r16,r19,808074 <__alt_data_end+0xff808074>
  808310:	00802074 	movhi	r2,129
  808314:	10950404 	addi	r2,r2,21520
  808318:	14000217 	ldw	r16,8(r2)
  80831c:	00bfff04 	movi	r2,-4
  808320:	80c00117 	ldw	r3,4(r16)
  808324:	1886703a 	and	r3,r3,r2
  808328:	003f9106 	br	808170 <__alt_data_end+0xff808170>
  80832c:	60800217 	ldw	r2,8(r12)
  808330:	213fffc4 	addi	r4,r4,-1
  808334:	1300651e 	bne	r2,r12,8084cc <_malloc_r+0x7f4>
  808338:	208000cc 	andi	r2,r4,3
  80833c:	633ffe04 	addi	r12,r12,-8
  808340:	103ffa1e 	bne	r2,zero,80832c <__alt_data_end+0xff80832c>
  808344:	98800117 	ldw	r2,4(r19)
  808348:	0146303a 	nor	r3,zero,r5
  80834c:	1884703a 	and	r2,r3,r2
  808350:	98800115 	stw	r2,4(r19)
  808354:	294b883a 	add	r5,r5,r5
  808358:	117f2836 	bltu	r2,r5,807ffc <__alt_data_end+0xff807ffc>
  80835c:	283f2726 	beq	r5,zero,807ffc <__alt_data_end+0xff807ffc>
  808360:	2886703a 	and	r3,r5,r2
  808364:	5809883a 	mov	r4,r11
  808368:	183ec31e 	bne	r3,zero,807e78 <__alt_data_end+0xff807e78>
  80836c:	294b883a 	add	r5,r5,r5
  808370:	2886703a 	and	r3,r5,r2
  808374:	21000104 	addi	r4,r4,4
  808378:	183ffc26 	beq	r3,zero,80836c <__alt_data_end+0xff80836c>
  80837c:	003ebe06 	br	807e78 <__alt_data_end+0xff807e78>
  808380:	00c05504 	movi	r3,340
  808384:	18801236 	bltu	r3,r2,8083d0 <_malloc_r+0x6f8>
  808388:	8804d3fa 	srli	r2,r17,15
  80838c:	12001e04 	addi	r8,r2,120
  808390:	11c01dc4 	addi	r7,r2,119
  808394:	4209883a 	add	r4,r8,r8
  808398:	003e6d06 	br	807d50 <__alt_data_end+0xff807d50>
  80839c:	00c40004 	movi	r3,4096
  8083a0:	003f4606 	br	8080bc <__alt_data_end+0xff8080bc>
  8083a4:	00800044 	movi	r2,1
  8083a8:	a0800115 	stw	r2,4(r20)
  8083ac:	003f7406 	br	808180 <__alt_data_end+0xff808180>
  8083b0:	1805d0ba 	srai	r2,r3,2
  8083b4:	01c00044 	movi	r7,1
  8083b8:	30c00117 	ldw	r3,4(r6)
  8083bc:	388e983a 	sll	r7,r7,r2
  8083c0:	2805883a 	mov	r2,r5
  8083c4:	38c6b03a 	or	r3,r7,r3
  8083c8:	30c00115 	stw	r3,4(r6)
  8083cc:	003f9b06 	br	80823c <__alt_data_end+0xff80823c>
  8083d0:	00c15504 	movi	r3,1364
  8083d4:	18801a36 	bltu	r3,r2,808440 <_malloc_r+0x768>
  8083d8:	8804d4ba 	srli	r2,r17,18
  8083dc:	12001f44 	addi	r8,r2,125
  8083e0:	11c01f04 	addi	r7,r2,124
  8083e4:	4209883a 	add	r4,r8,r8
  8083e8:	003e5906 	br	807d50 <__alt_data_end+0xff807d50>
  8083ec:	ad400404 	addi	r21,r21,16
  8083f0:	003f1706 	br	808050 <__alt_data_end+0xff808050>
  8083f4:	00c01504 	movi	r3,84
  8083f8:	18802336 	bltu	r3,r2,808488 <_malloc_r+0x7b0>
  8083fc:	3804d33a 	srli	r2,r7,12
  808400:	11401bc4 	addi	r5,r2,111
  808404:	10c01b84 	addi	r3,r2,110
  808408:	294b883a 	add	r5,r5,r5
  80840c:	003f7b06 	br	8081fc <__alt_data_end+0xff8081fc>
  808410:	9c000217 	ldw	r16,8(r19)
  808414:	00bfff04 	movi	r2,-4
  808418:	80c00117 	ldw	r3,4(r16)
  80841c:	1886703a 	and	r3,r3,r2
  808420:	003f5306 	br	808170 <__alt_data_end+0xff808170>
  808424:	3083ffcc 	andi	r2,r6,4095
  808428:	103f181e 	bne	r2,zero,80808c <__alt_data_end+0xff80808c>
  80842c:	99000217 	ldw	r4,8(r19)
  808430:	b545883a 	add	r2,r22,r21
  808434:	10800054 	ori	r2,r2,1
  808438:	20800115 	stw	r2,4(r4)
  80843c:	003f3e06 	br	808138 <__alt_data_end+0xff808138>
  808440:	01003f84 	movi	r4,254
  808444:	02001fc4 	movi	r8,127
  808448:	01c01f84 	movi	r7,126
  80844c:	003e4006 	br	807d50 <__alt_data_end+0xff807d50>
  808450:	00802074 	movhi	r2,129
  808454:	109a8b04 	addi	r2,r2,27180
  808458:	15000015 	stw	r20,0(r2)
  80845c:	003f1106 	br	8080a4 <__alt_data_end+0xff8080a4>
  808460:	00800044 	movi	r2,1
  808464:	002b883a 	mov	r21,zero
  808468:	003f1f06 	br	8080e8 <__alt_data_end+0xff8080e8>
  80846c:	81400204 	addi	r5,r16,8
  808470:	9009883a 	mov	r4,r18
  808474:	08070ec0 	call	8070ec <_free_r>
  808478:	008020b4 	movhi	r2,130
  80847c:	10b15304 	addi	r2,r2,-15028
  808480:	10c00017 	ldw	r3,0(r2)
  808484:	003f2c06 	br	808138 <__alt_data_end+0xff808138>
  808488:	00c05504 	movi	r3,340
  80848c:	18800536 	bltu	r3,r2,8084a4 <_malloc_r+0x7cc>
  808490:	3804d3fa 	srli	r2,r7,15
  808494:	11401e04 	addi	r5,r2,120
  808498:	10c01dc4 	addi	r3,r2,119
  80849c:	294b883a 	add	r5,r5,r5
  8084a0:	003f5606 	br	8081fc <__alt_data_end+0xff8081fc>
  8084a4:	00c15504 	movi	r3,1364
  8084a8:	18800536 	bltu	r3,r2,8084c0 <_malloc_r+0x7e8>
  8084ac:	3804d4ba 	srli	r2,r7,18
  8084b0:	11401f44 	addi	r5,r2,125
  8084b4:	10c01f04 	addi	r3,r2,124
  8084b8:	294b883a 	add	r5,r5,r5
  8084bc:	003f4f06 	br	8081fc <__alt_data_end+0xff8081fc>
  8084c0:	01403f84 	movi	r5,254
  8084c4:	00c01f84 	movi	r3,126
  8084c8:	003f4c06 	br	8081fc <__alt_data_end+0xff8081fc>
  8084cc:	98800117 	ldw	r2,4(r19)
  8084d0:	003fa006 	br	808354 <__alt_data_end+0xff808354>
  8084d4:	8808d0fa 	srli	r4,r17,3
  8084d8:	20800044 	addi	r2,r4,1
  8084dc:	1085883a 	add	r2,r2,r2
  8084e0:	003e9006 	br	807f24 <__alt_data_end+0xff807f24>

008084e4 <memchr>:
  8084e4:	208000cc 	andi	r2,r4,3
  8084e8:	280f883a 	mov	r7,r5
  8084ec:	10003426 	beq	r2,zero,8085c0 <memchr+0xdc>
  8084f0:	30bfffc4 	addi	r2,r6,-1
  8084f4:	30001a26 	beq	r6,zero,808560 <memchr+0x7c>
  8084f8:	20c00003 	ldbu	r3,0(r4)
  8084fc:	29803fcc 	andi	r6,r5,255
  808500:	30c0051e 	bne	r6,r3,808518 <memchr+0x34>
  808504:	00001806 	br	808568 <memchr+0x84>
  808508:	10001526 	beq	r2,zero,808560 <memchr+0x7c>
  80850c:	20c00003 	ldbu	r3,0(r4)
  808510:	10bfffc4 	addi	r2,r2,-1
  808514:	30c01426 	beq	r6,r3,808568 <memchr+0x84>
  808518:	21000044 	addi	r4,r4,1
  80851c:	20c000cc 	andi	r3,r4,3
  808520:	183ff91e 	bne	r3,zero,808508 <__alt_data_end+0xff808508>
  808524:	020000c4 	movi	r8,3
  808528:	40801136 	bltu	r8,r2,808570 <memchr+0x8c>
  80852c:	10000c26 	beq	r2,zero,808560 <memchr+0x7c>
  808530:	20c00003 	ldbu	r3,0(r4)
  808534:	29403fcc 	andi	r5,r5,255
  808538:	28c00b26 	beq	r5,r3,808568 <memchr+0x84>
  80853c:	20c00044 	addi	r3,r4,1
  808540:	39803fcc 	andi	r6,r7,255
  808544:	2089883a 	add	r4,r4,r2
  808548:	00000306 	br	808558 <memchr+0x74>
  80854c:	18c00044 	addi	r3,r3,1
  808550:	197fffc3 	ldbu	r5,-1(r3)
  808554:	31400526 	beq	r6,r5,80856c <memchr+0x88>
  808558:	1805883a 	mov	r2,r3
  80855c:	20fffb1e 	bne	r4,r3,80854c <__alt_data_end+0xff80854c>
  808560:	0005883a 	mov	r2,zero
  808564:	f800283a 	ret
  808568:	2005883a 	mov	r2,r4
  80856c:	f800283a 	ret
  808570:	28c03fcc 	andi	r3,r5,255
  808574:	1812923a 	slli	r9,r3,8
  808578:	02ffbff4 	movhi	r11,65279
  80857c:	02a02074 	movhi	r10,32897
  808580:	48d2b03a 	or	r9,r9,r3
  808584:	4806943a 	slli	r3,r9,16
  808588:	5affbfc4 	addi	r11,r11,-257
  80858c:	52a02004 	addi	r10,r10,-32640
  808590:	48d2b03a 	or	r9,r9,r3
  808594:	20c00017 	ldw	r3,0(r4)
  808598:	48c6f03a 	xor	r3,r9,r3
  80859c:	1acd883a 	add	r6,r3,r11
  8085a0:	00c6303a 	nor	r3,zero,r3
  8085a4:	30c6703a 	and	r3,r6,r3
  8085a8:	1a86703a 	and	r3,r3,r10
  8085ac:	183fe01e 	bne	r3,zero,808530 <__alt_data_end+0xff808530>
  8085b0:	10bfff04 	addi	r2,r2,-4
  8085b4:	21000104 	addi	r4,r4,4
  8085b8:	40bff636 	bltu	r8,r2,808594 <__alt_data_end+0xff808594>
  8085bc:	003fdb06 	br	80852c <__alt_data_end+0xff80852c>
  8085c0:	3005883a 	mov	r2,r6
  8085c4:	003fd706 	br	808524 <__alt_data_end+0xff808524>

008085c8 <memcpy>:
  8085c8:	defffd04 	addi	sp,sp,-12
  8085cc:	dfc00215 	stw	ra,8(sp)
  8085d0:	dc400115 	stw	r17,4(sp)
  8085d4:	dc000015 	stw	r16,0(sp)
  8085d8:	00c003c4 	movi	r3,15
  8085dc:	2005883a 	mov	r2,r4
  8085e0:	1980452e 	bgeu	r3,r6,8086f8 <memcpy+0x130>
  8085e4:	2906b03a 	or	r3,r5,r4
  8085e8:	18c000cc 	andi	r3,r3,3
  8085ec:	1800441e 	bne	r3,zero,808700 <memcpy+0x138>
  8085f0:	347ffc04 	addi	r17,r6,-16
  8085f4:	8822d13a 	srli	r17,r17,4
  8085f8:	28c00104 	addi	r3,r5,4
  8085fc:	23400104 	addi	r13,r4,4
  808600:	8820913a 	slli	r16,r17,4
  808604:	2b000204 	addi	r12,r5,8
  808608:	22c00204 	addi	r11,r4,8
  80860c:	84000504 	addi	r16,r16,20
  808610:	2a800304 	addi	r10,r5,12
  808614:	22400304 	addi	r9,r4,12
  808618:	2c21883a 	add	r16,r5,r16
  80861c:	2811883a 	mov	r8,r5
  808620:	200f883a 	mov	r7,r4
  808624:	41000017 	ldw	r4,0(r8)
  808628:	1fc00017 	ldw	ra,0(r3)
  80862c:	63c00017 	ldw	r15,0(r12)
  808630:	39000015 	stw	r4,0(r7)
  808634:	53800017 	ldw	r14,0(r10)
  808638:	6fc00015 	stw	ra,0(r13)
  80863c:	5bc00015 	stw	r15,0(r11)
  808640:	4b800015 	stw	r14,0(r9)
  808644:	18c00404 	addi	r3,r3,16
  808648:	39c00404 	addi	r7,r7,16
  80864c:	42000404 	addi	r8,r8,16
  808650:	6b400404 	addi	r13,r13,16
  808654:	63000404 	addi	r12,r12,16
  808658:	5ac00404 	addi	r11,r11,16
  80865c:	52800404 	addi	r10,r10,16
  808660:	4a400404 	addi	r9,r9,16
  808664:	1c3fef1e 	bne	r3,r16,808624 <__alt_data_end+0xff808624>
  808668:	89c00044 	addi	r7,r17,1
  80866c:	380e913a 	slli	r7,r7,4
  808670:	310003cc 	andi	r4,r6,15
  808674:	02c000c4 	movi	r11,3
  808678:	11c7883a 	add	r3,r2,r7
  80867c:	29cb883a 	add	r5,r5,r7
  808680:	5900212e 	bgeu	r11,r4,808708 <memcpy+0x140>
  808684:	1813883a 	mov	r9,r3
  808688:	2811883a 	mov	r8,r5
  80868c:	200f883a 	mov	r7,r4
  808690:	42800017 	ldw	r10,0(r8)
  808694:	4a400104 	addi	r9,r9,4
  808698:	39ffff04 	addi	r7,r7,-4
  80869c:	4abfff15 	stw	r10,-4(r9)
  8086a0:	42000104 	addi	r8,r8,4
  8086a4:	59fffa36 	bltu	r11,r7,808690 <__alt_data_end+0xff808690>
  8086a8:	213fff04 	addi	r4,r4,-4
  8086ac:	2008d0ba 	srli	r4,r4,2
  8086b0:	318000cc 	andi	r6,r6,3
  8086b4:	21000044 	addi	r4,r4,1
  8086b8:	2109883a 	add	r4,r4,r4
  8086bc:	2109883a 	add	r4,r4,r4
  8086c0:	1907883a 	add	r3,r3,r4
  8086c4:	290b883a 	add	r5,r5,r4
  8086c8:	30000626 	beq	r6,zero,8086e4 <memcpy+0x11c>
  8086cc:	198d883a 	add	r6,r3,r6
  8086d0:	29c00003 	ldbu	r7,0(r5)
  8086d4:	18c00044 	addi	r3,r3,1
  8086d8:	29400044 	addi	r5,r5,1
  8086dc:	19ffffc5 	stb	r7,-1(r3)
  8086e0:	19bffb1e 	bne	r3,r6,8086d0 <__alt_data_end+0xff8086d0>
  8086e4:	dfc00217 	ldw	ra,8(sp)
  8086e8:	dc400117 	ldw	r17,4(sp)
  8086ec:	dc000017 	ldw	r16,0(sp)
  8086f0:	dec00304 	addi	sp,sp,12
  8086f4:	f800283a 	ret
  8086f8:	2007883a 	mov	r3,r4
  8086fc:	003ff206 	br	8086c8 <__alt_data_end+0xff8086c8>
  808700:	2007883a 	mov	r3,r4
  808704:	003ff106 	br	8086cc <__alt_data_end+0xff8086cc>
  808708:	200d883a 	mov	r6,r4
  80870c:	003fee06 	br	8086c8 <__alt_data_end+0xff8086c8>

00808710 <memmove>:
  808710:	2005883a 	mov	r2,r4
  808714:	29000b2e 	bgeu	r5,r4,808744 <memmove+0x34>
  808718:	298f883a 	add	r7,r5,r6
  80871c:	21c0092e 	bgeu	r4,r7,808744 <memmove+0x34>
  808720:	2187883a 	add	r3,r4,r6
  808724:	198bc83a 	sub	r5,r3,r6
  808728:	30004826 	beq	r6,zero,80884c <memmove+0x13c>
  80872c:	39ffffc4 	addi	r7,r7,-1
  808730:	39000003 	ldbu	r4,0(r7)
  808734:	18ffffc4 	addi	r3,r3,-1
  808738:	19000005 	stb	r4,0(r3)
  80873c:	28fffb1e 	bne	r5,r3,80872c <__alt_data_end+0xff80872c>
  808740:	f800283a 	ret
  808744:	00c003c4 	movi	r3,15
  808748:	1980412e 	bgeu	r3,r6,808850 <memmove+0x140>
  80874c:	2886b03a 	or	r3,r5,r2
  808750:	18c000cc 	andi	r3,r3,3
  808754:	1800401e 	bne	r3,zero,808858 <memmove+0x148>
  808758:	33fffc04 	addi	r15,r6,-16
  80875c:	781ed13a 	srli	r15,r15,4
  808760:	28c00104 	addi	r3,r5,4
  808764:	13400104 	addi	r13,r2,4
  808768:	781c913a 	slli	r14,r15,4
  80876c:	2b000204 	addi	r12,r5,8
  808770:	12c00204 	addi	r11,r2,8
  808774:	73800504 	addi	r14,r14,20
  808778:	2a800304 	addi	r10,r5,12
  80877c:	12400304 	addi	r9,r2,12
  808780:	2b9d883a 	add	r14,r5,r14
  808784:	2811883a 	mov	r8,r5
  808788:	100f883a 	mov	r7,r2
  80878c:	41000017 	ldw	r4,0(r8)
  808790:	39c00404 	addi	r7,r7,16
  808794:	18c00404 	addi	r3,r3,16
  808798:	393ffc15 	stw	r4,-16(r7)
  80879c:	193ffc17 	ldw	r4,-16(r3)
  8087a0:	6b400404 	addi	r13,r13,16
  8087a4:	5ac00404 	addi	r11,r11,16
  8087a8:	693ffc15 	stw	r4,-16(r13)
  8087ac:	61000017 	ldw	r4,0(r12)
  8087b0:	4a400404 	addi	r9,r9,16
  8087b4:	42000404 	addi	r8,r8,16
  8087b8:	593ffc15 	stw	r4,-16(r11)
  8087bc:	51000017 	ldw	r4,0(r10)
  8087c0:	63000404 	addi	r12,r12,16
  8087c4:	52800404 	addi	r10,r10,16
  8087c8:	493ffc15 	stw	r4,-16(r9)
  8087cc:	1bbfef1e 	bne	r3,r14,80878c <__alt_data_end+0xff80878c>
  8087d0:	79000044 	addi	r4,r15,1
  8087d4:	2008913a 	slli	r4,r4,4
  8087d8:	328003cc 	andi	r10,r6,15
  8087dc:	02c000c4 	movi	r11,3
  8087e0:	1107883a 	add	r3,r2,r4
  8087e4:	290b883a 	add	r5,r5,r4
  8087e8:	5a801e2e 	bgeu	r11,r10,808864 <memmove+0x154>
  8087ec:	1813883a 	mov	r9,r3
  8087f0:	2811883a 	mov	r8,r5
  8087f4:	500f883a 	mov	r7,r10
  8087f8:	41000017 	ldw	r4,0(r8)
  8087fc:	4a400104 	addi	r9,r9,4
  808800:	39ffff04 	addi	r7,r7,-4
  808804:	493fff15 	stw	r4,-4(r9)
  808808:	42000104 	addi	r8,r8,4
  80880c:	59fffa36 	bltu	r11,r7,8087f8 <__alt_data_end+0xff8087f8>
  808810:	513fff04 	addi	r4,r10,-4
  808814:	2008d0ba 	srli	r4,r4,2
  808818:	318000cc 	andi	r6,r6,3
  80881c:	21000044 	addi	r4,r4,1
  808820:	2109883a 	add	r4,r4,r4
  808824:	2109883a 	add	r4,r4,r4
  808828:	1907883a 	add	r3,r3,r4
  80882c:	290b883a 	add	r5,r5,r4
  808830:	30000b26 	beq	r6,zero,808860 <memmove+0x150>
  808834:	198d883a 	add	r6,r3,r6
  808838:	29c00003 	ldbu	r7,0(r5)
  80883c:	18c00044 	addi	r3,r3,1
  808840:	29400044 	addi	r5,r5,1
  808844:	19ffffc5 	stb	r7,-1(r3)
  808848:	19bffb1e 	bne	r3,r6,808838 <__alt_data_end+0xff808838>
  80884c:	f800283a 	ret
  808850:	1007883a 	mov	r3,r2
  808854:	003ff606 	br	808830 <__alt_data_end+0xff808830>
  808858:	1007883a 	mov	r3,r2
  80885c:	003ff506 	br	808834 <__alt_data_end+0xff808834>
  808860:	f800283a 	ret
  808864:	500d883a 	mov	r6,r10
  808868:	003ff106 	br	808830 <__alt_data_end+0xff808830>

0080886c <memset>:
  80886c:	20c000cc 	andi	r3,r4,3
  808870:	2005883a 	mov	r2,r4
  808874:	18004426 	beq	r3,zero,808988 <memset+0x11c>
  808878:	31ffffc4 	addi	r7,r6,-1
  80887c:	30004026 	beq	r6,zero,808980 <memset+0x114>
  808880:	2813883a 	mov	r9,r5
  808884:	200d883a 	mov	r6,r4
  808888:	2007883a 	mov	r3,r4
  80888c:	00000406 	br	8088a0 <memset+0x34>
  808890:	3a3fffc4 	addi	r8,r7,-1
  808894:	31800044 	addi	r6,r6,1
  808898:	38003926 	beq	r7,zero,808980 <memset+0x114>
  80889c:	400f883a 	mov	r7,r8
  8088a0:	18c00044 	addi	r3,r3,1
  8088a4:	32400005 	stb	r9,0(r6)
  8088a8:	1a0000cc 	andi	r8,r3,3
  8088ac:	403ff81e 	bne	r8,zero,808890 <__alt_data_end+0xff808890>
  8088b0:	010000c4 	movi	r4,3
  8088b4:	21c02d2e 	bgeu	r4,r7,80896c <memset+0x100>
  8088b8:	29003fcc 	andi	r4,r5,255
  8088bc:	200c923a 	slli	r6,r4,8
  8088c0:	3108b03a 	or	r4,r6,r4
  8088c4:	200c943a 	slli	r6,r4,16
  8088c8:	218cb03a 	or	r6,r4,r6
  8088cc:	010003c4 	movi	r4,15
  8088d0:	21c0182e 	bgeu	r4,r7,808934 <memset+0xc8>
  8088d4:	3b3ffc04 	addi	r12,r7,-16
  8088d8:	6018d13a 	srli	r12,r12,4
  8088dc:	1a000104 	addi	r8,r3,4
  8088e0:	1ac00204 	addi	r11,r3,8
  8088e4:	6008913a 	slli	r4,r12,4
  8088e8:	1a800304 	addi	r10,r3,12
  8088ec:	1813883a 	mov	r9,r3
  8088f0:	21000504 	addi	r4,r4,20
  8088f4:	1909883a 	add	r4,r3,r4
  8088f8:	49800015 	stw	r6,0(r9)
  8088fc:	41800015 	stw	r6,0(r8)
  808900:	59800015 	stw	r6,0(r11)
  808904:	51800015 	stw	r6,0(r10)
  808908:	42000404 	addi	r8,r8,16
  80890c:	4a400404 	addi	r9,r9,16
  808910:	5ac00404 	addi	r11,r11,16
  808914:	52800404 	addi	r10,r10,16
  808918:	413ff71e 	bne	r8,r4,8088f8 <__alt_data_end+0xff8088f8>
  80891c:	63000044 	addi	r12,r12,1
  808920:	6018913a 	slli	r12,r12,4
  808924:	39c003cc 	andi	r7,r7,15
  808928:	010000c4 	movi	r4,3
  80892c:	1b07883a 	add	r3,r3,r12
  808930:	21c00e2e 	bgeu	r4,r7,80896c <memset+0x100>
  808934:	1813883a 	mov	r9,r3
  808938:	3811883a 	mov	r8,r7
  80893c:	010000c4 	movi	r4,3
  808940:	49800015 	stw	r6,0(r9)
  808944:	423fff04 	addi	r8,r8,-4
  808948:	4a400104 	addi	r9,r9,4
  80894c:	223ffc36 	bltu	r4,r8,808940 <__alt_data_end+0xff808940>
  808950:	393fff04 	addi	r4,r7,-4
  808954:	2008d0ba 	srli	r4,r4,2
  808958:	39c000cc 	andi	r7,r7,3
  80895c:	21000044 	addi	r4,r4,1
  808960:	2109883a 	add	r4,r4,r4
  808964:	2109883a 	add	r4,r4,r4
  808968:	1907883a 	add	r3,r3,r4
  80896c:	38000526 	beq	r7,zero,808984 <memset+0x118>
  808970:	19cf883a 	add	r7,r3,r7
  808974:	19400005 	stb	r5,0(r3)
  808978:	18c00044 	addi	r3,r3,1
  80897c:	38fffd1e 	bne	r7,r3,808974 <__alt_data_end+0xff808974>
  808980:	f800283a 	ret
  808984:	f800283a 	ret
  808988:	2007883a 	mov	r3,r4
  80898c:	300f883a 	mov	r7,r6
  808990:	003fc706 	br	8088b0 <__alt_data_end+0xff8088b0>

00808994 <_Balloc>:
  808994:	20801317 	ldw	r2,76(r4)
  808998:	defffc04 	addi	sp,sp,-16
  80899c:	dc400115 	stw	r17,4(sp)
  8089a0:	dc000015 	stw	r16,0(sp)
  8089a4:	dfc00315 	stw	ra,12(sp)
  8089a8:	dc800215 	stw	r18,8(sp)
  8089ac:	2023883a 	mov	r17,r4
  8089b0:	2821883a 	mov	r16,r5
  8089b4:	10000f26 	beq	r2,zero,8089f4 <_Balloc+0x60>
  8089b8:	8407883a 	add	r3,r16,r16
  8089bc:	18c7883a 	add	r3,r3,r3
  8089c0:	10c7883a 	add	r3,r2,r3
  8089c4:	18800017 	ldw	r2,0(r3)
  8089c8:	10001126 	beq	r2,zero,808a10 <_Balloc+0x7c>
  8089cc:	11000017 	ldw	r4,0(r2)
  8089d0:	19000015 	stw	r4,0(r3)
  8089d4:	10000415 	stw	zero,16(r2)
  8089d8:	10000315 	stw	zero,12(r2)
  8089dc:	dfc00317 	ldw	ra,12(sp)
  8089e0:	dc800217 	ldw	r18,8(sp)
  8089e4:	dc400117 	ldw	r17,4(sp)
  8089e8:	dc000017 	ldw	r16,0(sp)
  8089ec:	dec00404 	addi	sp,sp,16
  8089f0:	f800283a 	ret
  8089f4:	01800844 	movi	r6,33
  8089f8:	01400104 	movi	r5,4
  8089fc:	080b9600 	call	80b960 <_calloc_r>
  808a00:	88801315 	stw	r2,76(r17)
  808a04:	103fec1e 	bne	r2,zero,8089b8 <__alt_data_end+0xff8089b8>
  808a08:	0005883a 	mov	r2,zero
  808a0c:	003ff306 	br	8089dc <__alt_data_end+0xff8089dc>
  808a10:	01400044 	movi	r5,1
  808a14:	2c24983a 	sll	r18,r5,r16
  808a18:	8809883a 	mov	r4,r17
  808a1c:	91800144 	addi	r6,r18,5
  808a20:	318d883a 	add	r6,r6,r6
  808a24:	318d883a 	add	r6,r6,r6
  808a28:	080b9600 	call	80b960 <_calloc_r>
  808a2c:	103ff626 	beq	r2,zero,808a08 <__alt_data_end+0xff808a08>
  808a30:	14000115 	stw	r16,4(r2)
  808a34:	14800215 	stw	r18,8(r2)
  808a38:	003fe606 	br	8089d4 <__alt_data_end+0xff8089d4>

00808a3c <_Bfree>:
  808a3c:	28000826 	beq	r5,zero,808a60 <_Bfree+0x24>
  808a40:	28c00117 	ldw	r3,4(r5)
  808a44:	20801317 	ldw	r2,76(r4)
  808a48:	18c7883a 	add	r3,r3,r3
  808a4c:	18c7883a 	add	r3,r3,r3
  808a50:	10c5883a 	add	r2,r2,r3
  808a54:	10c00017 	ldw	r3,0(r2)
  808a58:	28c00015 	stw	r3,0(r5)
  808a5c:	11400015 	stw	r5,0(r2)
  808a60:	f800283a 	ret

00808a64 <__multadd>:
  808a64:	defffa04 	addi	sp,sp,-24
  808a68:	dc800315 	stw	r18,12(sp)
  808a6c:	dc400215 	stw	r17,8(sp)
  808a70:	dc000115 	stw	r16,4(sp)
  808a74:	2823883a 	mov	r17,r5
  808a78:	2c000417 	ldw	r16,16(r5)
  808a7c:	dfc00515 	stw	ra,20(sp)
  808a80:	dcc00415 	stw	r19,16(sp)
  808a84:	2025883a 	mov	r18,r4
  808a88:	29400504 	addi	r5,r5,20
  808a8c:	0011883a 	mov	r8,zero
  808a90:	28c00017 	ldw	r3,0(r5)
  808a94:	29400104 	addi	r5,r5,4
  808a98:	42000044 	addi	r8,r8,1
  808a9c:	18bfffcc 	andi	r2,r3,65535
  808aa0:	1185383a 	mul	r2,r2,r6
  808aa4:	1806d43a 	srli	r3,r3,16
  808aa8:	11cf883a 	add	r7,r2,r7
  808aac:	3808d43a 	srli	r4,r7,16
  808ab0:	1987383a 	mul	r3,r3,r6
  808ab4:	38bfffcc 	andi	r2,r7,65535
  808ab8:	1907883a 	add	r3,r3,r4
  808abc:	1808943a 	slli	r4,r3,16
  808ac0:	180ed43a 	srli	r7,r3,16
  808ac4:	2085883a 	add	r2,r4,r2
  808ac8:	28bfff15 	stw	r2,-4(r5)
  808acc:	443ff016 	blt	r8,r16,808a90 <__alt_data_end+0xff808a90>
  808ad0:	38000926 	beq	r7,zero,808af8 <__multadd+0x94>
  808ad4:	88800217 	ldw	r2,8(r17)
  808ad8:	80800f0e 	bge	r16,r2,808b18 <__multadd+0xb4>
  808adc:	80800144 	addi	r2,r16,5
  808ae0:	1085883a 	add	r2,r2,r2
  808ae4:	1085883a 	add	r2,r2,r2
  808ae8:	8885883a 	add	r2,r17,r2
  808aec:	11c00015 	stw	r7,0(r2)
  808af0:	84000044 	addi	r16,r16,1
  808af4:	8c000415 	stw	r16,16(r17)
  808af8:	8805883a 	mov	r2,r17
  808afc:	dfc00517 	ldw	ra,20(sp)
  808b00:	dcc00417 	ldw	r19,16(sp)
  808b04:	dc800317 	ldw	r18,12(sp)
  808b08:	dc400217 	ldw	r17,8(sp)
  808b0c:	dc000117 	ldw	r16,4(sp)
  808b10:	dec00604 	addi	sp,sp,24
  808b14:	f800283a 	ret
  808b18:	89400117 	ldw	r5,4(r17)
  808b1c:	9009883a 	mov	r4,r18
  808b20:	d9c00015 	stw	r7,0(sp)
  808b24:	29400044 	addi	r5,r5,1
  808b28:	08089940 	call	808994 <_Balloc>
  808b2c:	89800417 	ldw	r6,16(r17)
  808b30:	89400304 	addi	r5,r17,12
  808b34:	11000304 	addi	r4,r2,12
  808b38:	31800084 	addi	r6,r6,2
  808b3c:	318d883a 	add	r6,r6,r6
  808b40:	318d883a 	add	r6,r6,r6
  808b44:	1027883a 	mov	r19,r2
  808b48:	08085c80 	call	8085c8 <memcpy>
  808b4c:	d9c00017 	ldw	r7,0(sp)
  808b50:	88000a26 	beq	r17,zero,808b7c <__multadd+0x118>
  808b54:	88c00117 	ldw	r3,4(r17)
  808b58:	90801317 	ldw	r2,76(r18)
  808b5c:	18c7883a 	add	r3,r3,r3
  808b60:	18c7883a 	add	r3,r3,r3
  808b64:	10c5883a 	add	r2,r2,r3
  808b68:	10c00017 	ldw	r3,0(r2)
  808b6c:	88c00015 	stw	r3,0(r17)
  808b70:	14400015 	stw	r17,0(r2)
  808b74:	9823883a 	mov	r17,r19
  808b78:	003fd806 	br	808adc <__alt_data_end+0xff808adc>
  808b7c:	9823883a 	mov	r17,r19
  808b80:	003fd606 	br	808adc <__alt_data_end+0xff808adc>

00808b84 <__s2b>:
  808b84:	defff904 	addi	sp,sp,-28
  808b88:	dc400115 	stw	r17,4(sp)
  808b8c:	dc000015 	stw	r16,0(sp)
  808b90:	2023883a 	mov	r17,r4
  808b94:	2821883a 	mov	r16,r5
  808b98:	39000204 	addi	r4,r7,8
  808b9c:	01400244 	movi	r5,9
  808ba0:	dcc00315 	stw	r19,12(sp)
  808ba4:	dc800215 	stw	r18,8(sp)
  808ba8:	dfc00615 	stw	ra,24(sp)
  808bac:	dd400515 	stw	r21,20(sp)
  808bb0:	dd000415 	stw	r20,16(sp)
  808bb4:	3825883a 	mov	r18,r7
  808bb8:	3027883a 	mov	r19,r6
  808bbc:	080cc900 	call	80cc90 <__divsi3>
  808bc0:	00c00044 	movi	r3,1
  808bc4:	000b883a 	mov	r5,zero
  808bc8:	1880030e 	bge	r3,r2,808bd8 <__s2b+0x54>
  808bcc:	18c7883a 	add	r3,r3,r3
  808bd0:	29400044 	addi	r5,r5,1
  808bd4:	18bffd16 	blt	r3,r2,808bcc <__alt_data_end+0xff808bcc>
  808bd8:	8809883a 	mov	r4,r17
  808bdc:	08089940 	call	808994 <_Balloc>
  808be0:	d8c00717 	ldw	r3,28(sp)
  808be4:	10c00515 	stw	r3,20(r2)
  808be8:	00c00044 	movi	r3,1
  808bec:	10c00415 	stw	r3,16(r2)
  808bf0:	00c00244 	movi	r3,9
  808bf4:	1cc0210e 	bge	r3,r19,808c7c <__s2b+0xf8>
  808bf8:	80eb883a 	add	r21,r16,r3
  808bfc:	a829883a 	mov	r20,r21
  808c00:	84e1883a 	add	r16,r16,r19
  808c04:	a1c00007 	ldb	r7,0(r20)
  808c08:	01800284 	movi	r6,10
  808c0c:	a5000044 	addi	r20,r20,1
  808c10:	100b883a 	mov	r5,r2
  808c14:	39fff404 	addi	r7,r7,-48
  808c18:	8809883a 	mov	r4,r17
  808c1c:	0808a640 	call	808a64 <__multadd>
  808c20:	a43ff81e 	bne	r20,r16,808c04 <__alt_data_end+0xff808c04>
  808c24:	ace1883a 	add	r16,r21,r19
  808c28:	843ffe04 	addi	r16,r16,-8
  808c2c:	9c800a0e 	bge	r19,r18,808c58 <__s2b+0xd4>
  808c30:	94e5c83a 	sub	r18,r18,r19
  808c34:	84a5883a 	add	r18,r16,r18
  808c38:	81c00007 	ldb	r7,0(r16)
  808c3c:	01800284 	movi	r6,10
  808c40:	84000044 	addi	r16,r16,1
  808c44:	100b883a 	mov	r5,r2
  808c48:	39fff404 	addi	r7,r7,-48
  808c4c:	8809883a 	mov	r4,r17
  808c50:	0808a640 	call	808a64 <__multadd>
  808c54:	84bff81e 	bne	r16,r18,808c38 <__alt_data_end+0xff808c38>
  808c58:	dfc00617 	ldw	ra,24(sp)
  808c5c:	dd400517 	ldw	r21,20(sp)
  808c60:	dd000417 	ldw	r20,16(sp)
  808c64:	dcc00317 	ldw	r19,12(sp)
  808c68:	dc800217 	ldw	r18,8(sp)
  808c6c:	dc400117 	ldw	r17,4(sp)
  808c70:	dc000017 	ldw	r16,0(sp)
  808c74:	dec00704 	addi	sp,sp,28
  808c78:	f800283a 	ret
  808c7c:	84000284 	addi	r16,r16,10
  808c80:	1827883a 	mov	r19,r3
  808c84:	003fe906 	br	808c2c <__alt_data_end+0xff808c2c>

00808c88 <__hi0bits>:
  808c88:	20bfffec 	andhi	r2,r4,65535
  808c8c:	1000141e 	bne	r2,zero,808ce0 <__hi0bits+0x58>
  808c90:	2008943a 	slli	r4,r4,16
  808c94:	00800404 	movi	r2,16
  808c98:	20ffc02c 	andhi	r3,r4,65280
  808c9c:	1800021e 	bne	r3,zero,808ca8 <__hi0bits+0x20>
  808ca0:	2008923a 	slli	r4,r4,8
  808ca4:	10800204 	addi	r2,r2,8
  808ca8:	20fc002c 	andhi	r3,r4,61440
  808cac:	1800021e 	bne	r3,zero,808cb8 <__hi0bits+0x30>
  808cb0:	2008913a 	slli	r4,r4,4
  808cb4:	10800104 	addi	r2,r2,4
  808cb8:	20f0002c 	andhi	r3,r4,49152
  808cbc:	1800031e 	bne	r3,zero,808ccc <__hi0bits+0x44>
  808cc0:	2109883a 	add	r4,r4,r4
  808cc4:	10800084 	addi	r2,r2,2
  808cc8:	2109883a 	add	r4,r4,r4
  808ccc:	20000316 	blt	r4,zero,808cdc <__hi0bits+0x54>
  808cd0:	2110002c 	andhi	r4,r4,16384
  808cd4:	2000041e 	bne	r4,zero,808ce8 <__hi0bits+0x60>
  808cd8:	00800804 	movi	r2,32
  808cdc:	f800283a 	ret
  808ce0:	0005883a 	mov	r2,zero
  808ce4:	003fec06 	br	808c98 <__alt_data_end+0xff808c98>
  808ce8:	10800044 	addi	r2,r2,1
  808cec:	f800283a 	ret

00808cf0 <__lo0bits>:
  808cf0:	20c00017 	ldw	r3,0(r4)
  808cf4:	188001cc 	andi	r2,r3,7
  808cf8:	10000826 	beq	r2,zero,808d1c <__lo0bits+0x2c>
  808cfc:	1880004c 	andi	r2,r3,1
  808d00:	1000211e 	bne	r2,zero,808d88 <__lo0bits+0x98>
  808d04:	1880008c 	andi	r2,r3,2
  808d08:	1000211e 	bne	r2,zero,808d90 <__lo0bits+0xa0>
  808d0c:	1806d0ba 	srli	r3,r3,2
  808d10:	00800084 	movi	r2,2
  808d14:	20c00015 	stw	r3,0(r4)
  808d18:	f800283a 	ret
  808d1c:	18bfffcc 	andi	r2,r3,65535
  808d20:	10001326 	beq	r2,zero,808d70 <__lo0bits+0x80>
  808d24:	0005883a 	mov	r2,zero
  808d28:	19403fcc 	andi	r5,r3,255
  808d2c:	2800021e 	bne	r5,zero,808d38 <__lo0bits+0x48>
  808d30:	1806d23a 	srli	r3,r3,8
  808d34:	10800204 	addi	r2,r2,8
  808d38:	194003cc 	andi	r5,r3,15
  808d3c:	2800021e 	bne	r5,zero,808d48 <__lo0bits+0x58>
  808d40:	1806d13a 	srli	r3,r3,4
  808d44:	10800104 	addi	r2,r2,4
  808d48:	194000cc 	andi	r5,r3,3
  808d4c:	2800021e 	bne	r5,zero,808d58 <__lo0bits+0x68>
  808d50:	1806d0ba 	srli	r3,r3,2
  808d54:	10800084 	addi	r2,r2,2
  808d58:	1940004c 	andi	r5,r3,1
  808d5c:	2800081e 	bne	r5,zero,808d80 <__lo0bits+0x90>
  808d60:	1806d07a 	srli	r3,r3,1
  808d64:	1800051e 	bne	r3,zero,808d7c <__lo0bits+0x8c>
  808d68:	00800804 	movi	r2,32
  808d6c:	f800283a 	ret
  808d70:	1806d43a 	srli	r3,r3,16
  808d74:	00800404 	movi	r2,16
  808d78:	003feb06 	br	808d28 <__alt_data_end+0xff808d28>
  808d7c:	10800044 	addi	r2,r2,1
  808d80:	20c00015 	stw	r3,0(r4)
  808d84:	f800283a 	ret
  808d88:	0005883a 	mov	r2,zero
  808d8c:	f800283a 	ret
  808d90:	1806d07a 	srli	r3,r3,1
  808d94:	00800044 	movi	r2,1
  808d98:	20c00015 	stw	r3,0(r4)
  808d9c:	f800283a 	ret

00808da0 <__i2b>:
  808da0:	defffd04 	addi	sp,sp,-12
  808da4:	dc000015 	stw	r16,0(sp)
  808da8:	04000044 	movi	r16,1
  808dac:	dc400115 	stw	r17,4(sp)
  808db0:	2823883a 	mov	r17,r5
  808db4:	800b883a 	mov	r5,r16
  808db8:	dfc00215 	stw	ra,8(sp)
  808dbc:	08089940 	call	808994 <_Balloc>
  808dc0:	14400515 	stw	r17,20(r2)
  808dc4:	14000415 	stw	r16,16(r2)
  808dc8:	dfc00217 	ldw	ra,8(sp)
  808dcc:	dc400117 	ldw	r17,4(sp)
  808dd0:	dc000017 	ldw	r16,0(sp)
  808dd4:	dec00304 	addi	sp,sp,12
  808dd8:	f800283a 	ret

00808ddc <__multiply>:
  808ddc:	defffa04 	addi	sp,sp,-24
  808de0:	dcc00315 	stw	r19,12(sp)
  808de4:	dc800215 	stw	r18,8(sp)
  808de8:	34c00417 	ldw	r19,16(r6)
  808dec:	2c800417 	ldw	r18,16(r5)
  808df0:	dd000415 	stw	r20,16(sp)
  808df4:	dc400115 	stw	r17,4(sp)
  808df8:	dfc00515 	stw	ra,20(sp)
  808dfc:	dc000015 	stw	r16,0(sp)
  808e00:	2829883a 	mov	r20,r5
  808e04:	3023883a 	mov	r17,r6
  808e08:	94c0050e 	bge	r18,r19,808e20 <__multiply+0x44>
  808e0c:	9007883a 	mov	r3,r18
  808e10:	3029883a 	mov	r20,r6
  808e14:	9825883a 	mov	r18,r19
  808e18:	2823883a 	mov	r17,r5
  808e1c:	1827883a 	mov	r19,r3
  808e20:	a0800217 	ldw	r2,8(r20)
  808e24:	94e1883a 	add	r16,r18,r19
  808e28:	a1400117 	ldw	r5,4(r20)
  808e2c:	1400010e 	bge	r2,r16,808e34 <__multiply+0x58>
  808e30:	29400044 	addi	r5,r5,1
  808e34:	08089940 	call	808994 <_Balloc>
  808e38:	8415883a 	add	r10,r16,r16
  808e3c:	12c00504 	addi	r11,r2,20
  808e40:	5295883a 	add	r10,r10,r10
  808e44:	5a95883a 	add	r10,r11,r10
  808e48:	5807883a 	mov	r3,r11
  808e4c:	5a80032e 	bgeu	r11,r10,808e5c <__multiply+0x80>
  808e50:	18000015 	stw	zero,0(r3)
  808e54:	18c00104 	addi	r3,r3,4
  808e58:	1abffd36 	bltu	r3,r10,808e50 <__alt_data_end+0xff808e50>
  808e5c:	9ce7883a 	add	r19,r19,r19
  808e60:	94a5883a 	add	r18,r18,r18
  808e64:	89800504 	addi	r6,r17,20
  808e68:	9ce7883a 	add	r19,r19,r19
  808e6c:	a3400504 	addi	r13,r20,20
  808e70:	94a5883a 	add	r18,r18,r18
  808e74:	34d9883a 	add	r12,r6,r19
  808e78:	6c93883a 	add	r9,r13,r18
  808e7c:	3300422e 	bgeu	r6,r12,808f88 <__multiply+0x1ac>
  808e80:	37c00017 	ldw	ra,0(r6)
  808e84:	fbffffcc 	andi	r15,ra,65535
  808e88:	78001b26 	beq	r15,zero,808ef8 <__multiply+0x11c>
  808e8c:	5811883a 	mov	r8,r11
  808e90:	681d883a 	mov	r14,r13
  808e94:	000f883a 	mov	r7,zero
  808e98:	71000017 	ldw	r4,0(r14)
  808e9c:	40c00017 	ldw	r3,0(r8)
  808ea0:	73800104 	addi	r14,r14,4
  808ea4:	217fffcc 	andi	r5,r4,65535
  808ea8:	2bcb383a 	mul	r5,r5,r15
  808eac:	2008d43a 	srli	r4,r4,16
  808eb0:	1c7fffcc 	andi	r17,r3,65535
  808eb4:	2c4b883a 	add	r5,r5,r17
  808eb8:	29cb883a 	add	r5,r5,r7
  808ebc:	23c9383a 	mul	r4,r4,r15
  808ec0:	1806d43a 	srli	r3,r3,16
  808ec4:	280ed43a 	srli	r7,r5,16
  808ec8:	297fffcc 	andi	r5,r5,65535
  808ecc:	20c7883a 	add	r3,r4,r3
  808ed0:	19c7883a 	add	r3,r3,r7
  808ed4:	1808943a 	slli	r4,r3,16
  808ed8:	4023883a 	mov	r17,r8
  808edc:	180ed43a 	srli	r7,r3,16
  808ee0:	214ab03a 	or	r5,r4,r5
  808ee4:	41400015 	stw	r5,0(r8)
  808ee8:	42000104 	addi	r8,r8,4
  808eec:	727fea36 	bltu	r14,r9,808e98 <__alt_data_end+0xff808e98>
  808ef0:	89c00115 	stw	r7,4(r17)
  808ef4:	37c00017 	ldw	ra,0(r6)
  808ef8:	f83ed43a 	srli	ra,ra,16
  808efc:	f8001f26 	beq	ra,zero,808f7c <__multiply+0x1a0>
  808f00:	58c00017 	ldw	r3,0(r11)
  808f04:	681d883a 	mov	r14,r13
  808f08:	581f883a 	mov	r15,r11
  808f0c:	1811883a 	mov	r8,r3
  808f10:	5825883a 	mov	r18,r11
  808f14:	000f883a 	mov	r7,zero
  808f18:	00000106 	br	808f20 <__multiply+0x144>
  808f1c:	8825883a 	mov	r18,r17
  808f20:	7140000b 	ldhu	r5,0(r14)
  808f24:	4010d43a 	srli	r8,r8,16
  808f28:	193fffcc 	andi	r4,r3,65535
  808f2c:	2fcb383a 	mul	r5,r5,ra
  808f30:	7bc00104 	addi	r15,r15,4
  808f34:	73800104 	addi	r14,r14,4
  808f38:	2a0b883a 	add	r5,r5,r8
  808f3c:	29cb883a 	add	r5,r5,r7
  808f40:	2806943a 	slli	r3,r5,16
  808f44:	94400104 	addi	r17,r18,4
  808f48:	280ad43a 	srli	r5,r5,16
  808f4c:	1908b03a 	or	r4,r3,r4
  808f50:	793fff15 	stw	r4,-4(r15)
  808f54:	70ffff17 	ldw	r3,-4(r14)
  808f58:	8a000017 	ldw	r8,0(r17)
  808f5c:	1806d43a 	srli	r3,r3,16
  808f60:	413fffcc 	andi	r4,r8,65535
  808f64:	1fc7383a 	mul	r3,r3,ra
  808f68:	1907883a 	add	r3,r3,r4
  808f6c:	1947883a 	add	r3,r3,r5
  808f70:	180ed43a 	srli	r7,r3,16
  808f74:	727fe936 	bltu	r14,r9,808f1c <__alt_data_end+0xff808f1c>
  808f78:	90c00115 	stw	r3,4(r18)
  808f7c:	31800104 	addi	r6,r6,4
  808f80:	5ac00104 	addi	r11,r11,4
  808f84:	333fbe36 	bltu	r6,r12,808e80 <__alt_data_end+0xff808e80>
  808f88:	0400090e 	bge	zero,r16,808fb0 <__multiply+0x1d4>
  808f8c:	50ffff17 	ldw	r3,-4(r10)
  808f90:	52bfff04 	addi	r10,r10,-4
  808f94:	18000326 	beq	r3,zero,808fa4 <__multiply+0x1c8>
  808f98:	00000506 	br	808fb0 <__multiply+0x1d4>
  808f9c:	50c00017 	ldw	r3,0(r10)
  808fa0:	1800031e 	bne	r3,zero,808fb0 <__multiply+0x1d4>
  808fa4:	843fffc4 	addi	r16,r16,-1
  808fa8:	52bfff04 	addi	r10,r10,-4
  808fac:	803ffb1e 	bne	r16,zero,808f9c <__alt_data_end+0xff808f9c>
  808fb0:	14000415 	stw	r16,16(r2)
  808fb4:	dfc00517 	ldw	ra,20(sp)
  808fb8:	dd000417 	ldw	r20,16(sp)
  808fbc:	dcc00317 	ldw	r19,12(sp)
  808fc0:	dc800217 	ldw	r18,8(sp)
  808fc4:	dc400117 	ldw	r17,4(sp)
  808fc8:	dc000017 	ldw	r16,0(sp)
  808fcc:	dec00604 	addi	sp,sp,24
  808fd0:	f800283a 	ret

00808fd4 <__pow5mult>:
  808fd4:	defffa04 	addi	sp,sp,-24
  808fd8:	dcc00315 	stw	r19,12(sp)
  808fdc:	dc000015 	stw	r16,0(sp)
  808fe0:	dfc00515 	stw	ra,20(sp)
  808fe4:	dd000415 	stw	r20,16(sp)
  808fe8:	dc800215 	stw	r18,8(sp)
  808fec:	dc400115 	stw	r17,4(sp)
  808ff0:	308000cc 	andi	r2,r6,3
  808ff4:	3021883a 	mov	r16,r6
  808ff8:	2027883a 	mov	r19,r4
  808ffc:	10002f1e 	bne	r2,zero,8090bc <__pow5mult+0xe8>
  809000:	2825883a 	mov	r18,r5
  809004:	8021d0ba 	srai	r16,r16,2
  809008:	80001a26 	beq	r16,zero,809074 <__pow5mult+0xa0>
  80900c:	9c401217 	ldw	r17,72(r19)
  809010:	8800061e 	bne	r17,zero,80902c <__pow5mult+0x58>
  809014:	00003406 	br	8090e8 <__pow5mult+0x114>
  809018:	8021d07a 	srai	r16,r16,1
  80901c:	80001526 	beq	r16,zero,809074 <__pow5mult+0xa0>
  809020:	88800017 	ldw	r2,0(r17)
  809024:	10001c26 	beq	r2,zero,809098 <__pow5mult+0xc4>
  809028:	1023883a 	mov	r17,r2
  80902c:	8080004c 	andi	r2,r16,1
  809030:	103ff926 	beq	r2,zero,809018 <__alt_data_end+0xff809018>
  809034:	880d883a 	mov	r6,r17
  809038:	900b883a 	mov	r5,r18
  80903c:	9809883a 	mov	r4,r19
  809040:	0808ddc0 	call	808ddc <__multiply>
  809044:	90001b26 	beq	r18,zero,8090b4 <__pow5mult+0xe0>
  809048:	91000117 	ldw	r4,4(r18)
  80904c:	98c01317 	ldw	r3,76(r19)
  809050:	8021d07a 	srai	r16,r16,1
  809054:	2109883a 	add	r4,r4,r4
  809058:	2109883a 	add	r4,r4,r4
  80905c:	1907883a 	add	r3,r3,r4
  809060:	19000017 	ldw	r4,0(r3)
  809064:	91000015 	stw	r4,0(r18)
  809068:	1c800015 	stw	r18,0(r3)
  80906c:	1025883a 	mov	r18,r2
  809070:	803feb1e 	bne	r16,zero,809020 <__alt_data_end+0xff809020>
  809074:	9005883a 	mov	r2,r18
  809078:	dfc00517 	ldw	ra,20(sp)
  80907c:	dd000417 	ldw	r20,16(sp)
  809080:	dcc00317 	ldw	r19,12(sp)
  809084:	dc800217 	ldw	r18,8(sp)
  809088:	dc400117 	ldw	r17,4(sp)
  80908c:	dc000017 	ldw	r16,0(sp)
  809090:	dec00604 	addi	sp,sp,24
  809094:	f800283a 	ret
  809098:	880d883a 	mov	r6,r17
  80909c:	880b883a 	mov	r5,r17
  8090a0:	9809883a 	mov	r4,r19
  8090a4:	0808ddc0 	call	808ddc <__multiply>
  8090a8:	88800015 	stw	r2,0(r17)
  8090ac:	10000015 	stw	zero,0(r2)
  8090b0:	003fdd06 	br	809028 <__alt_data_end+0xff809028>
  8090b4:	1025883a 	mov	r18,r2
  8090b8:	003fd706 	br	809018 <__alt_data_end+0xff809018>
  8090bc:	10bfffc4 	addi	r2,r2,-1
  8090c0:	1085883a 	add	r2,r2,r2
  8090c4:	00c02074 	movhi	r3,129
  8090c8:	18c38f04 	addi	r3,r3,3644
  8090cc:	1085883a 	add	r2,r2,r2
  8090d0:	1885883a 	add	r2,r3,r2
  8090d4:	11800017 	ldw	r6,0(r2)
  8090d8:	000f883a 	mov	r7,zero
  8090dc:	0808a640 	call	808a64 <__multadd>
  8090e0:	1025883a 	mov	r18,r2
  8090e4:	003fc706 	br	809004 <__alt_data_end+0xff809004>
  8090e8:	05000044 	movi	r20,1
  8090ec:	a00b883a 	mov	r5,r20
  8090f0:	9809883a 	mov	r4,r19
  8090f4:	08089940 	call	808994 <_Balloc>
  8090f8:	1023883a 	mov	r17,r2
  8090fc:	00809c44 	movi	r2,625
  809100:	88800515 	stw	r2,20(r17)
  809104:	8d000415 	stw	r20,16(r17)
  809108:	9c401215 	stw	r17,72(r19)
  80910c:	88000015 	stw	zero,0(r17)
  809110:	003fc606 	br	80902c <__alt_data_end+0xff80902c>

00809114 <__lshift>:
  809114:	defff904 	addi	sp,sp,-28
  809118:	dd400515 	stw	r21,20(sp)
  80911c:	dcc00315 	stw	r19,12(sp)
  809120:	302bd17a 	srai	r21,r6,5
  809124:	2cc00417 	ldw	r19,16(r5)
  809128:	28800217 	ldw	r2,8(r5)
  80912c:	dd000415 	stw	r20,16(sp)
  809130:	ace7883a 	add	r19,r21,r19
  809134:	dc800215 	stw	r18,8(sp)
  809138:	dc400115 	stw	r17,4(sp)
  80913c:	dc000015 	stw	r16,0(sp)
  809140:	dfc00615 	stw	ra,24(sp)
  809144:	9c000044 	addi	r16,r19,1
  809148:	2823883a 	mov	r17,r5
  80914c:	3029883a 	mov	r20,r6
  809150:	2025883a 	mov	r18,r4
  809154:	29400117 	ldw	r5,4(r5)
  809158:	1400030e 	bge	r2,r16,809168 <__lshift+0x54>
  80915c:	1085883a 	add	r2,r2,r2
  809160:	29400044 	addi	r5,r5,1
  809164:	143ffd16 	blt	r2,r16,80915c <__alt_data_end+0xff80915c>
  809168:	9009883a 	mov	r4,r18
  80916c:	08089940 	call	808994 <_Balloc>
  809170:	10c00504 	addi	r3,r2,20
  809174:	0540070e 	bge	zero,r21,809194 <__lshift+0x80>
  809178:	ad6b883a 	add	r21,r21,r21
  80917c:	ad6b883a 	add	r21,r21,r21
  809180:	1809883a 	mov	r4,r3
  809184:	1d47883a 	add	r3,r3,r21
  809188:	20000015 	stw	zero,0(r4)
  80918c:	21000104 	addi	r4,r4,4
  809190:	193ffd1e 	bne	r3,r4,809188 <__alt_data_end+0xff809188>
  809194:	8a000417 	ldw	r8,16(r17)
  809198:	89000504 	addi	r4,r17,20
  80919c:	a18007cc 	andi	r6,r20,31
  8091a0:	4211883a 	add	r8,r8,r8
  8091a4:	4211883a 	add	r8,r8,r8
  8091a8:	2211883a 	add	r8,r4,r8
  8091ac:	30002326 	beq	r6,zero,80923c <__lshift+0x128>
  8091b0:	02400804 	movi	r9,32
  8091b4:	4993c83a 	sub	r9,r9,r6
  8091b8:	000b883a 	mov	r5,zero
  8091bc:	21c00017 	ldw	r7,0(r4)
  8091c0:	1815883a 	mov	r10,r3
  8091c4:	18c00104 	addi	r3,r3,4
  8091c8:	398e983a 	sll	r7,r7,r6
  8091cc:	21000104 	addi	r4,r4,4
  8091d0:	394ab03a 	or	r5,r7,r5
  8091d4:	197fff15 	stw	r5,-4(r3)
  8091d8:	217fff17 	ldw	r5,-4(r4)
  8091dc:	2a4ad83a 	srl	r5,r5,r9
  8091e0:	223ff636 	bltu	r4,r8,8091bc <__alt_data_end+0xff8091bc>
  8091e4:	51400115 	stw	r5,4(r10)
  8091e8:	28001a1e 	bne	r5,zero,809254 <__lshift+0x140>
  8091ec:	843fffc4 	addi	r16,r16,-1
  8091f0:	14000415 	stw	r16,16(r2)
  8091f4:	88000826 	beq	r17,zero,809218 <__lshift+0x104>
  8091f8:	89000117 	ldw	r4,4(r17)
  8091fc:	90c01317 	ldw	r3,76(r18)
  809200:	2109883a 	add	r4,r4,r4
  809204:	2109883a 	add	r4,r4,r4
  809208:	1907883a 	add	r3,r3,r4
  80920c:	19000017 	ldw	r4,0(r3)
  809210:	89000015 	stw	r4,0(r17)
  809214:	1c400015 	stw	r17,0(r3)
  809218:	dfc00617 	ldw	ra,24(sp)
  80921c:	dd400517 	ldw	r21,20(sp)
  809220:	dd000417 	ldw	r20,16(sp)
  809224:	dcc00317 	ldw	r19,12(sp)
  809228:	dc800217 	ldw	r18,8(sp)
  80922c:	dc400117 	ldw	r17,4(sp)
  809230:	dc000017 	ldw	r16,0(sp)
  809234:	dec00704 	addi	sp,sp,28
  809238:	f800283a 	ret
  80923c:	21400017 	ldw	r5,0(r4)
  809240:	18c00104 	addi	r3,r3,4
  809244:	21000104 	addi	r4,r4,4
  809248:	197fff15 	stw	r5,-4(r3)
  80924c:	223ffb36 	bltu	r4,r8,80923c <__alt_data_end+0xff80923c>
  809250:	003fe606 	br	8091ec <__alt_data_end+0xff8091ec>
  809254:	9c000084 	addi	r16,r19,2
  809258:	003fe406 	br	8091ec <__alt_data_end+0xff8091ec>

0080925c <__mcmp>:
  80925c:	20800417 	ldw	r2,16(r4)
  809260:	28c00417 	ldw	r3,16(r5)
  809264:	10c5c83a 	sub	r2,r2,r3
  809268:	1000111e 	bne	r2,zero,8092b0 <__mcmp+0x54>
  80926c:	18c7883a 	add	r3,r3,r3
  809270:	18c7883a 	add	r3,r3,r3
  809274:	21000504 	addi	r4,r4,20
  809278:	29400504 	addi	r5,r5,20
  80927c:	20c5883a 	add	r2,r4,r3
  809280:	28cb883a 	add	r5,r5,r3
  809284:	00000106 	br	80928c <__mcmp+0x30>
  809288:	20800a2e 	bgeu	r4,r2,8092b4 <__mcmp+0x58>
  80928c:	10bfff04 	addi	r2,r2,-4
  809290:	297fff04 	addi	r5,r5,-4
  809294:	11800017 	ldw	r6,0(r2)
  809298:	28c00017 	ldw	r3,0(r5)
  80929c:	30fffa26 	beq	r6,r3,809288 <__alt_data_end+0xff809288>
  8092a0:	30c00236 	bltu	r6,r3,8092ac <__mcmp+0x50>
  8092a4:	00800044 	movi	r2,1
  8092a8:	f800283a 	ret
  8092ac:	00bfffc4 	movi	r2,-1
  8092b0:	f800283a 	ret
  8092b4:	0005883a 	mov	r2,zero
  8092b8:	f800283a 	ret

008092bc <__mdiff>:
  8092bc:	28c00417 	ldw	r3,16(r5)
  8092c0:	30800417 	ldw	r2,16(r6)
  8092c4:	defffa04 	addi	sp,sp,-24
  8092c8:	dcc00315 	stw	r19,12(sp)
  8092cc:	dc800215 	stw	r18,8(sp)
  8092d0:	dfc00515 	stw	ra,20(sp)
  8092d4:	dd000415 	stw	r20,16(sp)
  8092d8:	dc400115 	stw	r17,4(sp)
  8092dc:	dc000015 	stw	r16,0(sp)
  8092e0:	1887c83a 	sub	r3,r3,r2
  8092e4:	2825883a 	mov	r18,r5
  8092e8:	3027883a 	mov	r19,r6
  8092ec:	1800141e 	bne	r3,zero,809340 <__mdiff+0x84>
  8092f0:	1085883a 	add	r2,r2,r2
  8092f4:	1085883a 	add	r2,r2,r2
  8092f8:	2a000504 	addi	r8,r5,20
  8092fc:	34000504 	addi	r16,r6,20
  809300:	4087883a 	add	r3,r8,r2
  809304:	8085883a 	add	r2,r16,r2
  809308:	00000106 	br	809310 <__mdiff+0x54>
  80930c:	40c0592e 	bgeu	r8,r3,809474 <__mdiff+0x1b8>
  809310:	18ffff04 	addi	r3,r3,-4
  809314:	10bfff04 	addi	r2,r2,-4
  809318:	19c00017 	ldw	r7,0(r3)
  80931c:	11400017 	ldw	r5,0(r2)
  809320:	397ffa26 	beq	r7,r5,80930c <__alt_data_end+0xff80930c>
  809324:	3940592e 	bgeu	r7,r5,80948c <__mdiff+0x1d0>
  809328:	9005883a 	mov	r2,r18
  80932c:	4023883a 	mov	r17,r8
  809330:	9825883a 	mov	r18,r19
  809334:	05000044 	movi	r20,1
  809338:	1027883a 	mov	r19,r2
  80933c:	00000406 	br	809350 <__mdiff+0x94>
  809340:	18005616 	blt	r3,zero,80949c <__mdiff+0x1e0>
  809344:	34400504 	addi	r17,r6,20
  809348:	2c000504 	addi	r16,r5,20
  80934c:	0029883a 	mov	r20,zero
  809350:	91400117 	ldw	r5,4(r18)
  809354:	08089940 	call	808994 <_Balloc>
  809358:	92400417 	ldw	r9,16(r18)
  80935c:	9b000417 	ldw	r12,16(r19)
  809360:	12c00504 	addi	r11,r2,20
  809364:	4a51883a 	add	r8,r9,r9
  809368:	6319883a 	add	r12,r12,r12
  80936c:	4211883a 	add	r8,r8,r8
  809370:	6319883a 	add	r12,r12,r12
  809374:	15000315 	stw	r20,12(r2)
  809378:	8211883a 	add	r8,r16,r8
  80937c:	8b19883a 	add	r12,r17,r12
  809380:	0007883a 	mov	r3,zero
  809384:	81400017 	ldw	r5,0(r16)
  809388:	89c00017 	ldw	r7,0(r17)
  80938c:	59800104 	addi	r6,r11,4
  809390:	293fffcc 	andi	r4,r5,65535
  809394:	20c7883a 	add	r3,r4,r3
  809398:	393fffcc 	andi	r4,r7,65535
  80939c:	1909c83a 	sub	r4,r3,r4
  8093a0:	280ad43a 	srli	r5,r5,16
  8093a4:	380ed43a 	srli	r7,r7,16
  8093a8:	2007d43a 	srai	r3,r4,16
  8093ac:	213fffcc 	andi	r4,r4,65535
  8093b0:	29cbc83a 	sub	r5,r5,r7
  8093b4:	28c7883a 	add	r3,r5,r3
  8093b8:	180a943a 	slli	r5,r3,16
  8093bc:	8c400104 	addi	r17,r17,4
  8093c0:	84000104 	addi	r16,r16,4
  8093c4:	2908b03a 	or	r4,r5,r4
  8093c8:	59000015 	stw	r4,0(r11)
  8093cc:	1807d43a 	srai	r3,r3,16
  8093d0:	3015883a 	mov	r10,r6
  8093d4:	3017883a 	mov	r11,r6
  8093d8:	8b3fea36 	bltu	r17,r12,809384 <__alt_data_end+0xff809384>
  8093dc:	8200162e 	bgeu	r16,r8,809438 <__mdiff+0x17c>
  8093e0:	8017883a 	mov	r11,r16
  8093e4:	59400017 	ldw	r5,0(r11)
  8093e8:	31800104 	addi	r6,r6,4
  8093ec:	5ac00104 	addi	r11,r11,4
  8093f0:	293fffcc 	andi	r4,r5,65535
  8093f4:	20c7883a 	add	r3,r4,r3
  8093f8:	280ed43a 	srli	r7,r5,16
  8093fc:	180bd43a 	srai	r5,r3,16
  809400:	193fffcc 	andi	r4,r3,65535
  809404:	3947883a 	add	r3,r7,r5
  809408:	180a943a 	slli	r5,r3,16
  80940c:	1807d43a 	srai	r3,r3,16
  809410:	2908b03a 	or	r4,r5,r4
  809414:	313fff15 	stw	r4,-4(r6)
  809418:	5a3ff236 	bltu	r11,r8,8093e4 <__alt_data_end+0xff8093e4>
  80941c:	0406303a 	nor	r3,zero,r16
  809420:	1a07883a 	add	r3,r3,r8
  809424:	1806d0ba 	srli	r3,r3,2
  809428:	18c00044 	addi	r3,r3,1
  80942c:	18c7883a 	add	r3,r3,r3
  809430:	18c7883a 	add	r3,r3,r3
  809434:	50d5883a 	add	r10,r10,r3
  809438:	50ffff04 	addi	r3,r10,-4
  80943c:	2000041e 	bne	r4,zero,809450 <__mdiff+0x194>
  809440:	18ffff04 	addi	r3,r3,-4
  809444:	19000017 	ldw	r4,0(r3)
  809448:	4a7fffc4 	addi	r9,r9,-1
  80944c:	203ffc26 	beq	r4,zero,809440 <__alt_data_end+0xff809440>
  809450:	12400415 	stw	r9,16(r2)
  809454:	dfc00517 	ldw	ra,20(sp)
  809458:	dd000417 	ldw	r20,16(sp)
  80945c:	dcc00317 	ldw	r19,12(sp)
  809460:	dc800217 	ldw	r18,8(sp)
  809464:	dc400117 	ldw	r17,4(sp)
  809468:	dc000017 	ldw	r16,0(sp)
  80946c:	dec00604 	addi	sp,sp,24
  809470:	f800283a 	ret
  809474:	000b883a 	mov	r5,zero
  809478:	08089940 	call	808994 <_Balloc>
  80947c:	00c00044 	movi	r3,1
  809480:	10c00415 	stw	r3,16(r2)
  809484:	10000515 	stw	zero,20(r2)
  809488:	003ff206 	br	809454 <__alt_data_end+0xff809454>
  80948c:	8023883a 	mov	r17,r16
  809490:	0029883a 	mov	r20,zero
  809494:	4021883a 	mov	r16,r8
  809498:	003fad06 	br	809350 <__alt_data_end+0xff809350>
  80949c:	9005883a 	mov	r2,r18
  8094a0:	94400504 	addi	r17,r18,20
  8094a4:	9c000504 	addi	r16,r19,20
  8094a8:	9825883a 	mov	r18,r19
  8094ac:	05000044 	movi	r20,1
  8094b0:	1027883a 	mov	r19,r2
  8094b4:	003fa606 	br	809350 <__alt_data_end+0xff809350>

008094b8 <__ulp>:
  8094b8:	295ffc2c 	andhi	r5,r5,32752
  8094bc:	00bf3034 	movhi	r2,64704
  8094c0:	2887883a 	add	r3,r5,r2
  8094c4:	00c0020e 	bge	zero,r3,8094d0 <__ulp+0x18>
  8094c8:	0005883a 	mov	r2,zero
  8094cc:	f800283a 	ret
  8094d0:	00c7c83a 	sub	r3,zero,r3
  8094d4:	1807d53a 	srai	r3,r3,20
  8094d8:	008004c4 	movi	r2,19
  8094dc:	10c00b0e 	bge	r2,r3,80950c <__ulp+0x54>
  8094e0:	18bffb04 	addi	r2,r3,-20
  8094e4:	01000784 	movi	r4,30
  8094e8:	0007883a 	mov	r3,zero
  8094ec:	20800516 	blt	r4,r2,809504 <__ulp+0x4c>
  8094f0:	010007c4 	movi	r4,31
  8094f4:	2089c83a 	sub	r4,r4,r2
  8094f8:	00800044 	movi	r2,1
  8094fc:	1104983a 	sll	r2,r2,r4
  809500:	f800283a 	ret
  809504:	00800044 	movi	r2,1
  809508:	f800283a 	ret
  80950c:	01400234 	movhi	r5,8
  809510:	28c7d83a 	sra	r3,r5,r3
  809514:	0005883a 	mov	r2,zero
  809518:	f800283a 	ret

0080951c <__b2d>:
  80951c:	defffa04 	addi	sp,sp,-24
  809520:	dc000015 	stw	r16,0(sp)
  809524:	24000417 	ldw	r16,16(r4)
  809528:	dc400115 	stw	r17,4(sp)
  80952c:	24400504 	addi	r17,r4,20
  809530:	8421883a 	add	r16,r16,r16
  809534:	8421883a 	add	r16,r16,r16
  809538:	8c21883a 	add	r16,r17,r16
  80953c:	dc800215 	stw	r18,8(sp)
  809540:	84bfff17 	ldw	r18,-4(r16)
  809544:	dd000415 	stw	r20,16(sp)
  809548:	dcc00315 	stw	r19,12(sp)
  80954c:	9009883a 	mov	r4,r18
  809550:	2829883a 	mov	r20,r5
  809554:	dfc00515 	stw	ra,20(sp)
  809558:	0808c880 	call	808c88 <__hi0bits>
  80955c:	00c00804 	movi	r3,32
  809560:	1889c83a 	sub	r4,r3,r2
  809564:	a1000015 	stw	r4,0(r20)
  809568:	01000284 	movi	r4,10
  80956c:	84ffff04 	addi	r19,r16,-4
  809570:	20801216 	blt	r4,r2,8095bc <__b2d+0xa0>
  809574:	018002c4 	movi	r6,11
  809578:	308dc83a 	sub	r6,r6,r2
  80957c:	9186d83a 	srl	r3,r18,r6
  809580:	18cffc34 	orhi	r3,r3,16368
  809584:	8cc0212e 	bgeu	r17,r19,80960c <__b2d+0xf0>
  809588:	813ffe17 	ldw	r4,-8(r16)
  80958c:	218cd83a 	srl	r6,r4,r6
  809590:	10800544 	addi	r2,r2,21
  809594:	9084983a 	sll	r2,r18,r2
  809598:	1184b03a 	or	r2,r2,r6
  80959c:	dfc00517 	ldw	ra,20(sp)
  8095a0:	dd000417 	ldw	r20,16(sp)
  8095a4:	dcc00317 	ldw	r19,12(sp)
  8095a8:	dc800217 	ldw	r18,8(sp)
  8095ac:	dc400117 	ldw	r17,4(sp)
  8095b0:	dc000017 	ldw	r16,0(sp)
  8095b4:	dec00604 	addi	sp,sp,24
  8095b8:	f800283a 	ret
  8095bc:	8cc00f2e 	bgeu	r17,r19,8095fc <__b2d+0xe0>
  8095c0:	117ffd44 	addi	r5,r2,-11
  8095c4:	80bffe17 	ldw	r2,-8(r16)
  8095c8:	28000e26 	beq	r5,zero,809604 <__b2d+0xe8>
  8095cc:	1949c83a 	sub	r4,r3,r5
  8095d0:	9164983a 	sll	r18,r18,r5
  8095d4:	1106d83a 	srl	r3,r2,r4
  8095d8:	81bffe04 	addi	r6,r16,-8
  8095dc:	948ffc34 	orhi	r18,r18,16368
  8095e0:	90c6b03a 	or	r3,r18,r3
  8095e4:	89800e2e 	bgeu	r17,r6,809620 <__b2d+0x104>
  8095e8:	81bffd17 	ldw	r6,-12(r16)
  8095ec:	1144983a 	sll	r2,r2,r5
  8095f0:	310ad83a 	srl	r5,r6,r4
  8095f4:	2884b03a 	or	r2,r5,r2
  8095f8:	003fe806 	br	80959c <__alt_data_end+0xff80959c>
  8095fc:	10bffd44 	addi	r2,r2,-11
  809600:	1000041e 	bne	r2,zero,809614 <__b2d+0xf8>
  809604:	90cffc34 	orhi	r3,r18,16368
  809608:	003fe406 	br	80959c <__alt_data_end+0xff80959c>
  80960c:	000d883a 	mov	r6,zero
  809610:	003fdf06 	br	809590 <__alt_data_end+0xff809590>
  809614:	90a4983a 	sll	r18,r18,r2
  809618:	0005883a 	mov	r2,zero
  80961c:	003ff906 	br	809604 <__alt_data_end+0xff809604>
  809620:	1144983a 	sll	r2,r2,r5
  809624:	003fdd06 	br	80959c <__alt_data_end+0xff80959c>

00809628 <__d2b>:
  809628:	defff804 	addi	sp,sp,-32
  80962c:	dc000215 	stw	r16,8(sp)
  809630:	3021883a 	mov	r16,r6
  809634:	dc400315 	stw	r17,12(sp)
  809638:	8022907a 	slli	r17,r16,1
  80963c:	dd000615 	stw	r20,24(sp)
  809640:	2829883a 	mov	r20,r5
  809644:	01400044 	movi	r5,1
  809648:	dcc00515 	stw	r19,20(sp)
  80964c:	dc800415 	stw	r18,16(sp)
  809650:	dfc00715 	stw	ra,28(sp)
  809654:	3825883a 	mov	r18,r7
  809658:	8822d57a 	srli	r17,r17,21
  80965c:	08089940 	call	808994 <_Balloc>
  809660:	1027883a 	mov	r19,r2
  809664:	00800434 	movhi	r2,16
  809668:	10bfffc4 	addi	r2,r2,-1
  80966c:	808c703a 	and	r6,r16,r2
  809670:	88000126 	beq	r17,zero,809678 <__d2b+0x50>
  809674:	31800434 	orhi	r6,r6,16
  809678:	d9800015 	stw	r6,0(sp)
  80967c:	a0002426 	beq	r20,zero,809710 <__d2b+0xe8>
  809680:	d9000104 	addi	r4,sp,4
  809684:	dd000115 	stw	r20,4(sp)
  809688:	0808cf00 	call	808cf0 <__lo0bits>
  80968c:	d8c00017 	ldw	r3,0(sp)
  809690:	10002f1e 	bne	r2,zero,809750 <__d2b+0x128>
  809694:	d9000117 	ldw	r4,4(sp)
  809698:	99000515 	stw	r4,20(r19)
  80969c:	1821003a 	cmpeq	r16,r3,zero
  8096a0:	01000084 	movi	r4,2
  8096a4:	2421c83a 	sub	r16,r4,r16
  8096a8:	98c00615 	stw	r3,24(r19)
  8096ac:	9c000415 	stw	r16,16(r19)
  8096b0:	88001f1e 	bne	r17,zero,809730 <__d2b+0x108>
  8096b4:	10bef384 	addi	r2,r2,-1074
  8096b8:	90800015 	stw	r2,0(r18)
  8096bc:	00900034 	movhi	r2,16384
  8096c0:	10bfffc4 	addi	r2,r2,-1
  8096c4:	8085883a 	add	r2,r16,r2
  8096c8:	1085883a 	add	r2,r2,r2
  8096cc:	1085883a 	add	r2,r2,r2
  8096d0:	9885883a 	add	r2,r19,r2
  8096d4:	11000517 	ldw	r4,20(r2)
  8096d8:	8020917a 	slli	r16,r16,5
  8096dc:	0808c880 	call	808c88 <__hi0bits>
  8096e0:	d8c00817 	ldw	r3,32(sp)
  8096e4:	8085c83a 	sub	r2,r16,r2
  8096e8:	18800015 	stw	r2,0(r3)
  8096ec:	9805883a 	mov	r2,r19
  8096f0:	dfc00717 	ldw	ra,28(sp)
  8096f4:	dd000617 	ldw	r20,24(sp)
  8096f8:	dcc00517 	ldw	r19,20(sp)
  8096fc:	dc800417 	ldw	r18,16(sp)
  809700:	dc400317 	ldw	r17,12(sp)
  809704:	dc000217 	ldw	r16,8(sp)
  809708:	dec00804 	addi	sp,sp,32
  80970c:	f800283a 	ret
  809710:	d809883a 	mov	r4,sp
  809714:	0808cf00 	call	808cf0 <__lo0bits>
  809718:	d8c00017 	ldw	r3,0(sp)
  80971c:	04000044 	movi	r16,1
  809720:	9c000415 	stw	r16,16(r19)
  809724:	98c00515 	stw	r3,20(r19)
  809728:	10800804 	addi	r2,r2,32
  80972c:	883fe126 	beq	r17,zero,8096b4 <__alt_data_end+0xff8096b4>
  809730:	00c00d44 	movi	r3,53
  809734:	8c7ef344 	addi	r17,r17,-1075
  809738:	88a3883a 	add	r17,r17,r2
  80973c:	1885c83a 	sub	r2,r3,r2
  809740:	d8c00817 	ldw	r3,32(sp)
  809744:	94400015 	stw	r17,0(r18)
  809748:	18800015 	stw	r2,0(r3)
  80974c:	003fe706 	br	8096ec <__alt_data_end+0xff8096ec>
  809750:	01000804 	movi	r4,32
  809754:	2089c83a 	sub	r4,r4,r2
  809758:	1908983a 	sll	r4,r3,r4
  80975c:	d9400117 	ldw	r5,4(sp)
  809760:	1886d83a 	srl	r3,r3,r2
  809764:	2148b03a 	or	r4,r4,r5
  809768:	99000515 	stw	r4,20(r19)
  80976c:	d8c00015 	stw	r3,0(sp)
  809770:	003fca06 	br	80969c <__alt_data_end+0xff80969c>

00809774 <__ratio>:
  809774:	defff904 	addi	sp,sp,-28
  809778:	dc400315 	stw	r17,12(sp)
  80977c:	2823883a 	mov	r17,r5
  809780:	d9400104 	addi	r5,sp,4
  809784:	dfc00615 	stw	ra,24(sp)
  809788:	dcc00515 	stw	r19,20(sp)
  80978c:	dc800415 	stw	r18,16(sp)
  809790:	2027883a 	mov	r19,r4
  809794:	dc000215 	stw	r16,8(sp)
  809798:	080951c0 	call	80951c <__b2d>
  80979c:	d80b883a 	mov	r5,sp
  8097a0:	8809883a 	mov	r4,r17
  8097a4:	1025883a 	mov	r18,r2
  8097a8:	1821883a 	mov	r16,r3
  8097ac:	080951c0 	call	80951c <__b2d>
  8097b0:	8a000417 	ldw	r8,16(r17)
  8097b4:	99000417 	ldw	r4,16(r19)
  8097b8:	d9400117 	ldw	r5,4(sp)
  8097bc:	2209c83a 	sub	r4,r4,r8
  8097c0:	2010917a 	slli	r8,r4,5
  8097c4:	d9000017 	ldw	r4,0(sp)
  8097c8:	2909c83a 	sub	r4,r5,r4
  8097cc:	4109883a 	add	r4,r8,r4
  8097d0:	01000e0e 	bge	zero,r4,80980c <__ratio+0x98>
  8097d4:	2008953a 	slli	r4,r4,20
  8097d8:	2421883a 	add	r16,r4,r16
  8097dc:	100d883a 	mov	r6,r2
  8097e0:	180f883a 	mov	r7,r3
  8097e4:	9009883a 	mov	r4,r18
  8097e8:	800b883a 	mov	r5,r16
  8097ec:	080ce440 	call	80ce44 <__divdf3>
  8097f0:	dfc00617 	ldw	ra,24(sp)
  8097f4:	dcc00517 	ldw	r19,20(sp)
  8097f8:	dc800417 	ldw	r18,16(sp)
  8097fc:	dc400317 	ldw	r17,12(sp)
  809800:	dc000217 	ldw	r16,8(sp)
  809804:	dec00704 	addi	sp,sp,28
  809808:	f800283a 	ret
  80980c:	2008953a 	slli	r4,r4,20
  809810:	1907c83a 	sub	r3,r3,r4
  809814:	003ff106 	br	8097dc <__alt_data_end+0xff8097dc>

00809818 <_mprec_log10>:
  809818:	defffe04 	addi	sp,sp,-8
  80981c:	dc000015 	stw	r16,0(sp)
  809820:	dfc00115 	stw	ra,4(sp)
  809824:	008005c4 	movi	r2,23
  809828:	2021883a 	mov	r16,r4
  80982c:	11000d0e 	bge	r2,r4,809864 <_mprec_log10+0x4c>
  809830:	0005883a 	mov	r2,zero
  809834:	00cffc34 	movhi	r3,16368
  809838:	843fffc4 	addi	r16,r16,-1
  80983c:	000d883a 	mov	r6,zero
  809840:	01d00934 	movhi	r7,16420
  809844:	1009883a 	mov	r4,r2
  809848:	180b883a 	mov	r5,r3
  80984c:	08013200 	call	801320 <__muldf3>
  809850:	803ff91e 	bne	r16,zero,809838 <__alt_data_end+0xff809838>
  809854:	dfc00117 	ldw	ra,4(sp)
  809858:	dc000017 	ldw	r16,0(sp)
  80985c:	dec00204 	addi	sp,sp,8
  809860:	f800283a 	ret
  809864:	202090fa 	slli	r16,r4,3
  809868:	00802074 	movhi	r2,129
  80986c:	1083a604 	addi	r2,r2,3736
  809870:	1421883a 	add	r16,r2,r16
  809874:	80800017 	ldw	r2,0(r16)
  809878:	80c00117 	ldw	r3,4(r16)
  80987c:	dfc00117 	ldw	ra,4(sp)
  809880:	dc000017 	ldw	r16,0(sp)
  809884:	dec00204 	addi	sp,sp,8
  809888:	f800283a 	ret

0080988c <__copybits>:
  80988c:	297fffc4 	addi	r5,r5,-1
  809890:	280fd17a 	srai	r7,r5,5
  809894:	30c00417 	ldw	r3,16(r6)
  809898:	30800504 	addi	r2,r6,20
  80989c:	39c00044 	addi	r7,r7,1
  8098a0:	18c7883a 	add	r3,r3,r3
  8098a4:	39cf883a 	add	r7,r7,r7
  8098a8:	18c7883a 	add	r3,r3,r3
  8098ac:	39cf883a 	add	r7,r7,r7
  8098b0:	10c7883a 	add	r3,r2,r3
  8098b4:	21cf883a 	add	r7,r4,r7
  8098b8:	10c00d2e 	bgeu	r2,r3,8098f0 <__copybits+0x64>
  8098bc:	200b883a 	mov	r5,r4
  8098c0:	12000017 	ldw	r8,0(r2)
  8098c4:	29400104 	addi	r5,r5,4
  8098c8:	10800104 	addi	r2,r2,4
  8098cc:	2a3fff15 	stw	r8,-4(r5)
  8098d0:	10fffb36 	bltu	r2,r3,8098c0 <__alt_data_end+0xff8098c0>
  8098d4:	1985c83a 	sub	r2,r3,r6
  8098d8:	10bffac4 	addi	r2,r2,-21
  8098dc:	1004d0ba 	srli	r2,r2,2
  8098e0:	10800044 	addi	r2,r2,1
  8098e4:	1085883a 	add	r2,r2,r2
  8098e8:	1085883a 	add	r2,r2,r2
  8098ec:	2089883a 	add	r4,r4,r2
  8098f0:	21c0032e 	bgeu	r4,r7,809900 <__copybits+0x74>
  8098f4:	20000015 	stw	zero,0(r4)
  8098f8:	21000104 	addi	r4,r4,4
  8098fc:	21fffd36 	bltu	r4,r7,8098f4 <__alt_data_end+0xff8098f4>
  809900:	f800283a 	ret

00809904 <__any_on>:
  809904:	20c00417 	ldw	r3,16(r4)
  809908:	2805d17a 	srai	r2,r5,5
  80990c:	21000504 	addi	r4,r4,20
  809910:	18800d0e 	bge	r3,r2,809948 <__any_on+0x44>
  809914:	18c7883a 	add	r3,r3,r3
  809918:	18c7883a 	add	r3,r3,r3
  80991c:	20c7883a 	add	r3,r4,r3
  809920:	20c0192e 	bgeu	r4,r3,809988 <__any_on+0x84>
  809924:	18bfff17 	ldw	r2,-4(r3)
  809928:	18ffff04 	addi	r3,r3,-4
  80992c:	1000041e 	bne	r2,zero,809940 <__any_on+0x3c>
  809930:	20c0142e 	bgeu	r4,r3,809984 <__any_on+0x80>
  809934:	18ffff04 	addi	r3,r3,-4
  809938:	19400017 	ldw	r5,0(r3)
  80993c:	283ffc26 	beq	r5,zero,809930 <__alt_data_end+0xff809930>
  809940:	00800044 	movi	r2,1
  809944:	f800283a 	ret
  809948:	10c00a0e 	bge	r2,r3,809974 <__any_on+0x70>
  80994c:	1085883a 	add	r2,r2,r2
  809950:	1085883a 	add	r2,r2,r2
  809954:	294007cc 	andi	r5,r5,31
  809958:	2087883a 	add	r3,r4,r2
  80995c:	283ff026 	beq	r5,zero,809920 <__alt_data_end+0xff809920>
  809960:	19800017 	ldw	r6,0(r3)
  809964:	3144d83a 	srl	r2,r6,r5
  809968:	114a983a 	sll	r5,r2,r5
  80996c:	317ff41e 	bne	r6,r5,809940 <__alt_data_end+0xff809940>
  809970:	003feb06 	br	809920 <__alt_data_end+0xff809920>
  809974:	1085883a 	add	r2,r2,r2
  809978:	1085883a 	add	r2,r2,r2
  80997c:	2087883a 	add	r3,r4,r2
  809980:	003fe706 	br	809920 <__alt_data_end+0xff809920>
  809984:	f800283a 	ret
  809988:	0005883a 	mov	r2,zero
  80998c:	f800283a 	ret

00809990 <_realloc_r>:
  809990:	defff604 	addi	sp,sp,-40
  809994:	dc800215 	stw	r18,8(sp)
  809998:	dfc00915 	stw	ra,36(sp)
  80999c:	df000815 	stw	fp,32(sp)
  8099a0:	ddc00715 	stw	r23,28(sp)
  8099a4:	dd800615 	stw	r22,24(sp)
  8099a8:	dd400515 	stw	r21,20(sp)
  8099ac:	dd000415 	stw	r20,16(sp)
  8099b0:	dcc00315 	stw	r19,12(sp)
  8099b4:	dc400115 	stw	r17,4(sp)
  8099b8:	dc000015 	stw	r16,0(sp)
  8099bc:	3025883a 	mov	r18,r6
  8099c0:	2800b726 	beq	r5,zero,809ca0 <_realloc_r+0x310>
  8099c4:	282b883a 	mov	r21,r5
  8099c8:	2029883a 	mov	r20,r4
  8099cc:	080e9580 	call	80e958 <__malloc_lock>
  8099d0:	a8bfff17 	ldw	r2,-4(r21)
  8099d4:	043fff04 	movi	r16,-4
  8099d8:	90c002c4 	addi	r3,r18,11
  8099dc:	01000584 	movi	r4,22
  8099e0:	acfffe04 	addi	r19,r21,-8
  8099e4:	1420703a 	and	r16,r2,r16
  8099e8:	20c0332e 	bgeu	r4,r3,809ab8 <_realloc_r+0x128>
  8099ec:	047ffe04 	movi	r17,-8
  8099f0:	1c62703a 	and	r17,r3,r17
  8099f4:	8807883a 	mov	r3,r17
  8099f8:	88005816 	blt	r17,zero,809b5c <_realloc_r+0x1cc>
  8099fc:	8c805736 	bltu	r17,r18,809b5c <_realloc_r+0x1cc>
  809a00:	80c0300e 	bge	r16,r3,809ac4 <_realloc_r+0x134>
  809a04:	07002074 	movhi	fp,129
  809a08:	e7150404 	addi	fp,fp,21520
  809a0c:	e1c00217 	ldw	r7,8(fp)
  809a10:	9c09883a 	add	r4,r19,r16
  809a14:	22000117 	ldw	r8,4(r4)
  809a18:	21c06326 	beq	r4,r7,809ba8 <_realloc_r+0x218>
  809a1c:	017fff84 	movi	r5,-2
  809a20:	414a703a 	and	r5,r8,r5
  809a24:	214b883a 	add	r5,r4,r5
  809a28:	29800117 	ldw	r6,4(r5)
  809a2c:	3180004c 	andi	r6,r6,1
  809a30:	30003f26 	beq	r6,zero,809b30 <_realloc_r+0x1a0>
  809a34:	1080004c 	andi	r2,r2,1
  809a38:	10008326 	beq	r2,zero,809c48 <_realloc_r+0x2b8>
  809a3c:	900b883a 	mov	r5,r18
  809a40:	a009883a 	mov	r4,r20
  809a44:	0807cd80 	call	807cd8 <_malloc_r>
  809a48:	1025883a 	mov	r18,r2
  809a4c:	10011e26 	beq	r2,zero,809ec8 <_realloc_r+0x538>
  809a50:	a93fff17 	ldw	r4,-4(r21)
  809a54:	10fffe04 	addi	r3,r2,-8
  809a58:	00bfff84 	movi	r2,-2
  809a5c:	2084703a 	and	r2,r4,r2
  809a60:	9885883a 	add	r2,r19,r2
  809a64:	1880ee26 	beq	r3,r2,809e20 <_realloc_r+0x490>
  809a68:	81bfff04 	addi	r6,r16,-4
  809a6c:	00800904 	movi	r2,36
  809a70:	1180b836 	bltu	r2,r6,809d54 <_realloc_r+0x3c4>
  809a74:	00c004c4 	movi	r3,19
  809a78:	19809636 	bltu	r3,r6,809cd4 <_realloc_r+0x344>
  809a7c:	9005883a 	mov	r2,r18
  809a80:	a807883a 	mov	r3,r21
  809a84:	19000017 	ldw	r4,0(r3)
  809a88:	11000015 	stw	r4,0(r2)
  809a8c:	19000117 	ldw	r4,4(r3)
  809a90:	11000115 	stw	r4,4(r2)
  809a94:	18c00217 	ldw	r3,8(r3)
  809a98:	10c00215 	stw	r3,8(r2)
  809a9c:	a80b883a 	mov	r5,r21
  809aa0:	a009883a 	mov	r4,r20
  809aa4:	08070ec0 	call	8070ec <_free_r>
  809aa8:	a009883a 	mov	r4,r20
  809aac:	080e97c0 	call	80e97c <__malloc_unlock>
  809ab0:	9005883a 	mov	r2,r18
  809ab4:	00001206 	br	809b00 <_realloc_r+0x170>
  809ab8:	00c00404 	movi	r3,16
  809abc:	1823883a 	mov	r17,r3
  809ac0:	003fce06 	br	8099fc <__alt_data_end+0xff8099fc>
  809ac4:	a825883a 	mov	r18,r21
  809ac8:	8445c83a 	sub	r2,r16,r17
  809acc:	00c003c4 	movi	r3,15
  809ad0:	18802636 	bltu	r3,r2,809b6c <_realloc_r+0x1dc>
  809ad4:	99800117 	ldw	r6,4(r19)
  809ad8:	9c07883a 	add	r3,r19,r16
  809adc:	3180004c 	andi	r6,r6,1
  809ae0:	3420b03a 	or	r16,r6,r16
  809ae4:	9c000115 	stw	r16,4(r19)
  809ae8:	18800117 	ldw	r2,4(r3)
  809aec:	10800054 	ori	r2,r2,1
  809af0:	18800115 	stw	r2,4(r3)
  809af4:	a009883a 	mov	r4,r20
  809af8:	080e97c0 	call	80e97c <__malloc_unlock>
  809afc:	9005883a 	mov	r2,r18
  809b00:	dfc00917 	ldw	ra,36(sp)
  809b04:	df000817 	ldw	fp,32(sp)
  809b08:	ddc00717 	ldw	r23,28(sp)
  809b0c:	dd800617 	ldw	r22,24(sp)
  809b10:	dd400517 	ldw	r21,20(sp)
  809b14:	dd000417 	ldw	r20,16(sp)
  809b18:	dcc00317 	ldw	r19,12(sp)
  809b1c:	dc800217 	ldw	r18,8(sp)
  809b20:	dc400117 	ldw	r17,4(sp)
  809b24:	dc000017 	ldw	r16,0(sp)
  809b28:	dec00a04 	addi	sp,sp,40
  809b2c:	f800283a 	ret
  809b30:	017fff04 	movi	r5,-4
  809b34:	414a703a 	and	r5,r8,r5
  809b38:	814d883a 	add	r6,r16,r5
  809b3c:	30c01f16 	blt	r6,r3,809bbc <_realloc_r+0x22c>
  809b40:	20800317 	ldw	r2,12(r4)
  809b44:	20c00217 	ldw	r3,8(r4)
  809b48:	a825883a 	mov	r18,r21
  809b4c:	3021883a 	mov	r16,r6
  809b50:	18800315 	stw	r2,12(r3)
  809b54:	10c00215 	stw	r3,8(r2)
  809b58:	003fdb06 	br	809ac8 <__alt_data_end+0xff809ac8>
  809b5c:	00800304 	movi	r2,12
  809b60:	a0800015 	stw	r2,0(r20)
  809b64:	0005883a 	mov	r2,zero
  809b68:	003fe506 	br	809b00 <__alt_data_end+0xff809b00>
  809b6c:	98c00117 	ldw	r3,4(r19)
  809b70:	9c4b883a 	add	r5,r19,r17
  809b74:	11000054 	ori	r4,r2,1
  809b78:	18c0004c 	andi	r3,r3,1
  809b7c:	1c62b03a 	or	r17,r3,r17
  809b80:	9c400115 	stw	r17,4(r19)
  809b84:	29000115 	stw	r4,4(r5)
  809b88:	2885883a 	add	r2,r5,r2
  809b8c:	10c00117 	ldw	r3,4(r2)
  809b90:	29400204 	addi	r5,r5,8
  809b94:	a009883a 	mov	r4,r20
  809b98:	18c00054 	ori	r3,r3,1
  809b9c:	10c00115 	stw	r3,4(r2)
  809ba0:	08070ec0 	call	8070ec <_free_r>
  809ba4:	003fd306 	br	809af4 <__alt_data_end+0xff809af4>
  809ba8:	017fff04 	movi	r5,-4
  809bac:	414a703a 	and	r5,r8,r5
  809bb0:	89800404 	addi	r6,r17,16
  809bb4:	8151883a 	add	r8,r16,r5
  809bb8:	4180590e 	bge	r8,r6,809d20 <_realloc_r+0x390>
  809bbc:	1080004c 	andi	r2,r2,1
  809bc0:	103f9e1e 	bne	r2,zero,809a3c <__alt_data_end+0xff809a3c>
  809bc4:	adbffe17 	ldw	r22,-8(r21)
  809bc8:	00bfff04 	movi	r2,-4
  809bcc:	9dadc83a 	sub	r22,r19,r22
  809bd0:	b1800117 	ldw	r6,4(r22)
  809bd4:	3084703a 	and	r2,r6,r2
  809bd8:	20002026 	beq	r4,zero,809c5c <_realloc_r+0x2cc>
  809bdc:	80af883a 	add	r23,r16,r2
  809be0:	b96f883a 	add	r23,r23,r5
  809be4:	21c05f26 	beq	r4,r7,809d64 <_realloc_r+0x3d4>
  809be8:	b8c01c16 	blt	r23,r3,809c5c <_realloc_r+0x2cc>
  809bec:	20800317 	ldw	r2,12(r4)
  809bf0:	20c00217 	ldw	r3,8(r4)
  809bf4:	81bfff04 	addi	r6,r16,-4
  809bf8:	01000904 	movi	r4,36
  809bfc:	18800315 	stw	r2,12(r3)
  809c00:	10c00215 	stw	r3,8(r2)
  809c04:	b0c00217 	ldw	r3,8(r22)
  809c08:	b0800317 	ldw	r2,12(r22)
  809c0c:	b4800204 	addi	r18,r22,8
  809c10:	18800315 	stw	r2,12(r3)
  809c14:	10c00215 	stw	r3,8(r2)
  809c18:	21801b36 	bltu	r4,r6,809c88 <_realloc_r+0x2f8>
  809c1c:	008004c4 	movi	r2,19
  809c20:	1180352e 	bgeu	r2,r6,809cf8 <_realloc_r+0x368>
  809c24:	a8800017 	ldw	r2,0(r21)
  809c28:	b0800215 	stw	r2,8(r22)
  809c2c:	a8800117 	ldw	r2,4(r21)
  809c30:	b0800315 	stw	r2,12(r22)
  809c34:	008006c4 	movi	r2,27
  809c38:	11807f36 	bltu	r2,r6,809e38 <_realloc_r+0x4a8>
  809c3c:	b0800404 	addi	r2,r22,16
  809c40:	ad400204 	addi	r21,r21,8
  809c44:	00002d06 	br	809cfc <_realloc_r+0x36c>
  809c48:	adbffe17 	ldw	r22,-8(r21)
  809c4c:	00bfff04 	movi	r2,-4
  809c50:	9dadc83a 	sub	r22,r19,r22
  809c54:	b1000117 	ldw	r4,4(r22)
  809c58:	2084703a 	and	r2,r4,r2
  809c5c:	b03f7726 	beq	r22,zero,809a3c <__alt_data_end+0xff809a3c>
  809c60:	80af883a 	add	r23,r16,r2
  809c64:	b8ff7516 	blt	r23,r3,809a3c <__alt_data_end+0xff809a3c>
  809c68:	b0800317 	ldw	r2,12(r22)
  809c6c:	b0c00217 	ldw	r3,8(r22)
  809c70:	81bfff04 	addi	r6,r16,-4
  809c74:	01000904 	movi	r4,36
  809c78:	18800315 	stw	r2,12(r3)
  809c7c:	10c00215 	stw	r3,8(r2)
  809c80:	b4800204 	addi	r18,r22,8
  809c84:	21bfe52e 	bgeu	r4,r6,809c1c <__alt_data_end+0xff809c1c>
  809c88:	a80b883a 	mov	r5,r21
  809c8c:	9009883a 	mov	r4,r18
  809c90:	08087100 	call	808710 <memmove>
  809c94:	b821883a 	mov	r16,r23
  809c98:	b027883a 	mov	r19,r22
  809c9c:	003f8a06 	br	809ac8 <__alt_data_end+0xff809ac8>
  809ca0:	300b883a 	mov	r5,r6
  809ca4:	dfc00917 	ldw	ra,36(sp)
  809ca8:	df000817 	ldw	fp,32(sp)
  809cac:	ddc00717 	ldw	r23,28(sp)
  809cb0:	dd800617 	ldw	r22,24(sp)
  809cb4:	dd400517 	ldw	r21,20(sp)
  809cb8:	dd000417 	ldw	r20,16(sp)
  809cbc:	dcc00317 	ldw	r19,12(sp)
  809cc0:	dc800217 	ldw	r18,8(sp)
  809cc4:	dc400117 	ldw	r17,4(sp)
  809cc8:	dc000017 	ldw	r16,0(sp)
  809ccc:	dec00a04 	addi	sp,sp,40
  809cd0:	0807cd81 	jmpi	807cd8 <_malloc_r>
  809cd4:	a8c00017 	ldw	r3,0(r21)
  809cd8:	90c00015 	stw	r3,0(r18)
  809cdc:	a8c00117 	ldw	r3,4(r21)
  809ce0:	90c00115 	stw	r3,4(r18)
  809ce4:	00c006c4 	movi	r3,27
  809ce8:	19804536 	bltu	r3,r6,809e00 <_realloc_r+0x470>
  809cec:	90800204 	addi	r2,r18,8
  809cf0:	a8c00204 	addi	r3,r21,8
  809cf4:	003f6306 	br	809a84 <__alt_data_end+0xff809a84>
  809cf8:	9005883a 	mov	r2,r18
  809cfc:	a8c00017 	ldw	r3,0(r21)
  809d00:	b821883a 	mov	r16,r23
  809d04:	b027883a 	mov	r19,r22
  809d08:	10c00015 	stw	r3,0(r2)
  809d0c:	a8c00117 	ldw	r3,4(r21)
  809d10:	10c00115 	stw	r3,4(r2)
  809d14:	a8c00217 	ldw	r3,8(r21)
  809d18:	10c00215 	stw	r3,8(r2)
  809d1c:	003f6a06 	br	809ac8 <__alt_data_end+0xff809ac8>
  809d20:	9c67883a 	add	r19,r19,r17
  809d24:	4445c83a 	sub	r2,r8,r17
  809d28:	e4c00215 	stw	r19,8(fp)
  809d2c:	10800054 	ori	r2,r2,1
  809d30:	98800115 	stw	r2,4(r19)
  809d34:	a8bfff17 	ldw	r2,-4(r21)
  809d38:	a009883a 	mov	r4,r20
  809d3c:	1080004c 	andi	r2,r2,1
  809d40:	1462b03a 	or	r17,r2,r17
  809d44:	ac7fff15 	stw	r17,-4(r21)
  809d48:	080e97c0 	call	80e97c <__malloc_unlock>
  809d4c:	a805883a 	mov	r2,r21
  809d50:	003f6b06 	br	809b00 <__alt_data_end+0xff809b00>
  809d54:	a80b883a 	mov	r5,r21
  809d58:	9009883a 	mov	r4,r18
  809d5c:	08087100 	call	808710 <memmove>
  809d60:	003f4e06 	br	809a9c <__alt_data_end+0xff809a9c>
  809d64:	89000404 	addi	r4,r17,16
  809d68:	b93fbc16 	blt	r23,r4,809c5c <__alt_data_end+0xff809c5c>
  809d6c:	b0800317 	ldw	r2,12(r22)
  809d70:	b0c00217 	ldw	r3,8(r22)
  809d74:	81bfff04 	addi	r6,r16,-4
  809d78:	01000904 	movi	r4,36
  809d7c:	18800315 	stw	r2,12(r3)
  809d80:	10c00215 	stw	r3,8(r2)
  809d84:	b4800204 	addi	r18,r22,8
  809d88:	21804336 	bltu	r4,r6,809e98 <_realloc_r+0x508>
  809d8c:	008004c4 	movi	r2,19
  809d90:	11803f2e 	bgeu	r2,r6,809e90 <_realloc_r+0x500>
  809d94:	a8800017 	ldw	r2,0(r21)
  809d98:	b0800215 	stw	r2,8(r22)
  809d9c:	a8800117 	ldw	r2,4(r21)
  809da0:	b0800315 	stw	r2,12(r22)
  809da4:	008006c4 	movi	r2,27
  809da8:	11803f36 	bltu	r2,r6,809ea8 <_realloc_r+0x518>
  809dac:	b0800404 	addi	r2,r22,16
  809db0:	ad400204 	addi	r21,r21,8
  809db4:	a8c00017 	ldw	r3,0(r21)
  809db8:	10c00015 	stw	r3,0(r2)
  809dbc:	a8c00117 	ldw	r3,4(r21)
  809dc0:	10c00115 	stw	r3,4(r2)
  809dc4:	a8c00217 	ldw	r3,8(r21)
  809dc8:	10c00215 	stw	r3,8(r2)
  809dcc:	b447883a 	add	r3,r22,r17
  809dd0:	bc45c83a 	sub	r2,r23,r17
  809dd4:	e0c00215 	stw	r3,8(fp)
  809dd8:	10800054 	ori	r2,r2,1
  809ddc:	18800115 	stw	r2,4(r3)
  809de0:	b0800117 	ldw	r2,4(r22)
  809de4:	a009883a 	mov	r4,r20
  809de8:	1080004c 	andi	r2,r2,1
  809dec:	1462b03a 	or	r17,r2,r17
  809df0:	b4400115 	stw	r17,4(r22)
  809df4:	080e97c0 	call	80e97c <__malloc_unlock>
  809df8:	9005883a 	mov	r2,r18
  809dfc:	003f4006 	br	809b00 <__alt_data_end+0xff809b00>
  809e00:	a8c00217 	ldw	r3,8(r21)
  809e04:	90c00215 	stw	r3,8(r18)
  809e08:	a8c00317 	ldw	r3,12(r21)
  809e0c:	90c00315 	stw	r3,12(r18)
  809e10:	30801126 	beq	r6,r2,809e58 <_realloc_r+0x4c8>
  809e14:	90800404 	addi	r2,r18,16
  809e18:	a8c00404 	addi	r3,r21,16
  809e1c:	003f1906 	br	809a84 <__alt_data_end+0xff809a84>
  809e20:	90ffff17 	ldw	r3,-4(r18)
  809e24:	00bfff04 	movi	r2,-4
  809e28:	a825883a 	mov	r18,r21
  809e2c:	1884703a 	and	r2,r3,r2
  809e30:	80a1883a 	add	r16,r16,r2
  809e34:	003f2406 	br	809ac8 <__alt_data_end+0xff809ac8>
  809e38:	a8800217 	ldw	r2,8(r21)
  809e3c:	b0800415 	stw	r2,16(r22)
  809e40:	a8800317 	ldw	r2,12(r21)
  809e44:	b0800515 	stw	r2,20(r22)
  809e48:	31000a26 	beq	r6,r4,809e74 <_realloc_r+0x4e4>
  809e4c:	b0800604 	addi	r2,r22,24
  809e50:	ad400404 	addi	r21,r21,16
  809e54:	003fa906 	br	809cfc <__alt_data_end+0xff809cfc>
  809e58:	a9000417 	ldw	r4,16(r21)
  809e5c:	90800604 	addi	r2,r18,24
  809e60:	a8c00604 	addi	r3,r21,24
  809e64:	91000415 	stw	r4,16(r18)
  809e68:	a9000517 	ldw	r4,20(r21)
  809e6c:	91000515 	stw	r4,20(r18)
  809e70:	003f0406 	br	809a84 <__alt_data_end+0xff809a84>
  809e74:	a8c00417 	ldw	r3,16(r21)
  809e78:	ad400604 	addi	r21,r21,24
  809e7c:	b0800804 	addi	r2,r22,32
  809e80:	b0c00615 	stw	r3,24(r22)
  809e84:	a8ffff17 	ldw	r3,-4(r21)
  809e88:	b0c00715 	stw	r3,28(r22)
  809e8c:	003f9b06 	br	809cfc <__alt_data_end+0xff809cfc>
  809e90:	9005883a 	mov	r2,r18
  809e94:	003fc706 	br	809db4 <__alt_data_end+0xff809db4>
  809e98:	a80b883a 	mov	r5,r21
  809e9c:	9009883a 	mov	r4,r18
  809ea0:	08087100 	call	808710 <memmove>
  809ea4:	003fc906 	br	809dcc <__alt_data_end+0xff809dcc>
  809ea8:	a8800217 	ldw	r2,8(r21)
  809eac:	b0800415 	stw	r2,16(r22)
  809eb0:	a8800317 	ldw	r2,12(r21)
  809eb4:	b0800515 	stw	r2,20(r22)
  809eb8:	31000726 	beq	r6,r4,809ed8 <_realloc_r+0x548>
  809ebc:	b0800604 	addi	r2,r22,24
  809ec0:	ad400404 	addi	r21,r21,16
  809ec4:	003fbb06 	br	809db4 <__alt_data_end+0xff809db4>
  809ec8:	a009883a 	mov	r4,r20
  809ecc:	080e97c0 	call	80e97c <__malloc_unlock>
  809ed0:	0005883a 	mov	r2,zero
  809ed4:	003f0a06 	br	809b00 <__alt_data_end+0xff809b00>
  809ed8:	a8c00417 	ldw	r3,16(r21)
  809edc:	ad400604 	addi	r21,r21,24
  809ee0:	b0800804 	addi	r2,r22,32
  809ee4:	b0c00615 	stw	r3,24(r22)
  809ee8:	a8ffff17 	ldw	r3,-4(r21)
  809eec:	b0c00715 	stw	r3,28(r22)
  809ef0:	003fb006 	br	809db4 <__alt_data_end+0xff809db4>

00809ef4 <__fpclassifyd>:
  809ef4:	00a00034 	movhi	r2,32768
  809ef8:	10bfffc4 	addi	r2,r2,-1
  809efc:	2884703a 	and	r2,r5,r2
  809f00:	10000726 	beq	r2,zero,809f20 <__fpclassifyd+0x2c>
  809f04:	00fffc34 	movhi	r3,65520
  809f08:	019ff834 	movhi	r6,32736
  809f0c:	28c7883a 	add	r3,r5,r3
  809f10:	31bfffc4 	addi	r6,r6,-1
  809f14:	30c00536 	bltu	r6,r3,809f2c <__fpclassifyd+0x38>
  809f18:	00800104 	movi	r2,4
  809f1c:	f800283a 	ret
  809f20:	2000021e 	bne	r4,zero,809f2c <__fpclassifyd+0x38>
  809f24:	00800084 	movi	r2,2
  809f28:	f800283a 	ret
  809f2c:	00dffc34 	movhi	r3,32752
  809f30:	019ff834 	movhi	r6,32736
  809f34:	28cb883a 	add	r5,r5,r3
  809f38:	31bfffc4 	addi	r6,r6,-1
  809f3c:	317ff62e 	bgeu	r6,r5,809f18 <__alt_data_end+0xff809f18>
  809f40:	01400434 	movhi	r5,16
  809f44:	297fffc4 	addi	r5,r5,-1
  809f48:	28800236 	bltu	r5,r2,809f54 <__fpclassifyd+0x60>
  809f4c:	008000c4 	movi	r2,3
  809f50:	f800283a 	ret
  809f54:	10c00226 	beq	r2,r3,809f60 <__fpclassifyd+0x6c>
  809f58:	0005883a 	mov	r2,zero
  809f5c:	f800283a 	ret
  809f60:	2005003a 	cmpeq	r2,r4,zero
  809f64:	f800283a 	ret

00809f68 <_sbrk_r>:
  809f68:	defffd04 	addi	sp,sp,-12
  809f6c:	dc000015 	stw	r16,0(sp)
  809f70:	040020b4 	movhi	r16,130
  809f74:	dc400115 	stw	r17,4(sp)
  809f78:	84314b04 	addi	r16,r16,-15060
  809f7c:	2023883a 	mov	r17,r4
  809f80:	2809883a 	mov	r4,r5
  809f84:	dfc00215 	stw	ra,8(sp)
  809f88:	80000015 	stw	zero,0(r16)
  809f8c:	080eb780 	call	80eb78 <sbrk>
  809f90:	00ffffc4 	movi	r3,-1
  809f94:	10c00526 	beq	r2,r3,809fac <_sbrk_r+0x44>
  809f98:	dfc00217 	ldw	ra,8(sp)
  809f9c:	dc400117 	ldw	r17,4(sp)
  809fa0:	dc000017 	ldw	r16,0(sp)
  809fa4:	dec00304 	addi	sp,sp,12
  809fa8:	f800283a 	ret
  809fac:	80c00017 	ldw	r3,0(r16)
  809fb0:	183ff926 	beq	r3,zero,809f98 <__alt_data_end+0xff809f98>
  809fb4:	88c00015 	stw	r3,0(r17)
  809fb8:	003ff706 	br	809f98 <__alt_data_end+0xff809f98>

00809fbc <__sread>:
  809fbc:	defffe04 	addi	sp,sp,-8
  809fc0:	dc000015 	stw	r16,0(sp)
  809fc4:	2821883a 	mov	r16,r5
  809fc8:	2940038f 	ldh	r5,14(r5)
  809fcc:	dfc00115 	stw	ra,4(sp)
  809fd0:	080be400 	call	80be40 <_read_r>
  809fd4:	10000716 	blt	r2,zero,809ff4 <__sread+0x38>
  809fd8:	80c01417 	ldw	r3,80(r16)
  809fdc:	1887883a 	add	r3,r3,r2
  809fe0:	80c01415 	stw	r3,80(r16)
  809fe4:	dfc00117 	ldw	ra,4(sp)
  809fe8:	dc000017 	ldw	r16,0(sp)
  809fec:	dec00204 	addi	sp,sp,8
  809ff0:	f800283a 	ret
  809ff4:	80c0030b 	ldhu	r3,12(r16)
  809ff8:	18fbffcc 	andi	r3,r3,61439
  809ffc:	80c0030d 	sth	r3,12(r16)
  80a000:	dfc00117 	ldw	ra,4(sp)
  80a004:	dc000017 	ldw	r16,0(sp)
  80a008:	dec00204 	addi	sp,sp,8
  80a00c:	f800283a 	ret

0080a010 <__seofread>:
  80a010:	0005883a 	mov	r2,zero
  80a014:	f800283a 	ret

0080a018 <__swrite>:
  80a018:	2880030b 	ldhu	r2,12(r5)
  80a01c:	defffb04 	addi	sp,sp,-20
  80a020:	dcc00315 	stw	r19,12(sp)
  80a024:	dc800215 	stw	r18,8(sp)
  80a028:	dc400115 	stw	r17,4(sp)
  80a02c:	dc000015 	stw	r16,0(sp)
  80a030:	dfc00415 	stw	ra,16(sp)
  80a034:	10c0400c 	andi	r3,r2,256
  80a038:	2821883a 	mov	r16,r5
  80a03c:	2023883a 	mov	r17,r4
  80a040:	3025883a 	mov	r18,r6
  80a044:	3827883a 	mov	r19,r7
  80a048:	18000526 	beq	r3,zero,80a060 <__swrite+0x48>
  80a04c:	2940038f 	ldh	r5,14(r5)
  80a050:	01c00084 	movi	r7,2
  80a054:	000d883a 	mov	r6,zero
  80a058:	080bde00 	call	80bde0 <_lseek_r>
  80a05c:	8080030b 	ldhu	r2,12(r16)
  80a060:	8140038f 	ldh	r5,14(r16)
  80a064:	10bbffcc 	andi	r2,r2,61439
  80a068:	980f883a 	mov	r7,r19
  80a06c:	900d883a 	mov	r6,r18
  80a070:	8809883a 	mov	r4,r17
  80a074:	8080030d 	sth	r2,12(r16)
  80a078:	dfc00417 	ldw	ra,16(sp)
  80a07c:	dcc00317 	ldw	r19,12(sp)
  80a080:	dc800217 	ldw	r18,8(sp)
  80a084:	dc400117 	ldw	r17,4(sp)
  80a088:	dc000017 	ldw	r16,0(sp)
  80a08c:	dec00504 	addi	sp,sp,20
  80a090:	080b8ac1 	jmpi	80b8ac <_write_r>

0080a094 <__sseek>:
  80a094:	defffe04 	addi	sp,sp,-8
  80a098:	dc000015 	stw	r16,0(sp)
  80a09c:	2821883a 	mov	r16,r5
  80a0a0:	2940038f 	ldh	r5,14(r5)
  80a0a4:	dfc00115 	stw	ra,4(sp)
  80a0a8:	080bde00 	call	80bde0 <_lseek_r>
  80a0ac:	00ffffc4 	movi	r3,-1
  80a0b0:	10c00826 	beq	r2,r3,80a0d4 <__sseek+0x40>
  80a0b4:	80c0030b 	ldhu	r3,12(r16)
  80a0b8:	80801415 	stw	r2,80(r16)
  80a0bc:	18c40014 	ori	r3,r3,4096
  80a0c0:	80c0030d 	sth	r3,12(r16)
  80a0c4:	dfc00117 	ldw	ra,4(sp)
  80a0c8:	dc000017 	ldw	r16,0(sp)
  80a0cc:	dec00204 	addi	sp,sp,8
  80a0d0:	f800283a 	ret
  80a0d4:	80c0030b 	ldhu	r3,12(r16)
  80a0d8:	18fbffcc 	andi	r3,r3,61439
  80a0dc:	80c0030d 	sth	r3,12(r16)
  80a0e0:	dfc00117 	ldw	ra,4(sp)
  80a0e4:	dc000017 	ldw	r16,0(sp)
  80a0e8:	dec00204 	addi	sp,sp,8
  80a0ec:	f800283a 	ret

0080a0f0 <__sclose>:
  80a0f0:	2940038f 	ldh	r5,14(r5)
  80a0f4:	080b90c1 	jmpi	80b90c <_close_r>

0080a0f8 <strcmp>:
  80a0f8:	2144b03a 	or	r2,r4,r5
  80a0fc:	108000cc 	andi	r2,r2,3
  80a100:	1000171e 	bne	r2,zero,80a160 <strcmp+0x68>
  80a104:	20800017 	ldw	r2,0(r4)
  80a108:	28c00017 	ldw	r3,0(r5)
  80a10c:	10c0141e 	bne	r2,r3,80a160 <strcmp+0x68>
  80a110:	027fbff4 	movhi	r9,65279
  80a114:	4a7fbfc4 	addi	r9,r9,-257
  80a118:	0086303a 	nor	r3,zero,r2
  80a11c:	02202074 	movhi	r8,32897
  80a120:	1245883a 	add	r2,r2,r9
  80a124:	42202004 	addi	r8,r8,-32640
  80a128:	10c4703a 	and	r2,r2,r3
  80a12c:	1204703a 	and	r2,r2,r8
  80a130:	10000226 	beq	r2,zero,80a13c <strcmp+0x44>
  80a134:	00002306 	br	80a1c4 <strcmp+0xcc>
  80a138:	1000221e 	bne	r2,zero,80a1c4 <strcmp+0xcc>
  80a13c:	21000104 	addi	r4,r4,4
  80a140:	20c00017 	ldw	r3,0(r4)
  80a144:	29400104 	addi	r5,r5,4
  80a148:	29800017 	ldw	r6,0(r5)
  80a14c:	1a4f883a 	add	r7,r3,r9
  80a150:	00c4303a 	nor	r2,zero,r3
  80a154:	3884703a 	and	r2,r7,r2
  80a158:	1204703a 	and	r2,r2,r8
  80a15c:	19bff626 	beq	r3,r6,80a138 <__alt_data_end+0xff80a138>
  80a160:	20800003 	ldbu	r2,0(r4)
  80a164:	10c03fcc 	andi	r3,r2,255
  80a168:	18c0201c 	xori	r3,r3,128
  80a16c:	18ffe004 	addi	r3,r3,-128
  80a170:	18000c26 	beq	r3,zero,80a1a4 <strcmp+0xac>
  80a174:	29800007 	ldb	r6,0(r5)
  80a178:	19800326 	beq	r3,r6,80a188 <strcmp+0x90>
  80a17c:	00001306 	br	80a1cc <strcmp+0xd4>
  80a180:	29800007 	ldb	r6,0(r5)
  80a184:	11800b1e 	bne	r2,r6,80a1b4 <strcmp+0xbc>
  80a188:	21000044 	addi	r4,r4,1
  80a18c:	20c00003 	ldbu	r3,0(r4)
  80a190:	29400044 	addi	r5,r5,1
  80a194:	18803fcc 	andi	r2,r3,255
  80a198:	1080201c 	xori	r2,r2,128
  80a19c:	10bfe004 	addi	r2,r2,-128
  80a1a0:	103ff71e 	bne	r2,zero,80a180 <__alt_data_end+0xff80a180>
  80a1a4:	0007883a 	mov	r3,zero
  80a1a8:	28800003 	ldbu	r2,0(r5)
  80a1ac:	1885c83a 	sub	r2,r3,r2
  80a1b0:	f800283a 	ret
  80a1b4:	28800003 	ldbu	r2,0(r5)
  80a1b8:	18c03fcc 	andi	r3,r3,255
  80a1bc:	1885c83a 	sub	r2,r3,r2
  80a1c0:	f800283a 	ret
  80a1c4:	0005883a 	mov	r2,zero
  80a1c8:	f800283a 	ret
  80a1cc:	10c03fcc 	andi	r3,r2,255
  80a1d0:	003ff506 	br	80a1a8 <__alt_data_end+0xff80a1a8>

0080a1d4 <strcpy>:
  80a1d4:	2906b03a 	or	r3,r5,r4
  80a1d8:	18c000cc 	andi	r3,r3,3
  80a1dc:	2005883a 	mov	r2,r4
  80a1e0:	1800161e 	bne	r3,zero,80a23c <strcpy+0x68>
  80a1e4:	29c00017 	ldw	r7,0(r5)
  80a1e8:	02ffbff4 	movhi	r11,65279
  80a1ec:	5affbfc4 	addi	r11,r11,-257
  80a1f0:	02a02074 	movhi	r10,32897
  80a1f4:	01c6303a 	nor	r3,zero,r7
  80a1f8:	3ac9883a 	add	r4,r7,r11
  80a1fc:	52a02004 	addi	r10,r10,-32640
  80a200:	20c6703a 	and	r3,r4,r3
  80a204:	1a86703a 	and	r3,r3,r10
  80a208:	18000c1e 	bne	r3,zero,80a23c <strcpy+0x68>
  80a20c:	1011883a 	mov	r8,r2
  80a210:	41c00015 	stw	r7,0(r8)
  80a214:	29400104 	addi	r5,r5,4
  80a218:	29c00017 	ldw	r7,0(r5)
  80a21c:	41800104 	addi	r6,r8,4
  80a220:	3011883a 	mov	r8,r6
  80a224:	3ad3883a 	add	r9,r7,r11
  80a228:	01c6303a 	nor	r3,zero,r7
  80a22c:	48c6703a 	and	r3,r9,r3
  80a230:	1a86703a 	and	r3,r3,r10
  80a234:	183ff626 	beq	r3,zero,80a210 <__alt_data_end+0xff80a210>
  80a238:	00000106 	br	80a240 <strcpy+0x6c>
  80a23c:	100d883a 	mov	r6,r2
  80a240:	28c00003 	ldbu	r3,0(r5)
  80a244:	31800044 	addi	r6,r6,1
  80a248:	29400044 	addi	r5,r5,1
  80a24c:	30ffffc5 	stb	r3,-1(r6)
  80a250:	18c03fcc 	andi	r3,r3,255
  80a254:	18c0201c 	xori	r3,r3,128
  80a258:	18ffe004 	addi	r3,r3,-128
  80a25c:	183ff81e 	bne	r3,zero,80a240 <__alt_data_end+0xff80a240>
  80a260:	f800283a 	ret

0080a264 <__sprint_r.part.0>:
  80a264:	28801917 	ldw	r2,100(r5)
  80a268:	defff604 	addi	sp,sp,-40
  80a26c:	dd400515 	stw	r21,20(sp)
  80a270:	dfc00915 	stw	ra,36(sp)
  80a274:	df000815 	stw	fp,32(sp)
  80a278:	ddc00715 	stw	r23,28(sp)
  80a27c:	dd800615 	stw	r22,24(sp)
  80a280:	dd000415 	stw	r20,16(sp)
  80a284:	dcc00315 	stw	r19,12(sp)
  80a288:	dc800215 	stw	r18,8(sp)
  80a28c:	dc400115 	stw	r17,4(sp)
  80a290:	dc000015 	stw	r16,0(sp)
  80a294:	1088000c 	andi	r2,r2,8192
  80a298:	302b883a 	mov	r21,r6
  80a29c:	10002e26 	beq	r2,zero,80a358 <__sprint_r.part.0+0xf4>
  80a2a0:	30800217 	ldw	r2,8(r6)
  80a2a4:	35800017 	ldw	r22,0(r6)
  80a2a8:	10002926 	beq	r2,zero,80a350 <__sprint_r.part.0+0xec>
  80a2ac:	2827883a 	mov	r19,r5
  80a2b0:	2029883a 	mov	r20,r4
  80a2b4:	b5c00104 	addi	r23,r22,4
  80a2b8:	04bfffc4 	movi	r18,-1
  80a2bc:	bc400017 	ldw	r17,0(r23)
  80a2c0:	b4000017 	ldw	r16,0(r22)
  80a2c4:	0039883a 	mov	fp,zero
  80a2c8:	8822d0ba 	srli	r17,r17,2
  80a2cc:	8800031e 	bne	r17,zero,80a2dc <__sprint_r.part.0+0x78>
  80a2d0:	00001806 	br	80a334 <__sprint_r.part.0+0xd0>
  80a2d4:	84000104 	addi	r16,r16,4
  80a2d8:	8f001526 	beq	r17,fp,80a330 <__sprint_r.part.0+0xcc>
  80a2dc:	81400017 	ldw	r5,0(r16)
  80a2e0:	980d883a 	mov	r6,r19
  80a2e4:	a009883a 	mov	r4,r20
  80a2e8:	080bc8c0 	call	80bc8c <_fputwc_r>
  80a2ec:	e7000044 	addi	fp,fp,1
  80a2f0:	14bff81e 	bne	r2,r18,80a2d4 <__alt_data_end+0xff80a2d4>
  80a2f4:	9005883a 	mov	r2,r18
  80a2f8:	a8000215 	stw	zero,8(r21)
  80a2fc:	a8000115 	stw	zero,4(r21)
  80a300:	dfc00917 	ldw	ra,36(sp)
  80a304:	df000817 	ldw	fp,32(sp)
  80a308:	ddc00717 	ldw	r23,28(sp)
  80a30c:	dd800617 	ldw	r22,24(sp)
  80a310:	dd400517 	ldw	r21,20(sp)
  80a314:	dd000417 	ldw	r20,16(sp)
  80a318:	dcc00317 	ldw	r19,12(sp)
  80a31c:	dc800217 	ldw	r18,8(sp)
  80a320:	dc400117 	ldw	r17,4(sp)
  80a324:	dc000017 	ldw	r16,0(sp)
  80a328:	dec00a04 	addi	sp,sp,40
  80a32c:	f800283a 	ret
  80a330:	a8800217 	ldw	r2,8(r21)
  80a334:	8c63883a 	add	r17,r17,r17
  80a338:	8c63883a 	add	r17,r17,r17
  80a33c:	1445c83a 	sub	r2,r2,r17
  80a340:	a8800215 	stw	r2,8(r21)
  80a344:	b5800204 	addi	r22,r22,8
  80a348:	bdc00204 	addi	r23,r23,8
  80a34c:	103fdb1e 	bne	r2,zero,80a2bc <__alt_data_end+0xff80a2bc>
  80a350:	0005883a 	mov	r2,zero
  80a354:	003fe806 	br	80a2f8 <__alt_data_end+0xff80a2f8>
  80a358:	08073fc0 	call	8073fc <__sfvwrite_r>
  80a35c:	003fe606 	br	80a2f8 <__alt_data_end+0xff80a2f8>

0080a360 <__sprint_r>:
  80a360:	30c00217 	ldw	r3,8(r6)
  80a364:	18000126 	beq	r3,zero,80a36c <__sprint_r+0xc>
  80a368:	080a2641 	jmpi	80a264 <__sprint_r.part.0>
  80a36c:	30000115 	stw	zero,4(r6)
  80a370:	0005883a 	mov	r2,zero
  80a374:	f800283a 	ret

0080a378 <___vfiprintf_internal_r>:
  80a378:	deffc904 	addi	sp,sp,-220
  80a37c:	df003515 	stw	fp,212(sp)
  80a380:	dd003115 	stw	r20,196(sp)
  80a384:	dfc03615 	stw	ra,216(sp)
  80a388:	ddc03415 	stw	r23,208(sp)
  80a38c:	dd803315 	stw	r22,204(sp)
  80a390:	dd403215 	stw	r21,200(sp)
  80a394:	dcc03015 	stw	r19,192(sp)
  80a398:	dc802f15 	stw	r18,188(sp)
  80a39c:	dc402e15 	stw	r17,184(sp)
  80a3a0:	dc002d15 	stw	r16,180(sp)
  80a3a4:	d9002015 	stw	r4,128(sp)
  80a3a8:	d9c02215 	stw	r7,136(sp)
  80a3ac:	2829883a 	mov	r20,r5
  80a3b0:	3039883a 	mov	fp,r6
  80a3b4:	20000226 	beq	r4,zero,80a3c0 <___vfiprintf_internal_r+0x48>
  80a3b8:	20800e17 	ldw	r2,56(r4)
  80a3bc:	1000cf26 	beq	r2,zero,80a6fc <___vfiprintf_internal_r+0x384>
  80a3c0:	a080030b 	ldhu	r2,12(r20)
  80a3c4:	10c8000c 	andi	r3,r2,8192
  80a3c8:	1800061e 	bne	r3,zero,80a3e4 <___vfiprintf_internal_r+0x6c>
  80a3cc:	a1001917 	ldw	r4,100(r20)
  80a3d0:	00f7ffc4 	movi	r3,-8193
  80a3d4:	10880014 	ori	r2,r2,8192
  80a3d8:	20c6703a 	and	r3,r4,r3
  80a3dc:	a080030d 	sth	r2,12(r20)
  80a3e0:	a0c01915 	stw	r3,100(r20)
  80a3e4:	10c0020c 	andi	r3,r2,8
  80a3e8:	1800a926 	beq	r3,zero,80a690 <___vfiprintf_internal_r+0x318>
  80a3ec:	a0c00417 	ldw	r3,16(r20)
  80a3f0:	1800a726 	beq	r3,zero,80a690 <___vfiprintf_internal_r+0x318>
  80a3f4:	1080068c 	andi	r2,r2,26
  80a3f8:	00c00284 	movi	r3,10
  80a3fc:	10c0ac26 	beq	r2,r3,80a6b0 <___vfiprintf_internal_r+0x338>
  80a400:	da801a04 	addi	r10,sp,104
  80a404:	da801e15 	stw	r10,120(sp)
  80a408:	d8801e17 	ldw	r2,120(sp)
  80a40c:	da8019c4 	addi	r10,sp,103
  80a410:	05802074 	movhi	r22,129
  80a414:	05c02074 	movhi	r23,129
  80a418:	da801f15 	stw	r10,124(sp)
  80a41c:	1295c83a 	sub	r10,r2,r10
  80a420:	b583dc04 	addi	r22,r22,3952
  80a424:	bdc3d804 	addi	r23,r23,3936
  80a428:	dec01a15 	stw	sp,104(sp)
  80a42c:	d8001c15 	stw	zero,112(sp)
  80a430:	d8001b15 	stw	zero,108(sp)
  80a434:	d8002615 	stw	zero,152(sp)
  80a438:	d8002315 	stw	zero,140(sp)
  80a43c:	da802715 	stw	r10,156(sp)
  80a440:	d811883a 	mov	r8,sp
  80a444:	dd002115 	stw	r20,132(sp)
  80a448:	e021883a 	mov	r16,fp
  80a44c:	80800007 	ldb	r2,0(r16)
  80a450:	1003ea26 	beq	r2,zero,80b3fc <___vfiprintf_internal_r+0x1084>
  80a454:	00c00944 	movi	r3,37
  80a458:	8025883a 	mov	r18,r16
  80a45c:	10c0021e 	bne	r2,r3,80a468 <___vfiprintf_internal_r+0xf0>
  80a460:	00001606 	br	80a4bc <___vfiprintf_internal_r+0x144>
  80a464:	10c00326 	beq	r2,r3,80a474 <___vfiprintf_internal_r+0xfc>
  80a468:	94800044 	addi	r18,r18,1
  80a46c:	90800007 	ldb	r2,0(r18)
  80a470:	103ffc1e 	bne	r2,zero,80a464 <__alt_data_end+0xff80a464>
  80a474:	9423c83a 	sub	r17,r18,r16
  80a478:	88001026 	beq	r17,zero,80a4bc <___vfiprintf_internal_r+0x144>
  80a47c:	d8c01c17 	ldw	r3,112(sp)
  80a480:	d8801b17 	ldw	r2,108(sp)
  80a484:	44000015 	stw	r16,0(r8)
  80a488:	88c7883a 	add	r3,r17,r3
  80a48c:	10800044 	addi	r2,r2,1
  80a490:	44400115 	stw	r17,4(r8)
  80a494:	d8c01c15 	stw	r3,112(sp)
  80a498:	d8801b15 	stw	r2,108(sp)
  80a49c:	010001c4 	movi	r4,7
  80a4a0:	2080760e 	bge	r4,r2,80a67c <___vfiprintf_internal_r+0x304>
  80a4a4:	1803821e 	bne	r3,zero,80b2b0 <___vfiprintf_internal_r+0xf38>
  80a4a8:	da802317 	ldw	r10,140(sp)
  80a4ac:	d8001b15 	stw	zero,108(sp)
  80a4b0:	d811883a 	mov	r8,sp
  80a4b4:	5455883a 	add	r10,r10,r17
  80a4b8:	da802315 	stw	r10,140(sp)
  80a4bc:	90800007 	ldb	r2,0(r18)
  80a4c0:	10044626 	beq	r2,zero,80b5dc <___vfiprintf_internal_r+0x1264>
  80a4c4:	90c00047 	ldb	r3,1(r18)
  80a4c8:	94000044 	addi	r16,r18,1
  80a4cc:	d8001d85 	stb	zero,118(sp)
  80a4d0:	0009883a 	mov	r4,zero
  80a4d4:	000f883a 	mov	r7,zero
  80a4d8:	027fffc4 	movi	r9,-1
  80a4dc:	0023883a 	mov	r17,zero
  80a4e0:	0029883a 	mov	r20,zero
  80a4e4:	01401604 	movi	r5,88
  80a4e8:	01800244 	movi	r6,9
  80a4ec:	03400a84 	movi	r13,42
  80a4f0:	03001b04 	movi	r12,108
  80a4f4:	84000044 	addi	r16,r16,1
  80a4f8:	18bff804 	addi	r2,r3,-32
  80a4fc:	28827336 	bltu	r5,r2,80aecc <___vfiprintf_internal_r+0xb54>
  80a500:	100490ba 	slli	r2,r2,2
  80a504:	02802074 	movhi	r10,129
  80a508:	52a94604 	addi	r10,r10,-23272
  80a50c:	1285883a 	add	r2,r2,r10
  80a510:	10800017 	ldw	r2,0(r2)
  80a514:	1000683a 	jmp	r2
  80a518:	0080ac00 	call	80ac0 <__alt_mem_sdram-0x77f540>
  80a51c:	0080aecc 	andi	r2,zero,699
  80a520:	0080aecc 	andi	r2,zero,699
  80a524:	0080ac20 	cmpeqi	r2,zero,688
  80a528:	0080aecc 	andi	r2,zero,699
  80a52c:	0080aecc 	andi	r2,zero,699
  80a530:	0080aecc 	andi	r2,zero,699
  80a534:	0080aecc 	andi	r2,zero,699
  80a538:	0080aecc 	andi	r2,zero,699
  80a53c:	0080aecc 	andi	r2,zero,699
  80a540:	0080ae08 	cmpgei	r2,zero,696
  80a544:	0080ae24 	muli	r2,zero,696
  80a548:	0080aecc 	andi	r2,zero,699
  80a54c:	0080a70c 	andi	r2,zero,668
  80a550:	0080ae34 	movhi	r2,696
  80a554:	0080aecc 	andi	r2,zero,699
  80a558:	0080ac2c 	andhi	r2,zero,688
  80a55c:	0080ac38 	rdprs	r2,zero,688
  80a560:	0080ac38 	rdprs	r2,zero,688
  80a564:	0080ac38 	rdprs	r2,zero,688
  80a568:	0080ac38 	rdprs	r2,zero,688
  80a56c:	0080ac38 	rdprs	r2,zero,688
  80a570:	0080ac38 	rdprs	r2,zero,688
  80a574:	0080ac38 	rdprs	r2,zero,688
  80a578:	0080ac38 	rdprs	r2,zero,688
  80a57c:	0080ac38 	rdprs	r2,zero,688
  80a580:	0080aecc 	andi	r2,zero,699
  80a584:	0080aecc 	andi	r2,zero,699
  80a588:	0080aecc 	andi	r2,zero,699
  80a58c:	0080aecc 	andi	r2,zero,699
  80a590:	0080aecc 	andi	r2,zero,699
  80a594:	0080aecc 	andi	r2,zero,699
  80a598:	0080aecc 	andi	r2,zero,699
  80a59c:	0080aecc 	andi	r2,zero,699
  80a5a0:	0080aecc 	andi	r2,zero,699
  80a5a4:	0080aecc 	andi	r2,zero,699
  80a5a8:	0080ac64 	muli	r2,zero,689
  80a5ac:	0080aecc 	andi	r2,zero,699
  80a5b0:	0080aecc 	andi	r2,zero,699
  80a5b4:	0080aecc 	andi	r2,zero,699
  80a5b8:	0080aecc 	andi	r2,zero,699
  80a5bc:	0080aecc 	andi	r2,zero,699
  80a5c0:	0080aecc 	andi	r2,zero,699
  80a5c4:	0080aecc 	andi	r2,zero,699
  80a5c8:	0080aecc 	andi	r2,zero,699
  80a5cc:	0080aecc 	andi	r2,zero,699
  80a5d0:	0080aecc 	andi	r2,zero,699
  80a5d4:	0080ac9c 	xori	r2,zero,690
  80a5d8:	0080aecc 	andi	r2,zero,699
  80a5dc:	0080aecc 	andi	r2,zero,699
  80a5e0:	0080aecc 	andi	r2,zero,699
  80a5e4:	0080aecc 	andi	r2,zero,699
  80a5e8:	0080aecc 	andi	r2,zero,699
  80a5ec:	0080acf4 	movhi	r2,691
  80a5f0:	0080aecc 	andi	r2,zero,699
  80a5f4:	0080aecc 	andi	r2,zero,699
  80a5f8:	0080ad64 	muli	r2,zero,693
  80a5fc:	0080aecc 	andi	r2,zero,699
  80a600:	0080aecc 	andi	r2,zero,699
  80a604:	0080aecc 	andi	r2,zero,699
  80a608:	0080aecc 	andi	r2,zero,699
  80a60c:	0080aecc 	andi	r2,zero,699
  80a610:	0080aecc 	andi	r2,zero,699
  80a614:	0080aecc 	andi	r2,zero,699
  80a618:	0080aecc 	andi	r2,zero,699
  80a61c:	0080aecc 	andi	r2,zero,699
  80a620:	0080aecc 	andi	r2,zero,699
  80a624:	0080ab10 	cmplti	r2,zero,684
  80a628:	0080ab3c 	xorhi	r2,zero,684
  80a62c:	0080aecc 	andi	r2,zero,699
  80a630:	0080aecc 	andi	r2,zero,699
  80a634:	0080aecc 	andi	r2,zero,699
  80a638:	0080ae74 	movhi	r2,697
  80a63c:	0080ab3c 	xorhi	r2,zero,684
  80a640:	0080aecc 	andi	r2,zero,699
  80a644:	0080aecc 	andi	r2,zero,699
  80a648:	0080a9d0 	cmplti	r2,zero,679
  80a64c:	0080aecc 	andi	r2,zero,699
  80a650:	0080a9e0 	cmpeqi	r2,zero,679
  80a654:	0080aa1c 	xori	r2,zero,680
  80a658:	0080a718 	cmpnei	r2,zero,668
  80a65c:	0080a9c4 	movi	r2,679
  80a660:	0080aecc 	andi	r2,zero,699
  80a664:	0080ada0 	cmpeqi	r2,zero,694
  80a668:	0080aecc 	andi	r2,zero,699
  80a66c:	0080adf8 	rdprs	r2,zero,695
  80a670:	0080aecc 	andi	r2,zero,699
  80a674:	0080aecc 	andi	r2,zero,699
  80a678:	0080aabc 	xorhi	r2,zero,682
  80a67c:	42000204 	addi	r8,r8,8
  80a680:	da802317 	ldw	r10,140(sp)
  80a684:	5455883a 	add	r10,r10,r17
  80a688:	da802315 	stw	r10,140(sp)
  80a68c:	003f8b06 	br	80a4bc <__alt_data_end+0xff80a4bc>
  80a690:	d9002017 	ldw	r4,128(sp)
  80a694:	a00b883a 	mov	r5,r20
  80a698:	080447c0 	call	80447c <__swsetup_r>
  80a69c:	1003b11e 	bne	r2,zero,80b564 <___vfiprintf_internal_r+0x11ec>
  80a6a0:	a080030b 	ldhu	r2,12(r20)
  80a6a4:	00c00284 	movi	r3,10
  80a6a8:	1080068c 	andi	r2,r2,26
  80a6ac:	10ff541e 	bne	r2,r3,80a400 <__alt_data_end+0xff80a400>
  80a6b0:	a080038f 	ldh	r2,14(r20)
  80a6b4:	103f5216 	blt	r2,zero,80a400 <__alt_data_end+0xff80a400>
  80a6b8:	d9c02217 	ldw	r7,136(sp)
  80a6bc:	d9002017 	ldw	r4,128(sp)
  80a6c0:	e00d883a 	mov	r6,fp
  80a6c4:	a00b883a 	mov	r5,r20
  80a6c8:	080b7f00 	call	80b7f0 <__sbprintf>
  80a6cc:	dfc03617 	ldw	ra,216(sp)
  80a6d0:	df003517 	ldw	fp,212(sp)
  80a6d4:	ddc03417 	ldw	r23,208(sp)
  80a6d8:	dd803317 	ldw	r22,204(sp)
  80a6dc:	dd403217 	ldw	r21,200(sp)
  80a6e0:	dd003117 	ldw	r20,196(sp)
  80a6e4:	dcc03017 	ldw	r19,192(sp)
  80a6e8:	dc802f17 	ldw	r18,188(sp)
  80a6ec:	dc402e17 	ldw	r17,184(sp)
  80a6f0:	dc002d17 	ldw	r16,180(sp)
  80a6f4:	dec03704 	addi	sp,sp,220
  80a6f8:	f800283a 	ret
  80a6fc:	0806f780 	call	806f78 <__sinit>
  80a700:	003f2f06 	br	80a3c0 <__alt_data_end+0xff80a3c0>
  80a704:	0463c83a 	sub	r17,zero,r17
  80a708:	d8802215 	stw	r2,136(sp)
  80a70c:	a5000114 	ori	r20,r20,4
  80a710:	80c00007 	ldb	r3,0(r16)
  80a714:	003f7706 	br	80a4f4 <__alt_data_end+0xff80a4f4>
  80a718:	00800c04 	movi	r2,48
  80a71c:	da802217 	ldw	r10,136(sp)
  80a720:	d8801d05 	stb	r2,116(sp)
  80a724:	00801e04 	movi	r2,120
  80a728:	d8801d45 	stb	r2,117(sp)
  80a72c:	d8001d85 	stb	zero,118(sp)
  80a730:	50c00104 	addi	r3,r10,4
  80a734:	54800017 	ldw	r18,0(r10)
  80a738:	0027883a 	mov	r19,zero
  80a73c:	a0800094 	ori	r2,r20,2
  80a740:	48030b16 	blt	r9,zero,80b370 <___vfiprintf_internal_r+0xff8>
  80a744:	00bfdfc4 	movi	r2,-129
  80a748:	a096703a 	and	r11,r20,r2
  80a74c:	d8c02215 	stw	r3,136(sp)
  80a750:	5d000094 	ori	r20,r11,2
  80a754:	90032b1e 	bne	r18,zero,80b404 <___vfiprintf_internal_r+0x108c>
  80a758:	00802074 	movhi	r2,129
  80a75c:	10837804 	addi	r2,r2,3552
  80a760:	d8802615 	stw	r2,152(sp)
  80a764:	0039883a 	mov	fp,zero
  80a768:	48017b1e 	bne	r9,zero,80ad58 <___vfiprintf_internal_r+0x9e0>
  80a76c:	0013883a 	mov	r9,zero
  80a770:	0027883a 	mov	r19,zero
  80a774:	dd401a04 	addi	r21,sp,104
  80a778:	4825883a 	mov	r18,r9
  80a77c:	4cc0010e 	bge	r9,r19,80a784 <___vfiprintf_internal_r+0x40c>
  80a780:	9825883a 	mov	r18,r19
  80a784:	e7003fcc 	andi	fp,fp,255
  80a788:	e700201c 	xori	fp,fp,128
  80a78c:	e73fe004 	addi	fp,fp,-128
  80a790:	e0000126 	beq	fp,zero,80a798 <___vfiprintf_internal_r+0x420>
  80a794:	94800044 	addi	r18,r18,1
  80a798:	a380008c 	andi	r14,r20,2
  80a79c:	70000126 	beq	r14,zero,80a7a4 <___vfiprintf_internal_r+0x42c>
  80a7a0:	94800084 	addi	r18,r18,2
  80a7a4:	a700210c 	andi	fp,r20,132
  80a7a8:	e001df1e 	bne	fp,zero,80af28 <___vfiprintf_internal_r+0xbb0>
  80a7ac:	8c87c83a 	sub	r3,r17,r18
  80a7b0:	00c1dd0e 	bge	zero,r3,80af28 <___vfiprintf_internal_r+0xbb0>
  80a7b4:	01c00404 	movi	r7,16
  80a7b8:	d8801c17 	ldw	r2,112(sp)
  80a7bc:	38c3ad0e 	bge	r7,r3,80b674 <___vfiprintf_internal_r+0x12fc>
  80a7c0:	02802074 	movhi	r10,129
  80a7c4:	5283dc04 	addi	r10,r10,3952
  80a7c8:	dc002915 	stw	r16,164(sp)
  80a7cc:	d9801b17 	ldw	r6,108(sp)
  80a7d0:	da802415 	stw	r10,144(sp)
  80a7d4:	03c001c4 	movi	r15,7
  80a7d8:	da402515 	stw	r9,148(sp)
  80a7dc:	db802815 	stw	r14,160(sp)
  80a7e0:	1821883a 	mov	r16,r3
  80a7e4:	00000506 	br	80a7fc <___vfiprintf_internal_r+0x484>
  80a7e8:	31400084 	addi	r5,r6,2
  80a7ec:	42000204 	addi	r8,r8,8
  80a7f0:	200d883a 	mov	r6,r4
  80a7f4:	843ffc04 	addi	r16,r16,-16
  80a7f8:	3c000d0e 	bge	r7,r16,80a830 <___vfiprintf_internal_r+0x4b8>
  80a7fc:	10800404 	addi	r2,r2,16
  80a800:	31000044 	addi	r4,r6,1
  80a804:	45800015 	stw	r22,0(r8)
  80a808:	41c00115 	stw	r7,4(r8)
  80a80c:	d8801c15 	stw	r2,112(sp)
  80a810:	d9001b15 	stw	r4,108(sp)
  80a814:	793ff40e 	bge	r15,r4,80a7e8 <__alt_data_end+0xff80a7e8>
  80a818:	1001b51e 	bne	r2,zero,80aef0 <___vfiprintf_internal_r+0xb78>
  80a81c:	843ffc04 	addi	r16,r16,-16
  80a820:	000d883a 	mov	r6,zero
  80a824:	01400044 	movi	r5,1
  80a828:	d811883a 	mov	r8,sp
  80a82c:	3c3ff316 	blt	r7,r16,80a7fc <__alt_data_end+0xff80a7fc>
  80a830:	8007883a 	mov	r3,r16
  80a834:	da402517 	ldw	r9,148(sp)
  80a838:	db802817 	ldw	r14,160(sp)
  80a83c:	dc002917 	ldw	r16,164(sp)
  80a840:	da802417 	ldw	r10,144(sp)
  80a844:	1885883a 	add	r2,r3,r2
  80a848:	40c00115 	stw	r3,4(r8)
  80a84c:	42800015 	stw	r10,0(r8)
  80a850:	d8801c15 	stw	r2,112(sp)
  80a854:	d9401b15 	stw	r5,108(sp)
  80a858:	00c001c4 	movi	r3,7
  80a85c:	19426016 	blt	r3,r5,80b1e0 <___vfiprintf_internal_r+0xe68>
  80a860:	d8c01d87 	ldb	r3,118(sp)
  80a864:	42000204 	addi	r8,r8,8
  80a868:	29000044 	addi	r4,r5,1
  80a86c:	1801b31e 	bne	r3,zero,80af3c <___vfiprintf_internal_r+0xbc4>
  80a870:	7001c026 	beq	r14,zero,80af74 <___vfiprintf_internal_r+0xbfc>
  80a874:	d8c01d04 	addi	r3,sp,116
  80a878:	10800084 	addi	r2,r2,2
  80a87c:	40c00015 	stw	r3,0(r8)
  80a880:	00c00084 	movi	r3,2
  80a884:	40c00115 	stw	r3,4(r8)
  80a888:	d8801c15 	stw	r2,112(sp)
  80a88c:	d9001b15 	stw	r4,108(sp)
  80a890:	00c001c4 	movi	r3,7
  80a894:	1902650e 	bge	r3,r4,80b22c <___vfiprintf_internal_r+0xeb4>
  80a898:	10029a1e 	bne	r2,zero,80b304 <___vfiprintf_internal_r+0xf8c>
  80a89c:	00c02004 	movi	r3,128
  80a8a0:	01000044 	movi	r4,1
  80a8a4:	000b883a 	mov	r5,zero
  80a8a8:	d811883a 	mov	r8,sp
  80a8ac:	e0c1b31e 	bne	fp,r3,80af7c <___vfiprintf_internal_r+0xc04>
  80a8b0:	8cb9c83a 	sub	fp,r17,r18
  80a8b4:	0701b10e 	bge	zero,fp,80af7c <___vfiprintf_internal_r+0xc04>
  80a8b8:	01c00404 	movi	r7,16
  80a8bc:	3f03890e 	bge	r7,fp,80b6e4 <___vfiprintf_internal_r+0x136c>
  80a8c0:	00c02074 	movhi	r3,129
  80a8c4:	18c3d804 	addi	r3,r3,3936
  80a8c8:	d8c02415 	stw	r3,144(sp)
  80a8cc:	8007883a 	mov	r3,r16
  80a8d0:	034001c4 	movi	r13,7
  80a8d4:	e021883a 	mov	r16,fp
  80a8d8:	da402515 	stw	r9,148(sp)
  80a8dc:	1839883a 	mov	fp,r3
  80a8e0:	00000506 	br	80a8f8 <___vfiprintf_internal_r+0x580>
  80a8e4:	29800084 	addi	r6,r5,2
  80a8e8:	42000204 	addi	r8,r8,8
  80a8ec:	180b883a 	mov	r5,r3
  80a8f0:	843ffc04 	addi	r16,r16,-16
  80a8f4:	3c000d0e 	bge	r7,r16,80a92c <___vfiprintf_internal_r+0x5b4>
  80a8f8:	10800404 	addi	r2,r2,16
  80a8fc:	28c00044 	addi	r3,r5,1
  80a900:	45c00015 	stw	r23,0(r8)
  80a904:	41c00115 	stw	r7,4(r8)
  80a908:	d8801c15 	stw	r2,112(sp)
  80a90c:	d8c01b15 	stw	r3,108(sp)
  80a910:	68fff40e 	bge	r13,r3,80a8e4 <__alt_data_end+0xff80a8e4>
  80a914:	1002241e 	bne	r2,zero,80b1a8 <___vfiprintf_internal_r+0xe30>
  80a918:	843ffc04 	addi	r16,r16,-16
  80a91c:	01800044 	movi	r6,1
  80a920:	000b883a 	mov	r5,zero
  80a924:	d811883a 	mov	r8,sp
  80a928:	3c3ff316 	blt	r7,r16,80a8f8 <__alt_data_end+0xff80a8f8>
  80a92c:	da402517 	ldw	r9,148(sp)
  80a930:	e007883a 	mov	r3,fp
  80a934:	8039883a 	mov	fp,r16
  80a938:	1821883a 	mov	r16,r3
  80a93c:	d8c02417 	ldw	r3,144(sp)
  80a940:	1705883a 	add	r2,r2,fp
  80a944:	47000115 	stw	fp,4(r8)
  80a948:	40c00015 	stw	r3,0(r8)
  80a94c:	d8801c15 	stw	r2,112(sp)
  80a950:	d9801b15 	stw	r6,108(sp)
  80a954:	00c001c4 	movi	r3,7
  80a958:	19827616 	blt	r3,r6,80b334 <___vfiprintf_internal_r+0xfbc>
  80a95c:	4cf9c83a 	sub	fp,r9,r19
  80a960:	42000204 	addi	r8,r8,8
  80a964:	31000044 	addi	r4,r6,1
  80a968:	300b883a 	mov	r5,r6
  80a96c:	07018516 	blt	zero,fp,80af84 <___vfiprintf_internal_r+0xc0c>
  80a970:	9885883a 	add	r2,r19,r2
  80a974:	45400015 	stw	r21,0(r8)
  80a978:	44c00115 	stw	r19,4(r8)
  80a97c:	d8801c15 	stw	r2,112(sp)
  80a980:	d9001b15 	stw	r4,108(sp)
  80a984:	00c001c4 	movi	r3,7
  80a988:	1901dd0e 	bge	r3,r4,80b100 <___vfiprintf_internal_r+0xd88>
  80a98c:	1002401e 	bne	r2,zero,80b290 <___vfiprintf_internal_r+0xf18>
  80a990:	d8001b15 	stw	zero,108(sp)
  80a994:	a2c0010c 	andi	r11,r20,4
  80a998:	58000226 	beq	r11,zero,80a9a4 <___vfiprintf_internal_r+0x62c>
  80a99c:	8ca7c83a 	sub	r19,r17,r18
  80a9a0:	04c2f216 	blt	zero,r19,80b56c <___vfiprintf_internal_r+0x11f4>
  80a9a4:	8c80010e 	bge	r17,r18,80a9ac <___vfiprintf_internal_r+0x634>
  80a9a8:	9023883a 	mov	r17,r18
  80a9ac:	da802317 	ldw	r10,140(sp)
  80a9b0:	5455883a 	add	r10,r10,r17
  80a9b4:	da802315 	stw	r10,140(sp)
  80a9b8:	d8001b15 	stw	zero,108(sp)
  80a9bc:	d811883a 	mov	r8,sp
  80a9c0:	003ea206 	br	80a44c <__alt_data_end+0xff80a44c>
  80a9c4:	a5000814 	ori	r20,r20,32
  80a9c8:	80c00007 	ldb	r3,0(r16)
  80a9cc:	003ec906 	br	80a4f4 <__alt_data_end+0xff80a4f4>
  80a9d0:	80c00007 	ldb	r3,0(r16)
  80a9d4:	1b030926 	beq	r3,r12,80b5fc <___vfiprintf_internal_r+0x1284>
  80a9d8:	a5000414 	ori	r20,r20,16
  80a9dc:	003ec506 	br	80a4f4 <__alt_data_end+0xff80a4f4>
  80a9e0:	21003fcc 	andi	r4,r4,255
  80a9e4:	20035e1e 	bne	r4,zero,80b760 <___vfiprintf_internal_r+0x13e8>
  80a9e8:	a080080c 	andi	r2,r20,32
  80a9ec:	1002a526 	beq	r2,zero,80b484 <___vfiprintf_internal_r+0x110c>
  80a9f0:	da802217 	ldw	r10,136(sp)
  80a9f4:	50800017 	ldw	r2,0(r10)
  80a9f8:	da802317 	ldw	r10,140(sp)
  80a9fc:	5007d7fa 	srai	r3,r10,31
  80aa00:	da802217 	ldw	r10,136(sp)
  80aa04:	10c00115 	stw	r3,4(r2)
  80aa08:	52800104 	addi	r10,r10,4
  80aa0c:	da802215 	stw	r10,136(sp)
  80aa10:	da802317 	ldw	r10,140(sp)
  80aa14:	12800015 	stw	r10,0(r2)
  80aa18:	003e8c06 	br	80a44c <__alt_data_end+0xff80a44c>
  80aa1c:	21003fcc 	andi	r4,r4,255
  80aa20:	2003511e 	bne	r4,zero,80b768 <___vfiprintf_internal_r+0x13f0>
  80aa24:	a080080c 	andi	r2,r20,32
  80aa28:	1000a126 	beq	r2,zero,80acb0 <___vfiprintf_internal_r+0x938>
  80aa2c:	da802217 	ldw	r10,136(sp)
  80aa30:	d8001d85 	stb	zero,118(sp)
  80aa34:	50800204 	addi	r2,r10,8
  80aa38:	54800017 	ldw	r18,0(r10)
  80aa3c:	54c00117 	ldw	r19,4(r10)
  80aa40:	4802b416 	blt	r9,zero,80b514 <___vfiprintf_internal_r+0x119c>
  80aa44:	013fdfc4 	movi	r4,-129
  80aa48:	94c6b03a 	or	r3,r18,r19
  80aa4c:	d8802215 	stw	r2,136(sp)
  80aa50:	a128703a 	and	r20,r20,r4
  80aa54:	1800a226 	beq	r3,zero,80ace0 <___vfiprintf_internal_r+0x968>
  80aa58:	0039883a 	mov	fp,zero
  80aa5c:	dd401a04 	addi	r21,sp,104
  80aa60:	9006d0fa 	srli	r3,r18,3
  80aa64:	9808977a 	slli	r4,r19,29
  80aa68:	9826d0fa 	srli	r19,r19,3
  80aa6c:	948001cc 	andi	r18,r18,7
  80aa70:	90800c04 	addi	r2,r18,48
  80aa74:	ad7fffc4 	addi	r21,r21,-1
  80aa78:	20e4b03a 	or	r18,r4,r3
  80aa7c:	a8800005 	stb	r2,0(r21)
  80aa80:	94c6b03a 	or	r3,r18,r19
  80aa84:	183ff61e 	bne	r3,zero,80aa60 <__alt_data_end+0xff80aa60>
  80aa88:	a0c0004c 	andi	r3,r20,1
  80aa8c:	18005926 	beq	r3,zero,80abf4 <___vfiprintf_internal_r+0x87c>
  80aa90:	10803fcc 	andi	r2,r2,255
  80aa94:	1080201c 	xori	r2,r2,128
  80aa98:	10bfe004 	addi	r2,r2,-128
  80aa9c:	00c00c04 	movi	r3,48
  80aaa0:	10c05426 	beq	r2,r3,80abf4 <___vfiprintf_internal_r+0x87c>
  80aaa4:	da801e17 	ldw	r10,120(sp)
  80aaa8:	a8bfffc4 	addi	r2,r21,-1
  80aaac:	a8ffffc5 	stb	r3,-1(r21)
  80aab0:	50a7c83a 	sub	r19,r10,r2
  80aab4:	102b883a 	mov	r21,r2
  80aab8:	003f2f06 	br	80a778 <__alt_data_end+0xff80a778>
  80aabc:	21003fcc 	andi	r4,r4,255
  80aac0:	2003421e 	bne	r4,zero,80b7cc <___vfiprintf_internal_r+0x1454>
  80aac4:	00802074 	movhi	r2,129
  80aac8:	10837804 	addi	r2,r2,3552
  80aacc:	d8802615 	stw	r2,152(sp)
  80aad0:	a080080c 	andi	r2,r20,32
  80aad4:	1000aa26 	beq	r2,zero,80ad80 <___vfiprintf_internal_r+0xa08>
  80aad8:	da802217 	ldw	r10,136(sp)
  80aadc:	54800017 	ldw	r18,0(r10)
  80aae0:	54c00117 	ldw	r19,4(r10)
  80aae4:	52800204 	addi	r10,r10,8
  80aae8:	da802215 	stw	r10,136(sp)
  80aaec:	a080004c 	andi	r2,r20,1
  80aaf0:	1001d226 	beq	r2,zero,80b23c <___vfiprintf_internal_r+0xec4>
  80aaf4:	94c4b03a 	or	r2,r18,r19
  80aaf8:	1002351e 	bne	r2,zero,80b3d0 <___vfiprintf_internal_r+0x1058>
  80aafc:	d8001d85 	stb	zero,118(sp)
  80ab00:	48022216 	blt	r9,zero,80b38c <___vfiprintf_internal_r+0x1014>
  80ab04:	00bfdfc4 	movi	r2,-129
  80ab08:	a0a8703a 	and	r20,r20,r2
  80ab0c:	003f1506 	br	80a764 <__alt_data_end+0xff80a764>
  80ab10:	da802217 	ldw	r10,136(sp)
  80ab14:	04800044 	movi	r18,1
  80ab18:	d8001d85 	stb	zero,118(sp)
  80ab1c:	50800017 	ldw	r2,0(r10)
  80ab20:	52800104 	addi	r10,r10,4
  80ab24:	da802215 	stw	r10,136(sp)
  80ab28:	d8801005 	stb	r2,64(sp)
  80ab2c:	9027883a 	mov	r19,r18
  80ab30:	dd401004 	addi	r21,sp,64
  80ab34:	0013883a 	mov	r9,zero
  80ab38:	003f1706 	br	80a798 <__alt_data_end+0xff80a798>
  80ab3c:	21003fcc 	andi	r4,r4,255
  80ab40:	2003201e 	bne	r4,zero,80b7c4 <___vfiprintf_internal_r+0x144c>
  80ab44:	a080080c 	andi	r2,r20,32
  80ab48:	10004b26 	beq	r2,zero,80ac78 <___vfiprintf_internal_r+0x900>
  80ab4c:	da802217 	ldw	r10,136(sp)
  80ab50:	50800117 	ldw	r2,4(r10)
  80ab54:	54800017 	ldw	r18,0(r10)
  80ab58:	52800204 	addi	r10,r10,8
  80ab5c:	da802215 	stw	r10,136(sp)
  80ab60:	1027883a 	mov	r19,r2
  80ab64:	10022c16 	blt	r2,zero,80b418 <___vfiprintf_internal_r+0x10a0>
  80ab68:	df001d83 	ldbu	fp,118(sp)
  80ab6c:	48007216 	blt	r9,zero,80ad38 <___vfiprintf_internal_r+0x9c0>
  80ab70:	00ffdfc4 	movi	r3,-129
  80ab74:	94c4b03a 	or	r2,r18,r19
  80ab78:	a0e8703a 	and	r20,r20,r3
  80ab7c:	1000cc26 	beq	r2,zero,80aeb0 <___vfiprintf_internal_r+0xb38>
  80ab80:	98021026 	beq	r19,zero,80b3c4 <___vfiprintf_internal_r+0x104c>
  80ab84:	dc402415 	stw	r17,144(sp)
  80ab88:	dc002515 	stw	r16,148(sp)
  80ab8c:	9823883a 	mov	r17,r19
  80ab90:	9021883a 	mov	r16,r18
  80ab94:	dd401a04 	addi	r21,sp,104
  80ab98:	4825883a 	mov	r18,r9
  80ab9c:	4027883a 	mov	r19,r8
  80aba0:	8009883a 	mov	r4,r16
  80aba4:	880b883a 	mov	r5,r17
  80aba8:	01800284 	movi	r6,10
  80abac:	000f883a 	mov	r7,zero
  80abb0:	080c7580 	call	80c758 <__umoddi3>
  80abb4:	10800c04 	addi	r2,r2,48
  80abb8:	ad7fffc4 	addi	r21,r21,-1
  80abbc:	8009883a 	mov	r4,r16
  80abc0:	880b883a 	mov	r5,r17
  80abc4:	a8800005 	stb	r2,0(r21)
  80abc8:	01800284 	movi	r6,10
  80abcc:	000f883a 	mov	r7,zero
  80abd0:	080c1e00 	call	80c1e0 <__udivdi3>
  80abd4:	1021883a 	mov	r16,r2
  80abd8:	10c4b03a 	or	r2,r2,r3
  80abdc:	1823883a 	mov	r17,r3
  80abe0:	103fef1e 	bne	r2,zero,80aba0 <__alt_data_end+0xff80aba0>
  80abe4:	dc402417 	ldw	r17,144(sp)
  80abe8:	dc002517 	ldw	r16,148(sp)
  80abec:	9013883a 	mov	r9,r18
  80abf0:	9811883a 	mov	r8,r19
  80abf4:	da801e17 	ldw	r10,120(sp)
  80abf8:	5567c83a 	sub	r19,r10,r21
  80abfc:	003ede06 	br	80a778 <__alt_data_end+0xff80a778>
  80ac00:	38803fcc 	andi	r2,r7,255
  80ac04:	1080201c 	xori	r2,r2,128
  80ac08:	10bfe004 	addi	r2,r2,-128
  80ac0c:	1002371e 	bne	r2,zero,80b4ec <___vfiprintf_internal_r+0x1174>
  80ac10:	01000044 	movi	r4,1
  80ac14:	01c00804 	movi	r7,32
  80ac18:	80c00007 	ldb	r3,0(r16)
  80ac1c:	003e3506 	br	80a4f4 <__alt_data_end+0xff80a4f4>
  80ac20:	a5000054 	ori	r20,r20,1
  80ac24:	80c00007 	ldb	r3,0(r16)
  80ac28:	003e3206 	br	80a4f4 <__alt_data_end+0xff80a4f4>
  80ac2c:	a5002014 	ori	r20,r20,128
  80ac30:	80c00007 	ldb	r3,0(r16)
  80ac34:	003e2f06 	br	80a4f4 <__alt_data_end+0xff80a4f4>
  80ac38:	8015883a 	mov	r10,r16
  80ac3c:	0023883a 	mov	r17,zero
  80ac40:	18bff404 	addi	r2,r3,-48
  80ac44:	50c00007 	ldb	r3,0(r10)
  80ac48:	8c4002a4 	muli	r17,r17,10
  80ac4c:	84000044 	addi	r16,r16,1
  80ac50:	8015883a 	mov	r10,r16
  80ac54:	1463883a 	add	r17,r2,r17
  80ac58:	18bff404 	addi	r2,r3,-48
  80ac5c:	30bff92e 	bgeu	r6,r2,80ac44 <__alt_data_end+0xff80ac44>
  80ac60:	003e2506 	br	80a4f8 <__alt_data_end+0xff80a4f8>
  80ac64:	21003fcc 	andi	r4,r4,255
  80ac68:	2002d41e 	bne	r4,zero,80b7bc <___vfiprintf_internal_r+0x1444>
  80ac6c:	a5000414 	ori	r20,r20,16
  80ac70:	a080080c 	andi	r2,r20,32
  80ac74:	103fb51e 	bne	r2,zero,80ab4c <__alt_data_end+0xff80ab4c>
  80ac78:	a080040c 	andi	r2,r20,16
  80ac7c:	1001f826 	beq	r2,zero,80b460 <___vfiprintf_internal_r+0x10e8>
  80ac80:	da802217 	ldw	r10,136(sp)
  80ac84:	54800017 	ldw	r18,0(r10)
  80ac88:	52800104 	addi	r10,r10,4
  80ac8c:	da802215 	stw	r10,136(sp)
  80ac90:	9027d7fa 	srai	r19,r18,31
  80ac94:	9805883a 	mov	r2,r19
  80ac98:	003fb206 	br	80ab64 <__alt_data_end+0xff80ab64>
  80ac9c:	21003fcc 	andi	r4,r4,255
  80aca0:	2002c41e 	bne	r4,zero,80b7b4 <___vfiprintf_internal_r+0x143c>
  80aca4:	a5000414 	ori	r20,r20,16
  80aca8:	a080080c 	andi	r2,r20,32
  80acac:	103f5f1e 	bne	r2,zero,80aa2c <__alt_data_end+0xff80aa2c>
  80acb0:	a080040c 	andi	r2,r20,16
  80acb4:	10020f26 	beq	r2,zero,80b4f4 <___vfiprintf_internal_r+0x117c>
  80acb8:	da802217 	ldw	r10,136(sp)
  80acbc:	d8001d85 	stb	zero,118(sp)
  80acc0:	0027883a 	mov	r19,zero
  80acc4:	50800104 	addi	r2,r10,4
  80acc8:	54800017 	ldw	r18,0(r10)
  80accc:	48021116 	blt	r9,zero,80b514 <___vfiprintf_internal_r+0x119c>
  80acd0:	00ffdfc4 	movi	r3,-129
  80acd4:	d8802215 	stw	r2,136(sp)
  80acd8:	a0e8703a 	and	r20,r20,r3
  80acdc:	903f5e1e 	bne	r18,zero,80aa58 <__alt_data_end+0xff80aa58>
  80ace0:	0039883a 	mov	fp,zero
  80ace4:	4802a626 	beq	r9,zero,80b780 <___vfiprintf_internal_r+0x1408>
  80ace8:	0025883a 	mov	r18,zero
  80acec:	0027883a 	mov	r19,zero
  80acf0:	003f5a06 	br	80aa5c <__alt_data_end+0xff80aa5c>
  80acf4:	21003fcc 	andi	r4,r4,255
  80acf8:	20029f1e 	bne	r4,zero,80b778 <___vfiprintf_internal_r+0x1400>
  80acfc:	a5000414 	ori	r20,r20,16
  80ad00:	a080080c 	andi	r2,r20,32
  80ad04:	10005e1e 	bne	r2,zero,80ae80 <___vfiprintf_internal_r+0xb08>
  80ad08:	a080040c 	andi	r2,r20,16
  80ad0c:	1001a21e 	bne	r2,zero,80b398 <___vfiprintf_internal_r+0x1020>
  80ad10:	a080100c 	andi	r2,r20,64
  80ad14:	d8001d85 	stb	zero,118(sp)
  80ad18:	da802217 	ldw	r10,136(sp)
  80ad1c:	1002231e 	bne	r2,zero,80b5ac <___vfiprintf_internal_r+0x1234>
  80ad20:	50800104 	addi	r2,r10,4
  80ad24:	54800017 	ldw	r18,0(r10)
  80ad28:	0027883a 	mov	r19,zero
  80ad2c:	4801a00e 	bge	r9,zero,80b3b0 <___vfiprintf_internal_r+0x1038>
  80ad30:	d8802215 	stw	r2,136(sp)
  80ad34:	0039883a 	mov	fp,zero
  80ad38:	94c4b03a 	or	r2,r18,r19
  80ad3c:	103f901e 	bne	r2,zero,80ab80 <__alt_data_end+0xff80ab80>
  80ad40:	00800044 	movi	r2,1
  80ad44:	10803fcc 	andi	r2,r2,255
  80ad48:	00c00044 	movi	r3,1
  80ad4c:	10c05926 	beq	r2,r3,80aeb4 <___vfiprintf_internal_r+0xb3c>
  80ad50:	00c00084 	movi	r3,2
  80ad54:	10ffe41e 	bne	r2,r3,80ace8 <__alt_data_end+0xff80ace8>
  80ad58:	0025883a 	mov	r18,zero
  80ad5c:	0027883a 	mov	r19,zero
  80ad60:	00013d06 	br	80b258 <___vfiprintf_internal_r+0xee0>
  80ad64:	21003fcc 	andi	r4,r4,255
  80ad68:	2002811e 	bne	r4,zero,80b770 <___vfiprintf_internal_r+0x13f8>
  80ad6c:	00802074 	movhi	r2,129
  80ad70:	10837304 	addi	r2,r2,3532
  80ad74:	d8802615 	stw	r2,152(sp)
  80ad78:	a080080c 	andi	r2,r20,32
  80ad7c:	103f561e 	bne	r2,zero,80aad8 <__alt_data_end+0xff80aad8>
  80ad80:	a080040c 	andi	r2,r20,16
  80ad84:	1001d126 	beq	r2,zero,80b4cc <___vfiprintf_internal_r+0x1154>
  80ad88:	da802217 	ldw	r10,136(sp)
  80ad8c:	0027883a 	mov	r19,zero
  80ad90:	54800017 	ldw	r18,0(r10)
  80ad94:	52800104 	addi	r10,r10,4
  80ad98:	da802215 	stw	r10,136(sp)
  80ad9c:	003f5306 	br	80aaec <__alt_data_end+0xff80aaec>
  80ada0:	da802217 	ldw	r10,136(sp)
  80ada4:	d8001d85 	stb	zero,118(sp)
  80ada8:	55400017 	ldw	r21,0(r10)
  80adac:	50c00104 	addi	r3,r10,4
  80adb0:	a8024226 	beq	r21,zero,80b6bc <___vfiprintf_internal_r+0x1344>
  80adb4:	48021816 	blt	r9,zero,80b618 <___vfiprintf_internal_r+0x12a0>
  80adb8:	480d883a 	mov	r6,r9
  80adbc:	000b883a 	mov	r5,zero
  80adc0:	a809883a 	mov	r4,r21
  80adc4:	d8c02a15 	stw	r3,168(sp)
  80adc8:	da002b15 	stw	r8,172(sp)
  80adcc:	da402c15 	stw	r9,176(sp)
  80add0:	08084e40 	call	8084e4 <memchr>
  80add4:	d8c02a17 	ldw	r3,168(sp)
  80add8:	da002b17 	ldw	r8,172(sp)
  80addc:	da402c17 	ldw	r9,176(sp)
  80ade0:	10024826 	beq	r2,zero,80b704 <___vfiprintf_internal_r+0x138c>
  80ade4:	1567c83a 	sub	r19,r2,r21
  80ade8:	df001d83 	ldbu	fp,118(sp)
  80adec:	d8c02215 	stw	r3,136(sp)
  80adf0:	0013883a 	mov	r9,zero
  80adf4:	003e6006 	br	80a778 <__alt_data_end+0xff80a778>
  80adf8:	21003fcc 	andi	r4,r4,255
  80adfc:	203fc026 	beq	r4,zero,80ad00 <__alt_data_end+0xff80ad00>
  80ae00:	d9c01d85 	stb	r7,118(sp)
  80ae04:	003fbe06 	br	80ad00 <__alt_data_end+0xff80ad00>
  80ae08:	da802217 	ldw	r10,136(sp)
  80ae0c:	54400017 	ldw	r17,0(r10)
  80ae10:	50800104 	addi	r2,r10,4
  80ae14:	883e3b16 	blt	r17,zero,80a704 <__alt_data_end+0xff80a704>
  80ae18:	d8802215 	stw	r2,136(sp)
  80ae1c:	80c00007 	ldb	r3,0(r16)
  80ae20:	003db406 	br	80a4f4 <__alt_data_end+0xff80a4f4>
  80ae24:	01000044 	movi	r4,1
  80ae28:	01c00ac4 	movi	r7,43
  80ae2c:	80c00007 	ldb	r3,0(r16)
  80ae30:	003db006 	br	80a4f4 <__alt_data_end+0xff80a4f4>
  80ae34:	80c00007 	ldb	r3,0(r16)
  80ae38:	82800044 	addi	r10,r16,1
  80ae3c:	1b423c26 	beq	r3,r13,80b730 <___vfiprintf_internal_r+0x13b8>
  80ae40:	18bff404 	addi	r2,r3,-48
  80ae44:	0013883a 	mov	r9,zero
  80ae48:	30822b36 	bltu	r6,r2,80b6f8 <___vfiprintf_internal_r+0x1380>
  80ae4c:	50c00007 	ldb	r3,0(r10)
  80ae50:	4a4002a4 	muli	r9,r9,10
  80ae54:	54000044 	addi	r16,r10,1
  80ae58:	8015883a 	mov	r10,r16
  80ae5c:	4893883a 	add	r9,r9,r2
  80ae60:	18bff404 	addi	r2,r3,-48
  80ae64:	30bff92e 	bgeu	r6,r2,80ae4c <__alt_data_end+0xff80ae4c>
  80ae68:	483da30e 	bge	r9,zero,80a4f8 <__alt_data_end+0xff80a4f8>
  80ae6c:	027fffc4 	movi	r9,-1
  80ae70:	003da106 	br	80a4f8 <__alt_data_end+0xff80a4f8>
  80ae74:	a5001014 	ori	r20,r20,64
  80ae78:	80c00007 	ldb	r3,0(r16)
  80ae7c:	003d9d06 	br	80a4f4 <__alt_data_end+0xff80a4f4>
  80ae80:	da802217 	ldw	r10,136(sp)
  80ae84:	d8001d85 	stb	zero,118(sp)
  80ae88:	50c00204 	addi	r3,r10,8
  80ae8c:	54800017 	ldw	r18,0(r10)
  80ae90:	54c00117 	ldw	r19,4(r10)
  80ae94:	4801ca16 	blt	r9,zero,80b5c0 <___vfiprintf_internal_r+0x1248>
  80ae98:	013fdfc4 	movi	r4,-129
  80ae9c:	94c4b03a 	or	r2,r18,r19
  80aea0:	d8c02215 	stw	r3,136(sp)
  80aea4:	a128703a 	and	r20,r20,r4
  80aea8:	0039883a 	mov	fp,zero
  80aeac:	103f341e 	bne	r2,zero,80ab80 <__alt_data_end+0xff80ab80>
  80aeb0:	483e2e26 	beq	r9,zero,80a76c <__alt_data_end+0xff80a76c>
  80aeb4:	0025883a 	mov	r18,zero
  80aeb8:	94800c04 	addi	r18,r18,48
  80aebc:	dc8019c5 	stb	r18,103(sp)
  80aec0:	dcc02717 	ldw	r19,156(sp)
  80aec4:	dd4019c4 	addi	r21,sp,103
  80aec8:	003e2b06 	br	80a778 <__alt_data_end+0xff80a778>
  80aecc:	21003fcc 	andi	r4,r4,255
  80aed0:	2002361e 	bne	r4,zero,80b7ac <___vfiprintf_internal_r+0x1434>
  80aed4:	1801c126 	beq	r3,zero,80b5dc <___vfiprintf_internal_r+0x1264>
  80aed8:	04800044 	movi	r18,1
  80aedc:	d8c01005 	stb	r3,64(sp)
  80aee0:	d8001d85 	stb	zero,118(sp)
  80aee4:	9027883a 	mov	r19,r18
  80aee8:	dd401004 	addi	r21,sp,64
  80aeec:	003f1106 	br	80ab34 <__alt_data_end+0xff80ab34>
  80aef0:	d9402117 	ldw	r5,132(sp)
  80aef4:	d9002017 	ldw	r4,128(sp)
  80aef8:	d9801a04 	addi	r6,sp,104
  80aefc:	d9c02b15 	stw	r7,172(sp)
  80af00:	dbc02a15 	stw	r15,168(sp)
  80af04:	080a2640 	call	80a264 <__sprint_r.part.0>
  80af08:	d9c02b17 	ldw	r7,172(sp)
  80af0c:	dbc02a17 	ldw	r15,168(sp)
  80af10:	10006d1e 	bne	r2,zero,80b0c8 <___vfiprintf_internal_r+0xd50>
  80af14:	d9801b17 	ldw	r6,108(sp)
  80af18:	d8801c17 	ldw	r2,112(sp)
  80af1c:	d811883a 	mov	r8,sp
  80af20:	31400044 	addi	r5,r6,1
  80af24:	003e3306 	br	80a7f4 <__alt_data_end+0xff80a7f4>
  80af28:	d9401b17 	ldw	r5,108(sp)
  80af2c:	d8801c17 	ldw	r2,112(sp)
  80af30:	29000044 	addi	r4,r5,1
  80af34:	d8c01d87 	ldb	r3,118(sp)
  80af38:	183e4d26 	beq	r3,zero,80a870 <__alt_data_end+0xff80a870>
  80af3c:	00c00044 	movi	r3,1
  80af40:	d9401d84 	addi	r5,sp,118
  80af44:	10c5883a 	add	r2,r2,r3
  80af48:	41400015 	stw	r5,0(r8)
  80af4c:	40c00115 	stw	r3,4(r8)
  80af50:	d8801c15 	stw	r2,112(sp)
  80af54:	d9001b15 	stw	r4,108(sp)
  80af58:	014001c4 	movi	r5,7
  80af5c:	2900a90e 	bge	r5,r4,80b204 <___vfiprintf_internal_r+0xe8c>
  80af60:	1000da1e 	bne	r2,zero,80b2cc <___vfiprintf_internal_r+0xf54>
  80af64:	7000ab1e 	bne	r14,zero,80b214 <___vfiprintf_internal_r+0xe9c>
  80af68:	000b883a 	mov	r5,zero
  80af6c:	1809883a 	mov	r4,r3
  80af70:	d811883a 	mov	r8,sp
  80af74:	00c02004 	movi	r3,128
  80af78:	e0fe4d26 	beq	fp,r3,80a8b0 <__alt_data_end+0xff80a8b0>
  80af7c:	4cf9c83a 	sub	fp,r9,r19
  80af80:	073e7b0e 	bge	zero,fp,80a970 <__alt_data_end+0xff80a970>
  80af84:	01c00404 	movi	r7,16
  80af88:	3f01900e 	bge	r7,fp,80b5cc <___vfiprintf_internal_r+0x1254>
  80af8c:	00c02074 	movhi	r3,129
  80af90:	18c3d804 	addi	r3,r3,3936
  80af94:	d8c02415 	stw	r3,144(sp)
  80af98:	034001c4 	movi	r13,7
  80af9c:	00000506 	br	80afb4 <___vfiprintf_internal_r+0xc3c>
  80afa0:	29000084 	addi	r4,r5,2
  80afa4:	42000204 	addi	r8,r8,8
  80afa8:	180b883a 	mov	r5,r3
  80afac:	e73ffc04 	addi	fp,fp,-16
  80afb0:	3f000d0e 	bge	r7,fp,80afe8 <___vfiprintf_internal_r+0xc70>
  80afb4:	10800404 	addi	r2,r2,16
  80afb8:	28c00044 	addi	r3,r5,1
  80afbc:	45c00015 	stw	r23,0(r8)
  80afc0:	41c00115 	stw	r7,4(r8)
  80afc4:	d8801c15 	stw	r2,112(sp)
  80afc8:	d8c01b15 	stw	r3,108(sp)
  80afcc:	68fff40e 	bge	r13,r3,80afa0 <__alt_data_end+0xff80afa0>
  80afd0:	1000101e 	bne	r2,zero,80b014 <___vfiprintf_internal_r+0xc9c>
  80afd4:	e73ffc04 	addi	fp,fp,-16
  80afd8:	01000044 	movi	r4,1
  80afdc:	000b883a 	mov	r5,zero
  80afe0:	d811883a 	mov	r8,sp
  80afe4:	3f3ff316 	blt	r7,fp,80afb4 <__alt_data_end+0xff80afb4>
  80afe8:	da802417 	ldw	r10,144(sp)
  80afec:	1705883a 	add	r2,r2,fp
  80aff0:	47000115 	stw	fp,4(r8)
  80aff4:	42800015 	stw	r10,0(r8)
  80aff8:	d8801c15 	stw	r2,112(sp)
  80affc:	d9001b15 	stw	r4,108(sp)
  80b000:	00c001c4 	movi	r3,7
  80b004:	19003616 	blt	r3,r4,80b0e0 <___vfiprintf_internal_r+0xd68>
  80b008:	42000204 	addi	r8,r8,8
  80b00c:	21000044 	addi	r4,r4,1
  80b010:	003e5706 	br	80a970 <__alt_data_end+0xff80a970>
  80b014:	d9402117 	ldw	r5,132(sp)
  80b018:	d9002017 	ldw	r4,128(sp)
  80b01c:	d9801a04 	addi	r6,sp,104
  80b020:	d9c02b15 	stw	r7,172(sp)
  80b024:	db402a15 	stw	r13,168(sp)
  80b028:	080a2640 	call	80a264 <__sprint_r.part.0>
  80b02c:	d9c02b17 	ldw	r7,172(sp)
  80b030:	db402a17 	ldw	r13,168(sp)
  80b034:	1000241e 	bne	r2,zero,80b0c8 <___vfiprintf_internal_r+0xd50>
  80b038:	d9401b17 	ldw	r5,108(sp)
  80b03c:	d8801c17 	ldw	r2,112(sp)
  80b040:	d811883a 	mov	r8,sp
  80b044:	29000044 	addi	r4,r5,1
  80b048:	003fd806 	br	80afac <__alt_data_end+0xff80afac>
  80b04c:	d9401b17 	ldw	r5,108(sp)
  80b050:	00c02074 	movhi	r3,129
  80b054:	18c3dc04 	addi	r3,r3,3952
  80b058:	d8c02415 	stw	r3,144(sp)
  80b05c:	29400044 	addi	r5,r5,1
  80b060:	d8c02417 	ldw	r3,144(sp)
  80b064:	14c5883a 	add	r2,r2,r19
  80b068:	44c00115 	stw	r19,4(r8)
  80b06c:	40c00015 	stw	r3,0(r8)
  80b070:	d8801c15 	stw	r2,112(sp)
  80b074:	d9401b15 	stw	r5,108(sp)
  80b078:	00c001c4 	movi	r3,7
  80b07c:	1940070e 	bge	r3,r5,80b09c <___vfiprintf_internal_r+0xd24>
  80b080:	103e4826 	beq	r2,zero,80a9a4 <__alt_data_end+0xff80a9a4>
  80b084:	d9402117 	ldw	r5,132(sp)
  80b088:	d9002017 	ldw	r4,128(sp)
  80b08c:	d9801a04 	addi	r6,sp,104
  80b090:	080a2640 	call	80a264 <__sprint_r.part.0>
  80b094:	10000c1e 	bne	r2,zero,80b0c8 <___vfiprintf_internal_r+0xd50>
  80b098:	d8801c17 	ldw	r2,112(sp)
  80b09c:	8c80010e 	bge	r17,r18,80b0a4 <___vfiprintf_internal_r+0xd2c>
  80b0a0:	9023883a 	mov	r17,r18
  80b0a4:	da802317 	ldw	r10,140(sp)
  80b0a8:	5455883a 	add	r10,r10,r17
  80b0ac:	da802315 	stw	r10,140(sp)
  80b0b0:	103e4126 	beq	r2,zero,80a9b8 <__alt_data_end+0xff80a9b8>
  80b0b4:	d9402117 	ldw	r5,132(sp)
  80b0b8:	d9002017 	ldw	r4,128(sp)
  80b0bc:	d9801a04 	addi	r6,sp,104
  80b0c0:	080a2640 	call	80a264 <__sprint_r.part.0>
  80b0c4:	103e3c26 	beq	r2,zero,80a9b8 <__alt_data_end+0xff80a9b8>
  80b0c8:	dd002117 	ldw	r20,132(sp)
  80b0cc:	a080030b 	ldhu	r2,12(r20)
  80b0d0:	1080100c 	andi	r2,r2,64
  80b0d4:	1001231e 	bne	r2,zero,80b564 <___vfiprintf_internal_r+0x11ec>
  80b0d8:	d8802317 	ldw	r2,140(sp)
  80b0dc:	003d7b06 	br	80a6cc <__alt_data_end+0xff80a6cc>
  80b0e0:	1000991e 	bne	r2,zero,80b348 <___vfiprintf_internal_r+0xfd0>
  80b0e4:	00c00044 	movi	r3,1
  80b0e8:	9805883a 	mov	r2,r19
  80b0ec:	dd400015 	stw	r21,0(sp)
  80b0f0:	dcc00115 	stw	r19,4(sp)
  80b0f4:	dcc01c15 	stw	r19,112(sp)
  80b0f8:	d8c01b15 	stw	r3,108(sp)
  80b0fc:	d811883a 	mov	r8,sp
  80b100:	42000204 	addi	r8,r8,8
  80b104:	a2c0010c 	andi	r11,r20,4
  80b108:	583fe426 	beq	r11,zero,80b09c <__alt_data_end+0xff80b09c>
  80b10c:	8ca7c83a 	sub	r19,r17,r18
  80b110:	04ffe20e 	bge	zero,r19,80b09c <__alt_data_end+0xff80b09c>
  80b114:	01c00404 	movi	r7,16
  80b118:	3cffcc0e 	bge	r7,r19,80b04c <__alt_data_end+0xff80b04c>
  80b11c:	02802074 	movhi	r10,129
  80b120:	5283dc04 	addi	r10,r10,3952
  80b124:	d9001b17 	ldw	r4,108(sp)
  80b128:	da802415 	stw	r10,144(sp)
  80b12c:	382b883a 	mov	r21,r7
  80b130:	050001c4 	movi	r20,7
  80b134:	df002017 	ldw	fp,128(sp)
  80b138:	00000506 	br	80b150 <___vfiprintf_internal_r+0xdd8>
  80b13c:	21400084 	addi	r5,r4,2
  80b140:	42000204 	addi	r8,r8,8
  80b144:	1809883a 	mov	r4,r3
  80b148:	9cfffc04 	addi	r19,r19,-16
  80b14c:	acffc40e 	bge	r21,r19,80b060 <__alt_data_end+0xff80b060>
  80b150:	10800404 	addi	r2,r2,16
  80b154:	20c00044 	addi	r3,r4,1
  80b158:	45800015 	stw	r22,0(r8)
  80b15c:	45400115 	stw	r21,4(r8)
  80b160:	d8801c15 	stw	r2,112(sp)
  80b164:	d8c01b15 	stw	r3,108(sp)
  80b168:	a0fff40e 	bge	r20,r3,80b13c <__alt_data_end+0xff80b13c>
  80b16c:	1000041e 	bne	r2,zero,80b180 <___vfiprintf_internal_r+0xe08>
  80b170:	01400044 	movi	r5,1
  80b174:	0009883a 	mov	r4,zero
  80b178:	d811883a 	mov	r8,sp
  80b17c:	003ff206 	br	80b148 <__alt_data_end+0xff80b148>
  80b180:	d9402117 	ldw	r5,132(sp)
  80b184:	d9801a04 	addi	r6,sp,104
  80b188:	e009883a 	mov	r4,fp
  80b18c:	080a2640 	call	80a264 <__sprint_r.part.0>
  80b190:	103fcd1e 	bne	r2,zero,80b0c8 <__alt_data_end+0xff80b0c8>
  80b194:	d9001b17 	ldw	r4,108(sp)
  80b198:	d8801c17 	ldw	r2,112(sp)
  80b19c:	d811883a 	mov	r8,sp
  80b1a0:	21400044 	addi	r5,r4,1
  80b1a4:	003fe806 	br	80b148 <__alt_data_end+0xff80b148>
  80b1a8:	d9402117 	ldw	r5,132(sp)
  80b1ac:	d9002017 	ldw	r4,128(sp)
  80b1b0:	d9801a04 	addi	r6,sp,104
  80b1b4:	d9c02b15 	stw	r7,172(sp)
  80b1b8:	db402a15 	stw	r13,168(sp)
  80b1bc:	080a2640 	call	80a264 <__sprint_r.part.0>
  80b1c0:	d9c02b17 	ldw	r7,172(sp)
  80b1c4:	db402a17 	ldw	r13,168(sp)
  80b1c8:	103fbf1e 	bne	r2,zero,80b0c8 <__alt_data_end+0xff80b0c8>
  80b1cc:	d9401b17 	ldw	r5,108(sp)
  80b1d0:	d8801c17 	ldw	r2,112(sp)
  80b1d4:	d811883a 	mov	r8,sp
  80b1d8:	29800044 	addi	r6,r5,1
  80b1dc:	003dc406 	br	80a8f0 <__alt_data_end+0xff80a8f0>
  80b1e0:	1000d21e 	bne	r2,zero,80b52c <___vfiprintf_internal_r+0x11b4>
  80b1e4:	d8c01d87 	ldb	r3,118(sp)
  80b1e8:	18009526 	beq	r3,zero,80b440 <___vfiprintf_internal_r+0x10c8>
  80b1ec:	00800044 	movi	r2,1
  80b1f0:	d8c01d84 	addi	r3,sp,118
  80b1f4:	1009883a 	mov	r4,r2
  80b1f8:	d8c00015 	stw	r3,0(sp)
  80b1fc:	d8800115 	stw	r2,4(sp)
  80b200:	d811883a 	mov	r8,sp
  80b204:	200b883a 	mov	r5,r4
  80b208:	42000204 	addi	r8,r8,8
  80b20c:	21000044 	addi	r4,r4,1
  80b210:	003d9706 	br	80a870 <__alt_data_end+0xff80a870>
  80b214:	d9001d04 	addi	r4,sp,116
  80b218:	00800084 	movi	r2,2
  80b21c:	d9000015 	stw	r4,0(sp)
  80b220:	d8800115 	stw	r2,4(sp)
  80b224:	1809883a 	mov	r4,r3
  80b228:	d811883a 	mov	r8,sp
  80b22c:	200b883a 	mov	r5,r4
  80b230:	42000204 	addi	r8,r8,8
  80b234:	21000044 	addi	r4,r4,1
  80b238:	003f4e06 	br	80af74 <__alt_data_end+0xff80af74>
  80b23c:	d8001d85 	stb	zero,118(sp)
  80b240:	48005016 	blt	r9,zero,80b384 <___vfiprintf_internal_r+0x100c>
  80b244:	00ffdfc4 	movi	r3,-129
  80b248:	94c4b03a 	or	r2,r18,r19
  80b24c:	a0e8703a 	and	r20,r20,r3
  80b250:	103d4426 	beq	r2,zero,80a764 <__alt_data_end+0xff80a764>
  80b254:	0039883a 	mov	fp,zero
  80b258:	d9002617 	ldw	r4,152(sp)
  80b25c:	dd401a04 	addi	r21,sp,104
  80b260:	908003cc 	andi	r2,r18,15
  80b264:	9806973a 	slli	r3,r19,28
  80b268:	2085883a 	add	r2,r4,r2
  80b26c:	9024d13a 	srli	r18,r18,4
  80b270:	10800003 	ldbu	r2,0(r2)
  80b274:	9826d13a 	srli	r19,r19,4
  80b278:	ad7fffc4 	addi	r21,r21,-1
  80b27c:	1ca4b03a 	or	r18,r3,r18
  80b280:	a8800005 	stb	r2,0(r21)
  80b284:	94c4b03a 	or	r2,r18,r19
  80b288:	103ff51e 	bne	r2,zero,80b260 <__alt_data_end+0xff80b260>
  80b28c:	003e5906 	br	80abf4 <__alt_data_end+0xff80abf4>
  80b290:	d9402117 	ldw	r5,132(sp)
  80b294:	d9002017 	ldw	r4,128(sp)
  80b298:	d9801a04 	addi	r6,sp,104
  80b29c:	080a2640 	call	80a264 <__sprint_r.part.0>
  80b2a0:	103f891e 	bne	r2,zero,80b0c8 <__alt_data_end+0xff80b0c8>
  80b2a4:	d8801c17 	ldw	r2,112(sp)
  80b2a8:	d811883a 	mov	r8,sp
  80b2ac:	003f9506 	br	80b104 <__alt_data_end+0xff80b104>
  80b2b0:	d9402117 	ldw	r5,132(sp)
  80b2b4:	d9002017 	ldw	r4,128(sp)
  80b2b8:	d9801a04 	addi	r6,sp,104
  80b2bc:	080a2640 	call	80a264 <__sprint_r.part.0>
  80b2c0:	103f811e 	bne	r2,zero,80b0c8 <__alt_data_end+0xff80b0c8>
  80b2c4:	d811883a 	mov	r8,sp
  80b2c8:	003ced06 	br	80a680 <__alt_data_end+0xff80a680>
  80b2cc:	d9402117 	ldw	r5,132(sp)
  80b2d0:	d9002017 	ldw	r4,128(sp)
  80b2d4:	d9801a04 	addi	r6,sp,104
  80b2d8:	da402c15 	stw	r9,176(sp)
  80b2dc:	db802a15 	stw	r14,168(sp)
  80b2e0:	080a2640 	call	80a264 <__sprint_r.part.0>
  80b2e4:	da402c17 	ldw	r9,176(sp)
  80b2e8:	db802a17 	ldw	r14,168(sp)
  80b2ec:	103f761e 	bne	r2,zero,80b0c8 <__alt_data_end+0xff80b0c8>
  80b2f0:	d9401b17 	ldw	r5,108(sp)
  80b2f4:	d8801c17 	ldw	r2,112(sp)
  80b2f8:	d811883a 	mov	r8,sp
  80b2fc:	29000044 	addi	r4,r5,1
  80b300:	003d5b06 	br	80a870 <__alt_data_end+0xff80a870>
  80b304:	d9402117 	ldw	r5,132(sp)
  80b308:	d9002017 	ldw	r4,128(sp)
  80b30c:	d9801a04 	addi	r6,sp,104
  80b310:	da402c15 	stw	r9,176(sp)
  80b314:	080a2640 	call	80a264 <__sprint_r.part.0>
  80b318:	da402c17 	ldw	r9,176(sp)
  80b31c:	103f6a1e 	bne	r2,zero,80b0c8 <__alt_data_end+0xff80b0c8>
  80b320:	d9401b17 	ldw	r5,108(sp)
  80b324:	d8801c17 	ldw	r2,112(sp)
  80b328:	d811883a 	mov	r8,sp
  80b32c:	29000044 	addi	r4,r5,1
  80b330:	003f1006 	br	80af74 <__alt_data_end+0xff80af74>
  80b334:	1000c31e 	bne	r2,zero,80b644 <___vfiprintf_internal_r+0x12cc>
  80b338:	01000044 	movi	r4,1
  80b33c:	000b883a 	mov	r5,zero
  80b340:	d811883a 	mov	r8,sp
  80b344:	003f0d06 	br	80af7c <__alt_data_end+0xff80af7c>
  80b348:	d9402117 	ldw	r5,132(sp)
  80b34c:	d9002017 	ldw	r4,128(sp)
  80b350:	d9801a04 	addi	r6,sp,104
  80b354:	080a2640 	call	80a264 <__sprint_r.part.0>
  80b358:	103f5b1e 	bne	r2,zero,80b0c8 <__alt_data_end+0xff80b0c8>
  80b35c:	d9001b17 	ldw	r4,108(sp)
  80b360:	d8801c17 	ldw	r2,112(sp)
  80b364:	d811883a 	mov	r8,sp
  80b368:	21000044 	addi	r4,r4,1
  80b36c:	003d8006 	br	80a970 <__alt_data_end+0xff80a970>
  80b370:	01002074 	movhi	r4,129
  80b374:	21037804 	addi	r4,r4,3552
  80b378:	d9002615 	stw	r4,152(sp)
  80b37c:	d8c02215 	stw	r3,136(sp)
  80b380:	1029883a 	mov	r20,r2
  80b384:	94c4b03a 	or	r2,r18,r19
  80b388:	103fb21e 	bne	r2,zero,80b254 <__alt_data_end+0xff80b254>
  80b38c:	0039883a 	mov	fp,zero
  80b390:	00800084 	movi	r2,2
  80b394:	003e6b06 	br	80ad44 <__alt_data_end+0xff80ad44>
  80b398:	da802217 	ldw	r10,136(sp)
  80b39c:	d8001d85 	stb	zero,118(sp)
  80b3a0:	0027883a 	mov	r19,zero
  80b3a4:	50800104 	addi	r2,r10,4
  80b3a8:	54800017 	ldw	r18,0(r10)
  80b3ac:	483e6016 	blt	r9,zero,80ad30 <__alt_data_end+0xff80ad30>
  80b3b0:	00ffdfc4 	movi	r3,-129
  80b3b4:	d8802215 	stw	r2,136(sp)
  80b3b8:	a0e8703a 	and	r20,r20,r3
  80b3bc:	0039883a 	mov	fp,zero
  80b3c0:	903ebb26 	beq	r18,zero,80aeb0 <__alt_data_end+0xff80aeb0>
  80b3c4:	00800244 	movi	r2,9
  80b3c8:	14bdee36 	bltu	r2,r18,80ab84 <__alt_data_end+0xff80ab84>
  80b3cc:	003eba06 	br	80aeb8 <__alt_data_end+0xff80aeb8>
  80b3d0:	00800c04 	movi	r2,48
  80b3d4:	d8c01d45 	stb	r3,117(sp)
  80b3d8:	d8801d05 	stb	r2,116(sp)
  80b3dc:	d8001d85 	stb	zero,118(sp)
  80b3e0:	a0c00094 	ori	r3,r20,2
  80b3e4:	4800a916 	blt	r9,zero,80b68c <___vfiprintf_internal_r+0x1314>
  80b3e8:	00bfdfc4 	movi	r2,-129
  80b3ec:	a096703a 	and	r11,r20,r2
  80b3f0:	5d000094 	ori	r20,r11,2
  80b3f4:	0039883a 	mov	fp,zero
  80b3f8:	003f9706 	br	80b258 <__alt_data_end+0xff80b258>
  80b3fc:	8025883a 	mov	r18,r16
  80b400:	003c2e06 	br	80a4bc <__alt_data_end+0xff80a4bc>
  80b404:	00802074 	movhi	r2,129
  80b408:	10837804 	addi	r2,r2,3552
  80b40c:	0039883a 	mov	fp,zero
  80b410:	d8802615 	stw	r2,152(sp)
  80b414:	003f9006 	br	80b258 <__alt_data_end+0xff80b258>
  80b418:	04a5c83a 	sub	r18,zero,r18
  80b41c:	07000b44 	movi	fp,45
  80b420:	9004c03a 	cmpne	r2,r18,zero
  80b424:	04e7c83a 	sub	r19,zero,r19
  80b428:	df001d85 	stb	fp,118(sp)
  80b42c:	98a7c83a 	sub	r19,r19,r2
  80b430:	48009f16 	blt	r9,zero,80b6b0 <___vfiprintf_internal_r+0x1338>
  80b434:	00bfdfc4 	movi	r2,-129
  80b438:	a0a8703a 	and	r20,r20,r2
  80b43c:	003dd006 	br	80ab80 <__alt_data_end+0xff80ab80>
  80b440:	70004c26 	beq	r14,zero,80b574 <___vfiprintf_internal_r+0x11fc>
  80b444:	00800084 	movi	r2,2
  80b448:	d8c01d04 	addi	r3,sp,116
  80b44c:	d8c00015 	stw	r3,0(sp)
  80b450:	d8800115 	stw	r2,4(sp)
  80b454:	01000044 	movi	r4,1
  80b458:	d811883a 	mov	r8,sp
  80b45c:	003f7306 	br	80b22c <__alt_data_end+0xff80b22c>
  80b460:	a080100c 	andi	r2,r20,64
  80b464:	da802217 	ldw	r10,136(sp)
  80b468:	103e0626 	beq	r2,zero,80ac84 <__alt_data_end+0xff80ac84>
  80b46c:	5480000f 	ldh	r18,0(r10)
  80b470:	52800104 	addi	r10,r10,4
  80b474:	da802215 	stw	r10,136(sp)
  80b478:	9027d7fa 	srai	r19,r18,31
  80b47c:	9805883a 	mov	r2,r19
  80b480:	003db806 	br	80ab64 <__alt_data_end+0xff80ab64>
  80b484:	a080040c 	andi	r2,r20,16
  80b488:	1000091e 	bne	r2,zero,80b4b0 <___vfiprintf_internal_r+0x1138>
  80b48c:	a2c0100c 	andi	r11,r20,64
  80b490:	58000726 	beq	r11,zero,80b4b0 <___vfiprintf_internal_r+0x1138>
  80b494:	da802217 	ldw	r10,136(sp)
  80b498:	50800017 	ldw	r2,0(r10)
  80b49c:	52800104 	addi	r10,r10,4
  80b4a0:	da802215 	stw	r10,136(sp)
  80b4a4:	da802317 	ldw	r10,140(sp)
  80b4a8:	1280000d 	sth	r10,0(r2)
  80b4ac:	003be706 	br	80a44c <__alt_data_end+0xff80a44c>
  80b4b0:	da802217 	ldw	r10,136(sp)
  80b4b4:	50800017 	ldw	r2,0(r10)
  80b4b8:	52800104 	addi	r10,r10,4
  80b4bc:	da802215 	stw	r10,136(sp)
  80b4c0:	da802317 	ldw	r10,140(sp)
  80b4c4:	12800015 	stw	r10,0(r2)
  80b4c8:	003be006 	br	80a44c <__alt_data_end+0xff80a44c>
  80b4cc:	a080100c 	andi	r2,r20,64
  80b4d0:	da802217 	ldw	r10,136(sp)
  80b4d4:	10003026 	beq	r2,zero,80b598 <___vfiprintf_internal_r+0x1220>
  80b4d8:	5480000b 	ldhu	r18,0(r10)
  80b4dc:	52800104 	addi	r10,r10,4
  80b4e0:	0027883a 	mov	r19,zero
  80b4e4:	da802215 	stw	r10,136(sp)
  80b4e8:	003d8006 	br	80aaec <__alt_data_end+0xff80aaec>
  80b4ec:	80c00007 	ldb	r3,0(r16)
  80b4f0:	003c0006 	br	80a4f4 <__alt_data_end+0xff80a4f4>
  80b4f4:	a080100c 	andi	r2,r20,64
  80b4f8:	d8001d85 	stb	zero,118(sp)
  80b4fc:	da802217 	ldw	r10,136(sp)
  80b500:	1000201e 	bne	r2,zero,80b584 <___vfiprintf_internal_r+0x120c>
  80b504:	50800104 	addi	r2,r10,4
  80b508:	54800017 	ldw	r18,0(r10)
  80b50c:	0027883a 	mov	r19,zero
  80b510:	483def0e 	bge	r9,zero,80acd0 <__alt_data_end+0xff80acd0>
  80b514:	94c6b03a 	or	r3,r18,r19
  80b518:	d8802215 	stw	r2,136(sp)
  80b51c:	183d4e1e 	bne	r3,zero,80aa58 <__alt_data_end+0xff80aa58>
  80b520:	0039883a 	mov	fp,zero
  80b524:	0005883a 	mov	r2,zero
  80b528:	003e0606 	br	80ad44 <__alt_data_end+0xff80ad44>
  80b52c:	d9402117 	ldw	r5,132(sp)
  80b530:	d9002017 	ldw	r4,128(sp)
  80b534:	d9801a04 	addi	r6,sp,104
  80b538:	da402c15 	stw	r9,176(sp)
  80b53c:	db802a15 	stw	r14,168(sp)
  80b540:	080a2640 	call	80a264 <__sprint_r.part.0>
  80b544:	da402c17 	ldw	r9,176(sp)
  80b548:	db802a17 	ldw	r14,168(sp)
  80b54c:	103ede1e 	bne	r2,zero,80b0c8 <__alt_data_end+0xff80b0c8>
  80b550:	d9401b17 	ldw	r5,108(sp)
  80b554:	d8801c17 	ldw	r2,112(sp)
  80b558:	d811883a 	mov	r8,sp
  80b55c:	29000044 	addi	r4,r5,1
  80b560:	003e7406 	br	80af34 <__alt_data_end+0xff80af34>
  80b564:	00bfffc4 	movi	r2,-1
  80b568:	003c5806 	br	80a6cc <__alt_data_end+0xff80a6cc>
  80b56c:	d811883a 	mov	r8,sp
  80b570:	003ee806 	br	80b114 <__alt_data_end+0xff80b114>
  80b574:	000b883a 	mov	r5,zero
  80b578:	01000044 	movi	r4,1
  80b57c:	d811883a 	mov	r8,sp
  80b580:	003e7c06 	br	80af74 <__alt_data_end+0xff80af74>
  80b584:	50800104 	addi	r2,r10,4
  80b588:	5480000b 	ldhu	r18,0(r10)
  80b58c:	0027883a 	mov	r19,zero
  80b590:	483dcf0e 	bge	r9,zero,80acd0 <__alt_data_end+0xff80acd0>
  80b594:	003fdf06 	br	80b514 <__alt_data_end+0xff80b514>
  80b598:	54800017 	ldw	r18,0(r10)
  80b59c:	52800104 	addi	r10,r10,4
  80b5a0:	0027883a 	mov	r19,zero
  80b5a4:	da802215 	stw	r10,136(sp)
  80b5a8:	003d5006 	br	80aaec <__alt_data_end+0xff80aaec>
  80b5ac:	50800104 	addi	r2,r10,4
  80b5b0:	5480000b 	ldhu	r18,0(r10)
  80b5b4:	0027883a 	mov	r19,zero
  80b5b8:	483f7d0e 	bge	r9,zero,80b3b0 <__alt_data_end+0xff80b3b0>
  80b5bc:	003ddc06 	br	80ad30 <__alt_data_end+0xff80ad30>
  80b5c0:	d8c02215 	stw	r3,136(sp)
  80b5c4:	0039883a 	mov	fp,zero
  80b5c8:	003ddb06 	br	80ad38 <__alt_data_end+0xff80ad38>
  80b5cc:	02802074 	movhi	r10,129
  80b5d0:	5283d804 	addi	r10,r10,3936
  80b5d4:	da802415 	stw	r10,144(sp)
  80b5d8:	003e8306 	br	80afe8 <__alt_data_end+0xff80afe8>
  80b5dc:	d8801c17 	ldw	r2,112(sp)
  80b5e0:	dd002117 	ldw	r20,132(sp)
  80b5e4:	103eb926 	beq	r2,zero,80b0cc <__alt_data_end+0xff80b0cc>
  80b5e8:	d9002017 	ldw	r4,128(sp)
  80b5ec:	d9801a04 	addi	r6,sp,104
  80b5f0:	a00b883a 	mov	r5,r20
  80b5f4:	080a2640 	call	80a264 <__sprint_r.part.0>
  80b5f8:	003eb406 	br	80b0cc <__alt_data_end+0xff80b0cc>
  80b5fc:	80c00043 	ldbu	r3,1(r16)
  80b600:	a5000814 	ori	r20,r20,32
  80b604:	84000044 	addi	r16,r16,1
  80b608:	18c03fcc 	andi	r3,r3,255
  80b60c:	18c0201c 	xori	r3,r3,128
  80b610:	18ffe004 	addi	r3,r3,-128
  80b614:	003bb706 	br	80a4f4 <__alt_data_end+0xff80a4f4>
  80b618:	a809883a 	mov	r4,r21
  80b61c:	d8c02a15 	stw	r3,168(sp)
  80b620:	da002b15 	stw	r8,172(sp)
  80b624:	08021140 	call	802114 <strlen>
  80b628:	d8c02a17 	ldw	r3,168(sp)
  80b62c:	1027883a 	mov	r19,r2
  80b630:	df001d83 	ldbu	fp,118(sp)
  80b634:	d8c02215 	stw	r3,136(sp)
  80b638:	0013883a 	mov	r9,zero
  80b63c:	da002b17 	ldw	r8,172(sp)
  80b640:	003c4d06 	br	80a778 <__alt_data_end+0xff80a778>
  80b644:	d9402117 	ldw	r5,132(sp)
  80b648:	d9002017 	ldw	r4,128(sp)
  80b64c:	d9801a04 	addi	r6,sp,104
  80b650:	da402c15 	stw	r9,176(sp)
  80b654:	080a2640 	call	80a264 <__sprint_r.part.0>
  80b658:	da402c17 	ldw	r9,176(sp)
  80b65c:	103e9a1e 	bne	r2,zero,80b0c8 <__alt_data_end+0xff80b0c8>
  80b660:	d9401b17 	ldw	r5,108(sp)
  80b664:	d8801c17 	ldw	r2,112(sp)
  80b668:	d811883a 	mov	r8,sp
  80b66c:	29000044 	addi	r4,r5,1
  80b670:	003e4206 	br	80af7c <__alt_data_end+0xff80af7c>
  80b674:	d9401b17 	ldw	r5,108(sp)
  80b678:	01002074 	movhi	r4,129
  80b67c:	2103dc04 	addi	r4,r4,3952
  80b680:	d9002415 	stw	r4,144(sp)
  80b684:	29400044 	addi	r5,r5,1
  80b688:	003c6d06 	br	80a840 <__alt_data_end+0xff80a840>
  80b68c:	0039883a 	mov	fp,zero
  80b690:	00800084 	movi	r2,2
  80b694:	10803fcc 	andi	r2,r2,255
  80b698:	01000044 	movi	r4,1
  80b69c:	11001e26 	beq	r2,r4,80b718 <___vfiprintf_internal_r+0x13a0>
  80b6a0:	01000084 	movi	r4,2
  80b6a4:	11001e1e 	bne	r2,r4,80b720 <___vfiprintf_internal_r+0x13a8>
  80b6a8:	1829883a 	mov	r20,r3
  80b6ac:	003eea06 	br	80b258 <__alt_data_end+0xff80b258>
  80b6b0:	a007883a 	mov	r3,r20
  80b6b4:	00800044 	movi	r2,1
  80b6b8:	003ff606 	br	80b694 <__alt_data_end+0xff80b694>
  80b6bc:	00800184 	movi	r2,6
  80b6c0:	1240012e 	bgeu	r2,r9,80b6c8 <___vfiprintf_internal_r+0x1350>
  80b6c4:	1013883a 	mov	r9,r2
  80b6c8:	4827883a 	mov	r19,r9
  80b6cc:	4825883a 	mov	r18,r9
  80b6d0:	48001516 	blt	r9,zero,80b728 <___vfiprintf_internal_r+0x13b0>
  80b6d4:	05402074 	movhi	r21,129
  80b6d8:	d8c02215 	stw	r3,136(sp)
  80b6dc:	ad437d04 	addi	r21,r21,3572
  80b6e0:	003d1406 	br	80ab34 <__alt_data_end+0xff80ab34>
  80b6e4:	02802074 	movhi	r10,129
  80b6e8:	5283d804 	addi	r10,r10,3936
  80b6ec:	da802415 	stw	r10,144(sp)
  80b6f0:	200d883a 	mov	r6,r4
  80b6f4:	003c9106 	br	80a93c <__alt_data_end+0xff80a93c>
  80b6f8:	5021883a 	mov	r16,r10
  80b6fc:	0013883a 	mov	r9,zero
  80b700:	003b7d06 	br	80a4f8 <__alt_data_end+0xff80a4f8>
  80b704:	4827883a 	mov	r19,r9
  80b708:	df001d83 	ldbu	fp,118(sp)
  80b70c:	d8c02215 	stw	r3,136(sp)
  80b710:	0013883a 	mov	r9,zero
  80b714:	003c1806 	br	80a778 <__alt_data_end+0xff80a778>
  80b718:	1829883a 	mov	r20,r3
  80b71c:	003d1806 	br	80ab80 <__alt_data_end+0xff80ab80>
  80b720:	1829883a 	mov	r20,r3
  80b724:	003ccd06 	br	80aa5c <__alt_data_end+0xff80aa5c>
  80b728:	0025883a 	mov	r18,zero
  80b72c:	003fe906 	br	80b6d4 <__alt_data_end+0xff80b6d4>
  80b730:	d8802217 	ldw	r2,136(sp)
  80b734:	80c00043 	ldbu	r3,1(r16)
  80b738:	5021883a 	mov	r16,r10
  80b73c:	12400017 	ldw	r9,0(r2)
  80b740:	10800104 	addi	r2,r2,4
  80b744:	d8802215 	stw	r2,136(sp)
  80b748:	483faf0e 	bge	r9,zero,80b608 <__alt_data_end+0xff80b608>
  80b74c:	18c03fcc 	andi	r3,r3,255
  80b750:	18c0201c 	xori	r3,r3,128
  80b754:	027fffc4 	movi	r9,-1
  80b758:	18ffe004 	addi	r3,r3,-128
  80b75c:	003b6506 	br	80a4f4 <__alt_data_end+0xff80a4f4>
  80b760:	d9c01d85 	stb	r7,118(sp)
  80b764:	003ca006 	br	80a9e8 <__alt_data_end+0xff80a9e8>
  80b768:	d9c01d85 	stb	r7,118(sp)
  80b76c:	003cad06 	br	80aa24 <__alt_data_end+0xff80aa24>
  80b770:	d9c01d85 	stb	r7,118(sp)
  80b774:	003d7d06 	br	80ad6c <__alt_data_end+0xff80ad6c>
  80b778:	d9c01d85 	stb	r7,118(sp)
  80b77c:	003d5f06 	br	80acfc <__alt_data_end+0xff80acfc>
  80b780:	a080004c 	andi	r2,r20,1
  80b784:	0039883a 	mov	fp,zero
  80b788:	10000526 	beq	r2,zero,80b7a0 <___vfiprintf_internal_r+0x1428>
  80b78c:	00800c04 	movi	r2,48
  80b790:	d88019c5 	stb	r2,103(sp)
  80b794:	dcc02717 	ldw	r19,156(sp)
  80b798:	dd4019c4 	addi	r21,sp,103
  80b79c:	003bf606 	br	80a778 <__alt_data_end+0xff80a778>
  80b7a0:	0027883a 	mov	r19,zero
  80b7a4:	dd401a04 	addi	r21,sp,104
  80b7a8:	003bf306 	br	80a778 <__alt_data_end+0xff80a778>
  80b7ac:	d9c01d85 	stb	r7,118(sp)
  80b7b0:	003dc806 	br	80aed4 <__alt_data_end+0xff80aed4>
  80b7b4:	d9c01d85 	stb	r7,118(sp)
  80b7b8:	003d3a06 	br	80aca4 <__alt_data_end+0xff80aca4>
  80b7bc:	d9c01d85 	stb	r7,118(sp)
  80b7c0:	003d2a06 	br	80ac6c <__alt_data_end+0xff80ac6c>
  80b7c4:	d9c01d85 	stb	r7,118(sp)
  80b7c8:	003cde06 	br	80ab44 <__alt_data_end+0xff80ab44>
  80b7cc:	d9c01d85 	stb	r7,118(sp)
  80b7d0:	003cbc06 	br	80aac4 <__alt_data_end+0xff80aac4>

0080b7d4 <__vfiprintf_internal>:
  80b7d4:	00802074 	movhi	r2,129
  80b7d8:	109a8904 	addi	r2,r2,27172
  80b7dc:	300f883a 	mov	r7,r6
  80b7e0:	280d883a 	mov	r6,r5
  80b7e4:	200b883a 	mov	r5,r4
  80b7e8:	11000017 	ldw	r4,0(r2)
  80b7ec:	080a3781 	jmpi	80a378 <___vfiprintf_internal_r>

0080b7f0 <__sbprintf>:
  80b7f0:	2880030b 	ldhu	r2,12(r5)
  80b7f4:	2ac01917 	ldw	r11,100(r5)
  80b7f8:	2a80038b 	ldhu	r10,14(r5)
  80b7fc:	2a400717 	ldw	r9,28(r5)
  80b800:	2a000917 	ldw	r8,36(r5)
  80b804:	defee204 	addi	sp,sp,-1144
  80b808:	00c10004 	movi	r3,1024
  80b80c:	dc011a15 	stw	r16,1128(sp)
  80b810:	10bfff4c 	andi	r2,r2,65533
  80b814:	2821883a 	mov	r16,r5
  80b818:	d8cb883a 	add	r5,sp,r3
  80b81c:	dc811c15 	stw	r18,1136(sp)
  80b820:	dc411b15 	stw	r17,1132(sp)
  80b824:	dfc11d15 	stw	ra,1140(sp)
  80b828:	2025883a 	mov	r18,r4
  80b82c:	d881030d 	sth	r2,1036(sp)
  80b830:	dac11915 	stw	r11,1124(sp)
  80b834:	da81038d 	sth	r10,1038(sp)
  80b838:	da410715 	stw	r9,1052(sp)
  80b83c:	da010915 	stw	r8,1060(sp)
  80b840:	dec10015 	stw	sp,1024(sp)
  80b844:	dec10415 	stw	sp,1040(sp)
  80b848:	d8c10215 	stw	r3,1032(sp)
  80b84c:	d8c10515 	stw	r3,1044(sp)
  80b850:	d8010615 	stw	zero,1048(sp)
  80b854:	080a3780 	call	80a378 <___vfiprintf_internal_r>
  80b858:	1023883a 	mov	r17,r2
  80b85c:	10000416 	blt	r2,zero,80b870 <__sbprintf+0x80>
  80b860:	d9410004 	addi	r5,sp,1024
  80b864:	9009883a 	mov	r4,r18
  80b868:	0806b9c0 	call	806b9c <_fflush_r>
  80b86c:	10000d1e 	bne	r2,zero,80b8a4 <__sbprintf+0xb4>
  80b870:	d881030b 	ldhu	r2,1036(sp)
  80b874:	1080100c 	andi	r2,r2,64
  80b878:	10000326 	beq	r2,zero,80b888 <__sbprintf+0x98>
  80b87c:	8080030b 	ldhu	r2,12(r16)
  80b880:	10801014 	ori	r2,r2,64
  80b884:	8080030d 	sth	r2,12(r16)
  80b888:	8805883a 	mov	r2,r17
  80b88c:	dfc11d17 	ldw	ra,1140(sp)
  80b890:	dc811c17 	ldw	r18,1136(sp)
  80b894:	dc411b17 	ldw	r17,1132(sp)
  80b898:	dc011a17 	ldw	r16,1128(sp)
  80b89c:	dec11e04 	addi	sp,sp,1144
  80b8a0:	f800283a 	ret
  80b8a4:	047fffc4 	movi	r17,-1
  80b8a8:	003ff106 	br	80b870 <__alt_data_end+0xff80b870>

0080b8ac <_write_r>:
  80b8ac:	defffd04 	addi	sp,sp,-12
  80b8b0:	2805883a 	mov	r2,r5
  80b8b4:	dc000015 	stw	r16,0(sp)
  80b8b8:	040020b4 	movhi	r16,130
  80b8bc:	dc400115 	stw	r17,4(sp)
  80b8c0:	300b883a 	mov	r5,r6
  80b8c4:	84314b04 	addi	r16,r16,-15060
  80b8c8:	2023883a 	mov	r17,r4
  80b8cc:	380d883a 	mov	r6,r7
  80b8d0:	1009883a 	mov	r4,r2
  80b8d4:	dfc00215 	stw	ra,8(sp)
  80b8d8:	80000015 	stw	zero,0(r16)
  80b8dc:	080ed180 	call	80ed18 <write>
  80b8e0:	00ffffc4 	movi	r3,-1
  80b8e4:	10c00526 	beq	r2,r3,80b8fc <_write_r+0x50>
  80b8e8:	dfc00217 	ldw	ra,8(sp)
  80b8ec:	dc400117 	ldw	r17,4(sp)
  80b8f0:	dc000017 	ldw	r16,0(sp)
  80b8f4:	dec00304 	addi	sp,sp,12
  80b8f8:	f800283a 	ret
  80b8fc:	80c00017 	ldw	r3,0(r16)
  80b900:	183ff926 	beq	r3,zero,80b8e8 <__alt_data_end+0xff80b8e8>
  80b904:	88c00015 	stw	r3,0(r17)
  80b908:	003ff706 	br	80b8e8 <__alt_data_end+0xff80b8e8>

0080b90c <_close_r>:
  80b90c:	defffd04 	addi	sp,sp,-12
  80b910:	dc000015 	stw	r16,0(sp)
  80b914:	040020b4 	movhi	r16,130
  80b918:	dc400115 	stw	r17,4(sp)
  80b91c:	84314b04 	addi	r16,r16,-15060
  80b920:	2023883a 	mov	r17,r4
  80b924:	2809883a 	mov	r4,r5
  80b928:	dfc00215 	stw	ra,8(sp)
  80b92c:	80000015 	stw	zero,0(r16)
  80b930:	080e4180 	call	80e418 <close>
  80b934:	00ffffc4 	movi	r3,-1
  80b938:	10c00526 	beq	r2,r3,80b950 <_close_r+0x44>
  80b93c:	dfc00217 	ldw	ra,8(sp)
  80b940:	dc400117 	ldw	r17,4(sp)
  80b944:	dc000017 	ldw	r16,0(sp)
  80b948:	dec00304 	addi	sp,sp,12
  80b94c:	f800283a 	ret
  80b950:	80c00017 	ldw	r3,0(r16)
  80b954:	183ff926 	beq	r3,zero,80b93c <__alt_data_end+0xff80b93c>
  80b958:	88c00015 	stw	r3,0(r17)
  80b95c:	003ff706 	br	80b93c <__alt_data_end+0xff80b93c>

0080b960 <_calloc_r>:
  80b960:	298b383a 	mul	r5,r5,r6
  80b964:	defffe04 	addi	sp,sp,-8
  80b968:	dfc00115 	stw	ra,4(sp)
  80b96c:	dc000015 	stw	r16,0(sp)
  80b970:	0807cd80 	call	807cd8 <_malloc_r>
  80b974:	10002926 	beq	r2,zero,80ba1c <_calloc_r+0xbc>
  80b978:	11bfff17 	ldw	r6,-4(r2)
  80b97c:	1021883a 	mov	r16,r2
  80b980:	00bfff04 	movi	r2,-4
  80b984:	308c703a 	and	r6,r6,r2
  80b988:	00c00904 	movi	r3,36
  80b98c:	308d883a 	add	r6,r6,r2
  80b990:	19801636 	bltu	r3,r6,80b9ec <_calloc_r+0x8c>
  80b994:	008004c4 	movi	r2,19
  80b998:	11800b2e 	bgeu	r2,r6,80b9c8 <_calloc_r+0x68>
  80b99c:	80000015 	stw	zero,0(r16)
  80b9a0:	80000115 	stw	zero,4(r16)
  80b9a4:	008006c4 	movi	r2,27
  80b9a8:	11801a2e 	bgeu	r2,r6,80ba14 <_calloc_r+0xb4>
  80b9ac:	80000215 	stw	zero,8(r16)
  80b9b0:	80000315 	stw	zero,12(r16)
  80b9b4:	30c0151e 	bne	r6,r3,80ba0c <_calloc_r+0xac>
  80b9b8:	80000415 	stw	zero,16(r16)
  80b9bc:	80800604 	addi	r2,r16,24
  80b9c0:	80000515 	stw	zero,20(r16)
  80b9c4:	00000106 	br	80b9cc <_calloc_r+0x6c>
  80b9c8:	8005883a 	mov	r2,r16
  80b9cc:	10000015 	stw	zero,0(r2)
  80b9d0:	10000115 	stw	zero,4(r2)
  80b9d4:	10000215 	stw	zero,8(r2)
  80b9d8:	8005883a 	mov	r2,r16
  80b9dc:	dfc00117 	ldw	ra,4(sp)
  80b9e0:	dc000017 	ldw	r16,0(sp)
  80b9e4:	dec00204 	addi	sp,sp,8
  80b9e8:	f800283a 	ret
  80b9ec:	000b883a 	mov	r5,zero
  80b9f0:	8009883a 	mov	r4,r16
  80b9f4:	080886c0 	call	80886c <memset>
  80b9f8:	8005883a 	mov	r2,r16
  80b9fc:	dfc00117 	ldw	ra,4(sp)
  80ba00:	dc000017 	ldw	r16,0(sp)
  80ba04:	dec00204 	addi	sp,sp,8
  80ba08:	f800283a 	ret
  80ba0c:	80800404 	addi	r2,r16,16
  80ba10:	003fee06 	br	80b9cc <__alt_data_end+0xff80b9cc>
  80ba14:	80800204 	addi	r2,r16,8
  80ba18:	003fec06 	br	80b9cc <__alt_data_end+0xff80b9cc>
  80ba1c:	0005883a 	mov	r2,zero
  80ba20:	003fee06 	br	80b9dc <__alt_data_end+0xff80b9dc>

0080ba24 <_fclose_r>:
  80ba24:	28003926 	beq	r5,zero,80bb0c <_fclose_r+0xe8>
  80ba28:	defffc04 	addi	sp,sp,-16
  80ba2c:	dc400115 	stw	r17,4(sp)
  80ba30:	dc000015 	stw	r16,0(sp)
  80ba34:	dfc00315 	stw	ra,12(sp)
  80ba38:	dc800215 	stw	r18,8(sp)
  80ba3c:	2023883a 	mov	r17,r4
  80ba40:	2821883a 	mov	r16,r5
  80ba44:	20000226 	beq	r4,zero,80ba50 <_fclose_r+0x2c>
  80ba48:	20800e17 	ldw	r2,56(r4)
  80ba4c:	10002726 	beq	r2,zero,80baec <_fclose_r+0xc8>
  80ba50:	8080030f 	ldh	r2,12(r16)
  80ba54:	1000071e 	bne	r2,zero,80ba74 <_fclose_r+0x50>
  80ba58:	0005883a 	mov	r2,zero
  80ba5c:	dfc00317 	ldw	ra,12(sp)
  80ba60:	dc800217 	ldw	r18,8(sp)
  80ba64:	dc400117 	ldw	r17,4(sp)
  80ba68:	dc000017 	ldw	r16,0(sp)
  80ba6c:	dec00404 	addi	sp,sp,16
  80ba70:	f800283a 	ret
  80ba74:	800b883a 	mov	r5,r16
  80ba78:	8809883a 	mov	r4,r17
  80ba7c:	08069800 	call	806980 <__sflush_r>
  80ba80:	1025883a 	mov	r18,r2
  80ba84:	80800b17 	ldw	r2,44(r16)
  80ba88:	10000426 	beq	r2,zero,80ba9c <_fclose_r+0x78>
  80ba8c:	81400717 	ldw	r5,28(r16)
  80ba90:	8809883a 	mov	r4,r17
  80ba94:	103ee83a 	callr	r2
  80ba98:	10001616 	blt	r2,zero,80baf4 <_fclose_r+0xd0>
  80ba9c:	8080030b 	ldhu	r2,12(r16)
  80baa0:	1080200c 	andi	r2,r2,128
  80baa4:	1000151e 	bne	r2,zero,80bafc <_fclose_r+0xd8>
  80baa8:	81400c17 	ldw	r5,48(r16)
  80baac:	28000526 	beq	r5,zero,80bac4 <_fclose_r+0xa0>
  80bab0:	80801004 	addi	r2,r16,64
  80bab4:	28800226 	beq	r5,r2,80bac0 <_fclose_r+0x9c>
  80bab8:	8809883a 	mov	r4,r17
  80babc:	08070ec0 	call	8070ec <_free_r>
  80bac0:	80000c15 	stw	zero,48(r16)
  80bac4:	81401117 	ldw	r5,68(r16)
  80bac8:	28000326 	beq	r5,zero,80bad8 <_fclose_r+0xb4>
  80bacc:	8809883a 	mov	r4,r17
  80bad0:	08070ec0 	call	8070ec <_free_r>
  80bad4:	80001115 	stw	zero,68(r16)
  80bad8:	0806f880 	call	806f88 <__sfp_lock_acquire>
  80badc:	8000030d 	sth	zero,12(r16)
  80bae0:	0806f8c0 	call	806f8c <__sfp_lock_release>
  80bae4:	9005883a 	mov	r2,r18
  80bae8:	003fdc06 	br	80ba5c <__alt_data_end+0xff80ba5c>
  80baec:	0806f780 	call	806f78 <__sinit>
  80baf0:	003fd706 	br	80ba50 <__alt_data_end+0xff80ba50>
  80baf4:	04bfffc4 	movi	r18,-1
  80baf8:	003fe806 	br	80ba9c <__alt_data_end+0xff80ba9c>
  80bafc:	81400417 	ldw	r5,16(r16)
  80bb00:	8809883a 	mov	r4,r17
  80bb04:	08070ec0 	call	8070ec <_free_r>
  80bb08:	003fe706 	br	80baa8 <__alt_data_end+0xff80baa8>
  80bb0c:	0005883a 	mov	r2,zero
  80bb10:	f800283a 	ret

0080bb14 <fclose>:
  80bb14:	00802074 	movhi	r2,129
  80bb18:	109a8904 	addi	r2,r2,27172
  80bb1c:	200b883a 	mov	r5,r4
  80bb20:	11000017 	ldw	r4,0(r2)
  80bb24:	080ba241 	jmpi	80ba24 <_fclose_r>

0080bb28 <__fputwc>:
  80bb28:	defff804 	addi	sp,sp,-32
  80bb2c:	dcc00415 	stw	r19,16(sp)
  80bb30:	dc800315 	stw	r18,12(sp)
  80bb34:	dc000115 	stw	r16,4(sp)
  80bb38:	dfc00715 	stw	ra,28(sp)
  80bb3c:	dd400615 	stw	r21,24(sp)
  80bb40:	dd000515 	stw	r20,20(sp)
  80bb44:	dc400215 	stw	r17,8(sp)
  80bb48:	2027883a 	mov	r19,r4
  80bb4c:	2825883a 	mov	r18,r5
  80bb50:	3021883a 	mov	r16,r6
  80bb54:	0807ac80 	call	807ac8 <__locale_mb_cur_max>
  80bb58:	00c00044 	movi	r3,1
  80bb5c:	10c03e26 	beq	r2,r3,80bc58 <__fputwc+0x130>
  80bb60:	81c01704 	addi	r7,r16,92
  80bb64:	900d883a 	mov	r6,r18
  80bb68:	d80b883a 	mov	r5,sp
  80bb6c:	9809883a 	mov	r4,r19
  80bb70:	080bff80 	call	80bff8 <_wcrtomb_r>
  80bb74:	1029883a 	mov	r20,r2
  80bb78:	00bfffc4 	movi	r2,-1
  80bb7c:	a0802026 	beq	r20,r2,80bc00 <__fputwc+0xd8>
  80bb80:	d9400003 	ldbu	r5,0(sp)
  80bb84:	a0001c26 	beq	r20,zero,80bbf8 <__fputwc+0xd0>
  80bb88:	0023883a 	mov	r17,zero
  80bb8c:	05400284 	movi	r21,10
  80bb90:	00000906 	br	80bbb8 <__fputwc+0x90>
  80bb94:	80800017 	ldw	r2,0(r16)
  80bb98:	11400005 	stb	r5,0(r2)
  80bb9c:	80c00017 	ldw	r3,0(r16)
  80bba0:	18c00044 	addi	r3,r3,1
  80bba4:	80c00015 	stw	r3,0(r16)
  80bba8:	8c400044 	addi	r17,r17,1
  80bbac:	dc45883a 	add	r2,sp,r17
  80bbb0:	8d00112e 	bgeu	r17,r20,80bbf8 <__fputwc+0xd0>
  80bbb4:	11400003 	ldbu	r5,0(r2)
  80bbb8:	80c00217 	ldw	r3,8(r16)
  80bbbc:	18ffffc4 	addi	r3,r3,-1
  80bbc0:	80c00215 	stw	r3,8(r16)
  80bbc4:	183ff30e 	bge	r3,zero,80bb94 <__alt_data_end+0xff80bb94>
  80bbc8:	80800617 	ldw	r2,24(r16)
  80bbcc:	18801916 	blt	r3,r2,80bc34 <__fputwc+0x10c>
  80bbd0:	80800017 	ldw	r2,0(r16)
  80bbd4:	11400005 	stb	r5,0(r2)
  80bbd8:	80800017 	ldw	r2,0(r16)
  80bbdc:	10c00003 	ldbu	r3,0(r2)
  80bbe0:	10800044 	addi	r2,r2,1
  80bbe4:	1d402326 	beq	r3,r21,80bc74 <__fputwc+0x14c>
  80bbe8:	80800015 	stw	r2,0(r16)
  80bbec:	8c400044 	addi	r17,r17,1
  80bbf0:	dc45883a 	add	r2,sp,r17
  80bbf4:	8d3fef36 	bltu	r17,r20,80bbb4 <__alt_data_end+0xff80bbb4>
  80bbf8:	9005883a 	mov	r2,r18
  80bbfc:	00000406 	br	80bc10 <__fputwc+0xe8>
  80bc00:	80c0030b 	ldhu	r3,12(r16)
  80bc04:	a005883a 	mov	r2,r20
  80bc08:	18c01014 	ori	r3,r3,64
  80bc0c:	80c0030d 	sth	r3,12(r16)
  80bc10:	dfc00717 	ldw	ra,28(sp)
  80bc14:	dd400617 	ldw	r21,24(sp)
  80bc18:	dd000517 	ldw	r20,20(sp)
  80bc1c:	dcc00417 	ldw	r19,16(sp)
  80bc20:	dc800317 	ldw	r18,12(sp)
  80bc24:	dc400217 	ldw	r17,8(sp)
  80bc28:	dc000117 	ldw	r16,4(sp)
  80bc2c:	dec00804 	addi	sp,sp,32
  80bc30:	f800283a 	ret
  80bc34:	800d883a 	mov	r6,r16
  80bc38:	29403fcc 	andi	r5,r5,255
  80bc3c:	9809883a 	mov	r4,r19
  80bc40:	080bea00 	call	80bea0 <__swbuf_r>
  80bc44:	10bfffe0 	cmpeqi	r2,r2,-1
  80bc48:	10803fcc 	andi	r2,r2,255
  80bc4c:	103fd626 	beq	r2,zero,80bba8 <__alt_data_end+0xff80bba8>
  80bc50:	00bfffc4 	movi	r2,-1
  80bc54:	003fee06 	br	80bc10 <__alt_data_end+0xff80bc10>
  80bc58:	90ffffc4 	addi	r3,r18,-1
  80bc5c:	01003f84 	movi	r4,254
  80bc60:	20ffbf36 	bltu	r4,r3,80bb60 <__alt_data_end+0xff80bb60>
  80bc64:	900b883a 	mov	r5,r18
  80bc68:	dc800005 	stb	r18,0(sp)
  80bc6c:	1029883a 	mov	r20,r2
  80bc70:	003fc506 	br	80bb88 <__alt_data_end+0xff80bb88>
  80bc74:	800d883a 	mov	r6,r16
  80bc78:	a80b883a 	mov	r5,r21
  80bc7c:	9809883a 	mov	r4,r19
  80bc80:	080bea00 	call	80bea0 <__swbuf_r>
  80bc84:	10bfffe0 	cmpeqi	r2,r2,-1
  80bc88:	003fef06 	br	80bc48 <__alt_data_end+0xff80bc48>

0080bc8c <_fputwc_r>:
  80bc8c:	3080030b 	ldhu	r2,12(r6)
  80bc90:	10c8000c 	andi	r3,r2,8192
  80bc94:	1800051e 	bne	r3,zero,80bcac <_fputwc_r+0x20>
  80bc98:	30c01917 	ldw	r3,100(r6)
  80bc9c:	10880014 	ori	r2,r2,8192
  80bca0:	3080030d 	sth	r2,12(r6)
  80bca4:	18880014 	ori	r2,r3,8192
  80bca8:	30801915 	stw	r2,100(r6)
  80bcac:	080bb281 	jmpi	80bb28 <__fputwc>

0080bcb0 <fputwc>:
  80bcb0:	00802074 	movhi	r2,129
  80bcb4:	defffc04 	addi	sp,sp,-16
  80bcb8:	109a8904 	addi	r2,r2,27172
  80bcbc:	dc000115 	stw	r16,4(sp)
  80bcc0:	14000017 	ldw	r16,0(r2)
  80bcc4:	dc400215 	stw	r17,8(sp)
  80bcc8:	dfc00315 	stw	ra,12(sp)
  80bccc:	2023883a 	mov	r17,r4
  80bcd0:	80000226 	beq	r16,zero,80bcdc <fputwc+0x2c>
  80bcd4:	80800e17 	ldw	r2,56(r16)
  80bcd8:	10001026 	beq	r2,zero,80bd1c <fputwc+0x6c>
  80bcdc:	2880030b 	ldhu	r2,12(r5)
  80bce0:	10c8000c 	andi	r3,r2,8192
  80bce4:	1800051e 	bne	r3,zero,80bcfc <fputwc+0x4c>
  80bce8:	28c01917 	ldw	r3,100(r5)
  80bcec:	10880014 	ori	r2,r2,8192
  80bcf0:	2880030d 	sth	r2,12(r5)
  80bcf4:	18880014 	ori	r2,r3,8192
  80bcf8:	28801915 	stw	r2,100(r5)
  80bcfc:	280d883a 	mov	r6,r5
  80bd00:	8009883a 	mov	r4,r16
  80bd04:	880b883a 	mov	r5,r17
  80bd08:	dfc00317 	ldw	ra,12(sp)
  80bd0c:	dc400217 	ldw	r17,8(sp)
  80bd10:	dc000117 	ldw	r16,4(sp)
  80bd14:	dec00404 	addi	sp,sp,16
  80bd18:	080bb281 	jmpi	80bb28 <__fputwc>
  80bd1c:	8009883a 	mov	r4,r16
  80bd20:	d9400015 	stw	r5,0(sp)
  80bd24:	0806f780 	call	806f78 <__sinit>
  80bd28:	d9400017 	ldw	r5,0(sp)
  80bd2c:	003feb06 	br	80bcdc <__alt_data_end+0xff80bcdc>

0080bd30 <_fstat_r>:
  80bd30:	defffd04 	addi	sp,sp,-12
  80bd34:	2805883a 	mov	r2,r5
  80bd38:	dc000015 	stw	r16,0(sp)
  80bd3c:	040020b4 	movhi	r16,130
  80bd40:	dc400115 	stw	r17,4(sp)
  80bd44:	84314b04 	addi	r16,r16,-15060
  80bd48:	2023883a 	mov	r17,r4
  80bd4c:	300b883a 	mov	r5,r6
  80bd50:	1009883a 	mov	r4,r2
  80bd54:	dfc00215 	stw	ra,8(sp)
  80bd58:	80000015 	stw	zero,0(r16)
  80bd5c:	080e5500 	call	80e550 <fstat>
  80bd60:	00ffffc4 	movi	r3,-1
  80bd64:	10c00526 	beq	r2,r3,80bd7c <_fstat_r+0x4c>
  80bd68:	dfc00217 	ldw	ra,8(sp)
  80bd6c:	dc400117 	ldw	r17,4(sp)
  80bd70:	dc000017 	ldw	r16,0(sp)
  80bd74:	dec00304 	addi	sp,sp,12
  80bd78:	f800283a 	ret
  80bd7c:	80c00017 	ldw	r3,0(r16)
  80bd80:	183ff926 	beq	r3,zero,80bd68 <__alt_data_end+0xff80bd68>
  80bd84:	88c00015 	stw	r3,0(r17)
  80bd88:	003ff706 	br	80bd68 <__alt_data_end+0xff80bd68>

0080bd8c <_isatty_r>:
  80bd8c:	defffd04 	addi	sp,sp,-12
  80bd90:	dc000015 	stw	r16,0(sp)
  80bd94:	040020b4 	movhi	r16,130
  80bd98:	dc400115 	stw	r17,4(sp)
  80bd9c:	84314b04 	addi	r16,r16,-15060
  80bda0:	2023883a 	mov	r17,r4
  80bda4:	2809883a 	mov	r4,r5
  80bda8:	dfc00215 	stw	ra,8(sp)
  80bdac:	80000015 	stw	zero,0(r16)
  80bdb0:	080e63c0 	call	80e63c <isatty>
  80bdb4:	00ffffc4 	movi	r3,-1
  80bdb8:	10c00526 	beq	r2,r3,80bdd0 <_isatty_r+0x44>
  80bdbc:	dfc00217 	ldw	ra,8(sp)
  80bdc0:	dc400117 	ldw	r17,4(sp)
  80bdc4:	dc000017 	ldw	r16,0(sp)
  80bdc8:	dec00304 	addi	sp,sp,12
  80bdcc:	f800283a 	ret
  80bdd0:	80c00017 	ldw	r3,0(r16)
  80bdd4:	183ff926 	beq	r3,zero,80bdbc <__alt_data_end+0xff80bdbc>
  80bdd8:	88c00015 	stw	r3,0(r17)
  80bddc:	003ff706 	br	80bdbc <__alt_data_end+0xff80bdbc>

0080bde0 <_lseek_r>:
  80bde0:	defffd04 	addi	sp,sp,-12
  80bde4:	2805883a 	mov	r2,r5
  80bde8:	dc000015 	stw	r16,0(sp)
  80bdec:	040020b4 	movhi	r16,130
  80bdf0:	dc400115 	stw	r17,4(sp)
  80bdf4:	300b883a 	mov	r5,r6
  80bdf8:	84314b04 	addi	r16,r16,-15060
  80bdfc:	2023883a 	mov	r17,r4
  80be00:	380d883a 	mov	r6,r7
  80be04:	1009883a 	mov	r4,r2
  80be08:	dfc00215 	stw	ra,8(sp)
  80be0c:	80000015 	stw	zero,0(r16)
  80be10:	080e8080 	call	80e808 <lseek>
  80be14:	00ffffc4 	movi	r3,-1
  80be18:	10c00526 	beq	r2,r3,80be30 <_lseek_r+0x50>
  80be1c:	dfc00217 	ldw	ra,8(sp)
  80be20:	dc400117 	ldw	r17,4(sp)
  80be24:	dc000017 	ldw	r16,0(sp)
  80be28:	dec00304 	addi	sp,sp,12
  80be2c:	f800283a 	ret
  80be30:	80c00017 	ldw	r3,0(r16)
  80be34:	183ff926 	beq	r3,zero,80be1c <__alt_data_end+0xff80be1c>
  80be38:	88c00015 	stw	r3,0(r17)
  80be3c:	003ff706 	br	80be1c <__alt_data_end+0xff80be1c>

0080be40 <_read_r>:
  80be40:	defffd04 	addi	sp,sp,-12
  80be44:	2805883a 	mov	r2,r5
  80be48:	dc000015 	stw	r16,0(sp)
  80be4c:	040020b4 	movhi	r16,130
  80be50:	dc400115 	stw	r17,4(sp)
  80be54:	300b883a 	mov	r5,r6
  80be58:	84314b04 	addi	r16,r16,-15060
  80be5c:	2023883a 	mov	r17,r4
  80be60:	380d883a 	mov	r6,r7
  80be64:	1009883a 	mov	r4,r2
  80be68:	dfc00215 	stw	ra,8(sp)
  80be6c:	80000015 	stw	zero,0(r16)
  80be70:	080ea180 	call	80ea18 <read>
  80be74:	00ffffc4 	movi	r3,-1
  80be78:	10c00526 	beq	r2,r3,80be90 <_read_r+0x50>
  80be7c:	dfc00217 	ldw	ra,8(sp)
  80be80:	dc400117 	ldw	r17,4(sp)
  80be84:	dc000017 	ldw	r16,0(sp)
  80be88:	dec00304 	addi	sp,sp,12
  80be8c:	f800283a 	ret
  80be90:	80c00017 	ldw	r3,0(r16)
  80be94:	183ff926 	beq	r3,zero,80be7c <__alt_data_end+0xff80be7c>
  80be98:	88c00015 	stw	r3,0(r17)
  80be9c:	003ff706 	br	80be7c <__alt_data_end+0xff80be7c>

0080bea0 <__swbuf_r>:
  80bea0:	defffb04 	addi	sp,sp,-20
  80bea4:	dcc00315 	stw	r19,12(sp)
  80bea8:	dc800215 	stw	r18,8(sp)
  80beac:	dc000015 	stw	r16,0(sp)
  80beb0:	dfc00415 	stw	ra,16(sp)
  80beb4:	dc400115 	stw	r17,4(sp)
  80beb8:	2025883a 	mov	r18,r4
  80bebc:	2827883a 	mov	r19,r5
  80bec0:	3021883a 	mov	r16,r6
  80bec4:	20000226 	beq	r4,zero,80bed0 <__swbuf_r+0x30>
  80bec8:	20800e17 	ldw	r2,56(r4)
  80becc:	10004226 	beq	r2,zero,80bfd8 <__swbuf_r+0x138>
  80bed0:	80800617 	ldw	r2,24(r16)
  80bed4:	8100030b 	ldhu	r4,12(r16)
  80bed8:	80800215 	stw	r2,8(r16)
  80bedc:	2080020c 	andi	r2,r4,8
  80bee0:	10003626 	beq	r2,zero,80bfbc <__swbuf_r+0x11c>
  80bee4:	80c00417 	ldw	r3,16(r16)
  80bee8:	18003426 	beq	r3,zero,80bfbc <__swbuf_r+0x11c>
  80beec:	2088000c 	andi	r2,r4,8192
  80bef0:	9c403fcc 	andi	r17,r19,255
  80bef4:	10001a26 	beq	r2,zero,80bf60 <__swbuf_r+0xc0>
  80bef8:	80800017 	ldw	r2,0(r16)
  80befc:	81000517 	ldw	r4,20(r16)
  80bf00:	10c7c83a 	sub	r3,r2,r3
  80bf04:	1900200e 	bge	r3,r4,80bf88 <__swbuf_r+0xe8>
  80bf08:	18c00044 	addi	r3,r3,1
  80bf0c:	81000217 	ldw	r4,8(r16)
  80bf10:	11400044 	addi	r5,r2,1
  80bf14:	81400015 	stw	r5,0(r16)
  80bf18:	213fffc4 	addi	r4,r4,-1
  80bf1c:	81000215 	stw	r4,8(r16)
  80bf20:	14c00005 	stb	r19,0(r2)
  80bf24:	80800517 	ldw	r2,20(r16)
  80bf28:	10c01e26 	beq	r2,r3,80bfa4 <__swbuf_r+0x104>
  80bf2c:	8080030b 	ldhu	r2,12(r16)
  80bf30:	1080004c 	andi	r2,r2,1
  80bf34:	10000226 	beq	r2,zero,80bf40 <__swbuf_r+0xa0>
  80bf38:	00800284 	movi	r2,10
  80bf3c:	88801926 	beq	r17,r2,80bfa4 <__swbuf_r+0x104>
  80bf40:	8805883a 	mov	r2,r17
  80bf44:	dfc00417 	ldw	ra,16(sp)
  80bf48:	dcc00317 	ldw	r19,12(sp)
  80bf4c:	dc800217 	ldw	r18,8(sp)
  80bf50:	dc400117 	ldw	r17,4(sp)
  80bf54:	dc000017 	ldw	r16,0(sp)
  80bf58:	dec00504 	addi	sp,sp,20
  80bf5c:	f800283a 	ret
  80bf60:	81401917 	ldw	r5,100(r16)
  80bf64:	00b7ffc4 	movi	r2,-8193
  80bf68:	21080014 	ori	r4,r4,8192
  80bf6c:	2884703a 	and	r2,r5,r2
  80bf70:	80801915 	stw	r2,100(r16)
  80bf74:	80800017 	ldw	r2,0(r16)
  80bf78:	8100030d 	sth	r4,12(r16)
  80bf7c:	81000517 	ldw	r4,20(r16)
  80bf80:	10c7c83a 	sub	r3,r2,r3
  80bf84:	193fe016 	blt	r3,r4,80bf08 <__alt_data_end+0xff80bf08>
  80bf88:	800b883a 	mov	r5,r16
  80bf8c:	9009883a 	mov	r4,r18
  80bf90:	0806b9c0 	call	806b9c <_fflush_r>
  80bf94:	1000071e 	bne	r2,zero,80bfb4 <__swbuf_r+0x114>
  80bf98:	80800017 	ldw	r2,0(r16)
  80bf9c:	00c00044 	movi	r3,1
  80bfa0:	003fda06 	br	80bf0c <__alt_data_end+0xff80bf0c>
  80bfa4:	800b883a 	mov	r5,r16
  80bfa8:	9009883a 	mov	r4,r18
  80bfac:	0806b9c0 	call	806b9c <_fflush_r>
  80bfb0:	103fe326 	beq	r2,zero,80bf40 <__alt_data_end+0xff80bf40>
  80bfb4:	00bfffc4 	movi	r2,-1
  80bfb8:	003fe206 	br	80bf44 <__alt_data_end+0xff80bf44>
  80bfbc:	800b883a 	mov	r5,r16
  80bfc0:	9009883a 	mov	r4,r18
  80bfc4:	080447c0 	call	80447c <__swsetup_r>
  80bfc8:	103ffa1e 	bne	r2,zero,80bfb4 <__alt_data_end+0xff80bfb4>
  80bfcc:	8100030b 	ldhu	r4,12(r16)
  80bfd0:	80c00417 	ldw	r3,16(r16)
  80bfd4:	003fc506 	br	80beec <__alt_data_end+0xff80beec>
  80bfd8:	0806f780 	call	806f78 <__sinit>
  80bfdc:	003fbc06 	br	80bed0 <__alt_data_end+0xff80bed0>

0080bfe0 <__swbuf>:
  80bfe0:	00802074 	movhi	r2,129
  80bfe4:	109a8904 	addi	r2,r2,27172
  80bfe8:	280d883a 	mov	r6,r5
  80bfec:	200b883a 	mov	r5,r4
  80bff0:	11000017 	ldw	r4,0(r2)
  80bff4:	080bea01 	jmpi	80bea0 <__swbuf_r>

0080bff8 <_wcrtomb_r>:
  80bff8:	defff604 	addi	sp,sp,-40
  80bffc:	00802074 	movhi	r2,129
  80c000:	dc800815 	stw	r18,32(sp)
  80c004:	dc400715 	stw	r17,28(sp)
  80c008:	dc000615 	stw	r16,24(sp)
  80c00c:	109a8d04 	addi	r2,r2,27188
  80c010:	dfc00915 	stw	ra,36(sp)
  80c014:	2021883a 	mov	r16,r4
  80c018:	3823883a 	mov	r17,r7
  80c01c:	14800017 	ldw	r18,0(r2)
  80c020:	28001426 	beq	r5,zero,80c074 <_wcrtomb_r+0x7c>
  80c024:	d9400415 	stw	r5,16(sp)
  80c028:	d9800515 	stw	r6,20(sp)
  80c02c:	0807abc0 	call	807abc <__locale_charset>
  80c030:	d9800517 	ldw	r6,20(sp)
  80c034:	d9400417 	ldw	r5,16(sp)
  80c038:	100f883a 	mov	r7,r2
  80c03c:	dc400015 	stw	r17,0(sp)
  80c040:	8009883a 	mov	r4,r16
  80c044:	903ee83a 	callr	r18
  80c048:	00ffffc4 	movi	r3,-1
  80c04c:	10c0031e 	bne	r2,r3,80c05c <_wcrtomb_r+0x64>
  80c050:	88000015 	stw	zero,0(r17)
  80c054:	00c02284 	movi	r3,138
  80c058:	80c00015 	stw	r3,0(r16)
  80c05c:	dfc00917 	ldw	ra,36(sp)
  80c060:	dc800817 	ldw	r18,32(sp)
  80c064:	dc400717 	ldw	r17,28(sp)
  80c068:	dc000617 	ldw	r16,24(sp)
  80c06c:	dec00a04 	addi	sp,sp,40
  80c070:	f800283a 	ret
  80c074:	0807abc0 	call	807abc <__locale_charset>
  80c078:	100f883a 	mov	r7,r2
  80c07c:	dc400015 	stw	r17,0(sp)
  80c080:	000d883a 	mov	r6,zero
  80c084:	d9400104 	addi	r5,sp,4
  80c088:	8009883a 	mov	r4,r16
  80c08c:	903ee83a 	callr	r18
  80c090:	003fed06 	br	80c048 <__alt_data_end+0xff80c048>

0080c094 <wcrtomb>:
  80c094:	defff604 	addi	sp,sp,-40
  80c098:	00802074 	movhi	r2,129
  80c09c:	dc800615 	stw	r18,24(sp)
  80c0a0:	dc400515 	stw	r17,20(sp)
  80c0a4:	109a8904 	addi	r2,r2,27172
  80c0a8:	dfc00915 	stw	ra,36(sp)
  80c0ac:	dd000815 	stw	r20,32(sp)
  80c0b0:	dcc00715 	stw	r19,28(sp)
  80c0b4:	dc000415 	stw	r16,16(sp)
  80c0b8:	3025883a 	mov	r18,r6
  80c0bc:	14400017 	ldw	r17,0(r2)
  80c0c0:	20001926 	beq	r4,zero,80c128 <wcrtomb+0x94>
  80c0c4:	00802074 	movhi	r2,129
  80c0c8:	109a8d04 	addi	r2,r2,27188
  80c0cc:	15000017 	ldw	r20,0(r2)
  80c0d0:	2021883a 	mov	r16,r4
  80c0d4:	2827883a 	mov	r19,r5
  80c0d8:	0807abc0 	call	807abc <__locale_charset>
  80c0dc:	100f883a 	mov	r7,r2
  80c0e0:	dc800015 	stw	r18,0(sp)
  80c0e4:	980d883a 	mov	r6,r19
  80c0e8:	800b883a 	mov	r5,r16
  80c0ec:	8809883a 	mov	r4,r17
  80c0f0:	a03ee83a 	callr	r20
  80c0f4:	00ffffc4 	movi	r3,-1
  80c0f8:	10c0031e 	bne	r2,r3,80c108 <wcrtomb+0x74>
  80c0fc:	90000015 	stw	zero,0(r18)
  80c100:	00c02284 	movi	r3,138
  80c104:	88c00015 	stw	r3,0(r17)
  80c108:	dfc00917 	ldw	ra,36(sp)
  80c10c:	dd000817 	ldw	r20,32(sp)
  80c110:	dcc00717 	ldw	r19,28(sp)
  80c114:	dc800617 	ldw	r18,24(sp)
  80c118:	dc400517 	ldw	r17,20(sp)
  80c11c:	dc000417 	ldw	r16,16(sp)
  80c120:	dec00a04 	addi	sp,sp,40
  80c124:	f800283a 	ret
  80c128:	00802074 	movhi	r2,129
  80c12c:	109a8d04 	addi	r2,r2,27188
  80c130:	14000017 	ldw	r16,0(r2)
  80c134:	0807abc0 	call	807abc <__locale_charset>
  80c138:	100f883a 	mov	r7,r2
  80c13c:	dc800015 	stw	r18,0(sp)
  80c140:	000d883a 	mov	r6,zero
  80c144:	d9400104 	addi	r5,sp,4
  80c148:	8809883a 	mov	r4,r17
  80c14c:	803ee83a 	callr	r16
  80c150:	003fe806 	br	80c0f4 <__alt_data_end+0xff80c0f4>

0080c154 <__ascii_wctomb>:
  80c154:	28000526 	beq	r5,zero,80c16c <__ascii_wctomb+0x18>
  80c158:	00803fc4 	movi	r2,255
  80c15c:	11800536 	bltu	r2,r6,80c174 <__ascii_wctomb+0x20>
  80c160:	29800005 	stb	r6,0(r5)
  80c164:	00800044 	movi	r2,1
  80c168:	f800283a 	ret
  80c16c:	0005883a 	mov	r2,zero
  80c170:	f800283a 	ret
  80c174:	00802284 	movi	r2,138
  80c178:	20800015 	stw	r2,0(r4)
  80c17c:	00bfffc4 	movi	r2,-1
  80c180:	f800283a 	ret

0080c184 <_wctomb_r>:
  80c184:	00802074 	movhi	r2,129
  80c188:	defff904 	addi	sp,sp,-28
  80c18c:	109a8d04 	addi	r2,r2,27188
  80c190:	dfc00615 	stw	ra,24(sp)
  80c194:	dc400515 	stw	r17,20(sp)
  80c198:	dc000415 	stw	r16,16(sp)
  80c19c:	3823883a 	mov	r17,r7
  80c1a0:	14000017 	ldw	r16,0(r2)
  80c1a4:	d9000115 	stw	r4,4(sp)
  80c1a8:	d9400215 	stw	r5,8(sp)
  80c1ac:	d9800315 	stw	r6,12(sp)
  80c1b0:	0807abc0 	call	807abc <__locale_charset>
  80c1b4:	d9800317 	ldw	r6,12(sp)
  80c1b8:	d9400217 	ldw	r5,8(sp)
  80c1bc:	d9000117 	ldw	r4,4(sp)
  80c1c0:	100f883a 	mov	r7,r2
  80c1c4:	dc400015 	stw	r17,0(sp)
  80c1c8:	803ee83a 	callr	r16
  80c1cc:	dfc00617 	ldw	ra,24(sp)
  80c1d0:	dc400517 	ldw	r17,20(sp)
  80c1d4:	dc000417 	ldw	r16,16(sp)
  80c1d8:	dec00704 	addi	sp,sp,28
  80c1dc:	f800283a 	ret

0080c1e0 <__udivdi3>:
  80c1e0:	defff504 	addi	sp,sp,-44
  80c1e4:	dcc00415 	stw	r19,16(sp)
  80c1e8:	dc000115 	stw	r16,4(sp)
  80c1ec:	dfc00a15 	stw	ra,40(sp)
  80c1f0:	df000915 	stw	fp,36(sp)
  80c1f4:	ddc00815 	stw	r23,32(sp)
  80c1f8:	dd800715 	stw	r22,28(sp)
  80c1fc:	dd400615 	stw	r21,24(sp)
  80c200:	dd000515 	stw	r20,20(sp)
  80c204:	dc800315 	stw	r18,12(sp)
  80c208:	dc400215 	stw	r17,8(sp)
  80c20c:	2027883a 	mov	r19,r4
  80c210:	2821883a 	mov	r16,r5
  80c214:	3800411e 	bne	r7,zero,80c31c <__udivdi3+0x13c>
  80c218:	3023883a 	mov	r17,r6
  80c21c:	2025883a 	mov	r18,r4
  80c220:	2980522e 	bgeu	r5,r6,80c36c <__udivdi3+0x18c>
  80c224:	00bfffd4 	movui	r2,65535
  80c228:	282d883a 	mov	r22,r5
  80c22c:	1180a836 	bltu	r2,r6,80c4d0 <__udivdi3+0x2f0>
  80c230:	00803fc4 	movi	r2,255
  80c234:	1185803a 	cmpltu	r2,r2,r6
  80c238:	100490fa 	slli	r2,r2,3
  80c23c:	3086d83a 	srl	r3,r6,r2
  80c240:	01002074 	movhi	r4,129
  80c244:	21032d04 	addi	r4,r4,3252
  80c248:	20c7883a 	add	r3,r4,r3
  80c24c:	18c00003 	ldbu	r3,0(r3)
  80c250:	1885883a 	add	r2,r3,r2
  80c254:	00c00804 	movi	r3,32
  80c258:	1887c83a 	sub	r3,r3,r2
  80c25c:	18000526 	beq	r3,zero,80c274 <__udivdi3+0x94>
  80c260:	80e0983a 	sll	r16,r16,r3
  80c264:	9884d83a 	srl	r2,r19,r2
  80c268:	30e2983a 	sll	r17,r6,r3
  80c26c:	98e4983a 	sll	r18,r19,r3
  80c270:	142cb03a 	or	r22,r2,r16
  80c274:	882ad43a 	srli	r21,r17,16
  80c278:	b009883a 	mov	r4,r22
  80c27c:	8d3fffcc 	andi	r20,r17,65535
  80c280:	a80b883a 	mov	r5,r21
  80c284:	080cdec0 	call	80cdec <__umodsi3>
  80c288:	b009883a 	mov	r4,r22
  80c28c:	a80b883a 	mov	r5,r21
  80c290:	1027883a 	mov	r19,r2
  80c294:	080cd880 	call	80cd88 <__udivsi3>
  80c298:	102d883a 	mov	r22,r2
  80c29c:	9826943a 	slli	r19,r19,16
  80c2a0:	9004d43a 	srli	r2,r18,16
  80c2a4:	a5a1383a 	mul	r16,r20,r22
  80c2a8:	14c4b03a 	or	r2,r2,r19
  80c2ac:	1400052e 	bgeu	r2,r16,80c2c4 <__udivdi3+0xe4>
  80c2b0:	1445883a 	add	r2,r2,r17
  80c2b4:	b0ffffc4 	addi	r3,r22,-1
  80c2b8:	14400136 	bltu	r2,r17,80c2c0 <__udivdi3+0xe0>
  80c2bc:	14012336 	bltu	r2,r16,80c74c <__udivdi3+0x56c>
  80c2c0:	182d883a 	mov	r22,r3
  80c2c4:	1421c83a 	sub	r16,r2,r16
  80c2c8:	a80b883a 	mov	r5,r21
  80c2cc:	8009883a 	mov	r4,r16
  80c2d0:	080cdec0 	call	80cdec <__umodsi3>
  80c2d4:	1027883a 	mov	r19,r2
  80c2d8:	a80b883a 	mov	r5,r21
  80c2dc:	8009883a 	mov	r4,r16
  80c2e0:	080cd880 	call	80cd88 <__udivsi3>
  80c2e4:	9826943a 	slli	r19,r19,16
  80c2e8:	a0a9383a 	mul	r20,r20,r2
  80c2ec:	94bfffcc 	andi	r18,r18,65535
  80c2f0:	94e4b03a 	or	r18,r18,r19
  80c2f4:	9500052e 	bgeu	r18,r20,80c30c <__udivdi3+0x12c>
  80c2f8:	8ca5883a 	add	r18,r17,r18
  80c2fc:	10ffffc4 	addi	r3,r2,-1
  80c300:	9440f136 	bltu	r18,r17,80c6c8 <__udivdi3+0x4e8>
  80c304:	9500f02e 	bgeu	r18,r20,80c6c8 <__udivdi3+0x4e8>
  80c308:	10bfff84 	addi	r2,r2,-2
  80c30c:	b00c943a 	slli	r6,r22,16
  80c310:	0007883a 	mov	r3,zero
  80c314:	3084b03a 	or	r2,r6,r2
  80c318:	00005906 	br	80c480 <__udivdi3+0x2a0>
  80c31c:	29c05636 	bltu	r5,r7,80c478 <__udivdi3+0x298>
  80c320:	00bfffd4 	movui	r2,65535
  80c324:	11c0622e 	bgeu	r2,r7,80c4b0 <__udivdi3+0x2d0>
  80c328:	00804034 	movhi	r2,256
  80c32c:	10bfffc4 	addi	r2,r2,-1
  80c330:	11c0ee36 	bltu	r2,r7,80c6ec <__udivdi3+0x50c>
  80c334:	00800404 	movi	r2,16
  80c338:	3886d83a 	srl	r3,r7,r2
  80c33c:	01002074 	movhi	r4,129
  80c340:	21032d04 	addi	r4,r4,3252
  80c344:	20c7883a 	add	r3,r4,r3
  80c348:	18c00003 	ldbu	r3,0(r3)
  80c34c:	05400804 	movi	r21,32
  80c350:	1885883a 	add	r2,r3,r2
  80c354:	a8abc83a 	sub	r21,r21,r2
  80c358:	a800621e 	bne	r21,zero,80c4e4 <__udivdi3+0x304>
  80c35c:	3c00e936 	bltu	r7,r16,80c704 <__udivdi3+0x524>
  80c360:	9985403a 	cmpgeu	r2,r19,r6
  80c364:	0007883a 	mov	r3,zero
  80c368:	00004506 	br	80c480 <__udivdi3+0x2a0>
  80c36c:	3000041e 	bne	r6,zero,80c380 <__udivdi3+0x1a0>
  80c370:	000b883a 	mov	r5,zero
  80c374:	01000044 	movi	r4,1
  80c378:	080cd880 	call	80cd88 <__udivsi3>
  80c37c:	1023883a 	mov	r17,r2
  80c380:	00bfffd4 	movui	r2,65535
  80c384:	14404e2e 	bgeu	r2,r17,80c4c0 <__udivdi3+0x2e0>
  80c388:	00804034 	movhi	r2,256
  80c38c:	10bfffc4 	addi	r2,r2,-1
  80c390:	1440d836 	bltu	r2,r17,80c6f4 <__udivdi3+0x514>
  80c394:	00800404 	movi	r2,16
  80c398:	8886d83a 	srl	r3,r17,r2
  80c39c:	01002074 	movhi	r4,129
  80c3a0:	21032d04 	addi	r4,r4,3252
  80c3a4:	20c7883a 	add	r3,r4,r3
  80c3a8:	18c00003 	ldbu	r3,0(r3)
  80c3ac:	1885883a 	add	r2,r3,r2
  80c3b0:	00c00804 	movi	r3,32
  80c3b4:	1887c83a 	sub	r3,r3,r2
  80c3b8:	18008f1e 	bne	r3,zero,80c5f8 <__udivdi3+0x418>
  80c3bc:	882ad43a 	srli	r21,r17,16
  80c3c0:	8461c83a 	sub	r16,r16,r17
  80c3c4:	8d3fffcc 	andi	r20,r17,65535
  80c3c8:	00c00044 	movi	r3,1
  80c3cc:	8009883a 	mov	r4,r16
  80c3d0:	a80b883a 	mov	r5,r21
  80c3d4:	d8c00015 	stw	r3,0(sp)
  80c3d8:	080cdec0 	call	80cdec <__umodsi3>
  80c3dc:	8009883a 	mov	r4,r16
  80c3e0:	a80b883a 	mov	r5,r21
  80c3e4:	1027883a 	mov	r19,r2
  80c3e8:	080cd880 	call	80cd88 <__udivsi3>
  80c3ec:	9826943a 	slli	r19,r19,16
  80c3f0:	9008d43a 	srli	r4,r18,16
  80c3f4:	1521383a 	mul	r16,r2,r20
  80c3f8:	102d883a 	mov	r22,r2
  80c3fc:	24c8b03a 	or	r4,r4,r19
  80c400:	d8c00017 	ldw	r3,0(sp)
  80c404:	2400052e 	bgeu	r4,r16,80c41c <__udivdi3+0x23c>
  80c408:	2449883a 	add	r4,r4,r17
  80c40c:	b0bfffc4 	addi	r2,r22,-1
  80c410:	24400136 	bltu	r4,r17,80c418 <__udivdi3+0x238>
  80c414:	2400ca36 	bltu	r4,r16,80c740 <__udivdi3+0x560>
  80c418:	102d883a 	mov	r22,r2
  80c41c:	2421c83a 	sub	r16,r4,r16
  80c420:	a80b883a 	mov	r5,r21
  80c424:	8009883a 	mov	r4,r16
  80c428:	d8c00015 	stw	r3,0(sp)
  80c42c:	080cdec0 	call	80cdec <__umodsi3>
  80c430:	1027883a 	mov	r19,r2
  80c434:	a80b883a 	mov	r5,r21
  80c438:	8009883a 	mov	r4,r16
  80c43c:	080cd880 	call	80cd88 <__udivsi3>
  80c440:	9826943a 	slli	r19,r19,16
  80c444:	1529383a 	mul	r20,r2,r20
  80c448:	94bfffcc 	andi	r18,r18,65535
  80c44c:	94e4b03a 	or	r18,r18,r19
  80c450:	d8c00017 	ldw	r3,0(sp)
  80c454:	9500052e 	bgeu	r18,r20,80c46c <__udivdi3+0x28c>
  80c458:	8ca5883a 	add	r18,r17,r18
  80c45c:	113fffc4 	addi	r4,r2,-1
  80c460:	94409736 	bltu	r18,r17,80c6c0 <__udivdi3+0x4e0>
  80c464:	9500962e 	bgeu	r18,r20,80c6c0 <__udivdi3+0x4e0>
  80c468:	10bfff84 	addi	r2,r2,-2
  80c46c:	b00c943a 	slli	r6,r22,16
  80c470:	3084b03a 	or	r2,r6,r2
  80c474:	00000206 	br	80c480 <__udivdi3+0x2a0>
  80c478:	0007883a 	mov	r3,zero
  80c47c:	0005883a 	mov	r2,zero
  80c480:	dfc00a17 	ldw	ra,40(sp)
  80c484:	df000917 	ldw	fp,36(sp)
  80c488:	ddc00817 	ldw	r23,32(sp)
  80c48c:	dd800717 	ldw	r22,28(sp)
  80c490:	dd400617 	ldw	r21,24(sp)
  80c494:	dd000517 	ldw	r20,20(sp)
  80c498:	dcc00417 	ldw	r19,16(sp)
  80c49c:	dc800317 	ldw	r18,12(sp)
  80c4a0:	dc400217 	ldw	r17,8(sp)
  80c4a4:	dc000117 	ldw	r16,4(sp)
  80c4a8:	dec00b04 	addi	sp,sp,44
  80c4ac:	f800283a 	ret
  80c4b0:	00803fc4 	movi	r2,255
  80c4b4:	11c5803a 	cmpltu	r2,r2,r7
  80c4b8:	100490fa 	slli	r2,r2,3
  80c4bc:	003f9e06 	br	80c338 <__alt_data_end+0xff80c338>
  80c4c0:	00803fc4 	movi	r2,255
  80c4c4:	1445803a 	cmpltu	r2,r2,r17
  80c4c8:	100490fa 	slli	r2,r2,3
  80c4cc:	003fb206 	br	80c398 <__alt_data_end+0xff80c398>
  80c4d0:	00804034 	movhi	r2,256
  80c4d4:	10bfffc4 	addi	r2,r2,-1
  80c4d8:	11808836 	bltu	r2,r6,80c6fc <__udivdi3+0x51c>
  80c4dc:	00800404 	movi	r2,16
  80c4e0:	003f5606 	br	80c23c <__alt_data_end+0xff80c23c>
  80c4e4:	30aed83a 	srl	r23,r6,r2
  80c4e8:	3d4e983a 	sll	r7,r7,r21
  80c4ec:	80acd83a 	srl	r22,r16,r2
  80c4f0:	9884d83a 	srl	r2,r19,r2
  80c4f4:	3deeb03a 	or	r23,r7,r23
  80c4f8:	b824d43a 	srli	r18,r23,16
  80c4fc:	8560983a 	sll	r16,r16,r21
  80c500:	b009883a 	mov	r4,r22
  80c504:	900b883a 	mov	r5,r18
  80c508:	3568983a 	sll	r20,r6,r21
  80c50c:	1420b03a 	or	r16,r2,r16
  80c510:	080cdec0 	call	80cdec <__umodsi3>
  80c514:	b009883a 	mov	r4,r22
  80c518:	900b883a 	mov	r5,r18
  80c51c:	1023883a 	mov	r17,r2
  80c520:	080cd880 	call	80cd88 <__udivsi3>
  80c524:	8808943a 	slli	r4,r17,16
  80c528:	bf3fffcc 	andi	fp,r23,65535
  80c52c:	8006d43a 	srli	r3,r16,16
  80c530:	e0a3383a 	mul	r17,fp,r2
  80c534:	100d883a 	mov	r6,r2
  80c538:	1906b03a 	or	r3,r3,r4
  80c53c:	1c40042e 	bgeu	r3,r17,80c550 <__udivdi3+0x370>
  80c540:	1dc7883a 	add	r3,r3,r23
  80c544:	10bfffc4 	addi	r2,r2,-1
  80c548:	1dc0752e 	bgeu	r3,r23,80c720 <__udivdi3+0x540>
  80c54c:	100d883a 	mov	r6,r2
  80c550:	1c63c83a 	sub	r17,r3,r17
  80c554:	900b883a 	mov	r5,r18
  80c558:	8809883a 	mov	r4,r17
  80c55c:	d9800015 	stw	r6,0(sp)
  80c560:	080cdec0 	call	80cdec <__umodsi3>
  80c564:	102d883a 	mov	r22,r2
  80c568:	8809883a 	mov	r4,r17
  80c56c:	900b883a 	mov	r5,r18
  80c570:	080cd880 	call	80cd88 <__udivsi3>
  80c574:	b02c943a 	slli	r22,r22,16
  80c578:	e089383a 	mul	r4,fp,r2
  80c57c:	843fffcc 	andi	r16,r16,65535
  80c580:	85a0b03a 	or	r16,r16,r22
  80c584:	d9800017 	ldw	r6,0(sp)
  80c588:	8100042e 	bgeu	r16,r4,80c59c <__udivdi3+0x3bc>
  80c58c:	85e1883a 	add	r16,r16,r23
  80c590:	10ffffc4 	addi	r3,r2,-1
  80c594:	85c05e2e 	bgeu	r16,r23,80c710 <__udivdi3+0x530>
  80c598:	1805883a 	mov	r2,r3
  80c59c:	300c943a 	slli	r6,r6,16
  80c5a0:	a17fffcc 	andi	r5,r20,65535
  80c5a4:	a028d43a 	srli	r20,r20,16
  80c5a8:	3084b03a 	or	r2,r6,r2
  80c5ac:	10ffffcc 	andi	r3,r2,65535
  80c5b0:	100cd43a 	srli	r6,r2,16
  80c5b4:	194f383a 	mul	r7,r3,r5
  80c5b8:	1d07383a 	mul	r3,r3,r20
  80c5bc:	314b383a 	mul	r5,r6,r5
  80c5c0:	3810d43a 	srli	r8,r7,16
  80c5c4:	8121c83a 	sub	r16,r16,r4
  80c5c8:	1947883a 	add	r3,r3,r5
  80c5cc:	40c7883a 	add	r3,r8,r3
  80c5d0:	350d383a 	mul	r6,r6,r20
  80c5d4:	1940022e 	bgeu	r3,r5,80c5e0 <__udivdi3+0x400>
  80c5d8:	01000074 	movhi	r4,1
  80c5dc:	310d883a 	add	r6,r6,r4
  80c5e0:	1828d43a 	srli	r20,r3,16
  80c5e4:	a18d883a 	add	r6,r20,r6
  80c5e8:	81803e36 	bltu	r16,r6,80c6e4 <__udivdi3+0x504>
  80c5ec:	81803826 	beq	r16,r6,80c6d0 <__udivdi3+0x4f0>
  80c5f0:	0007883a 	mov	r3,zero
  80c5f4:	003fa206 	br	80c480 <__alt_data_end+0xff80c480>
  80c5f8:	88e2983a 	sll	r17,r17,r3
  80c5fc:	80a8d83a 	srl	r20,r16,r2
  80c600:	80e0983a 	sll	r16,r16,r3
  80c604:	882ad43a 	srli	r21,r17,16
  80c608:	9884d83a 	srl	r2,r19,r2
  80c60c:	a009883a 	mov	r4,r20
  80c610:	a80b883a 	mov	r5,r21
  80c614:	142eb03a 	or	r23,r2,r16
  80c618:	98e4983a 	sll	r18,r19,r3
  80c61c:	080cdec0 	call	80cdec <__umodsi3>
  80c620:	a009883a 	mov	r4,r20
  80c624:	a80b883a 	mov	r5,r21
  80c628:	1021883a 	mov	r16,r2
  80c62c:	080cd880 	call	80cd88 <__udivsi3>
  80c630:	1039883a 	mov	fp,r2
  80c634:	8d3fffcc 	andi	r20,r17,65535
  80c638:	8020943a 	slli	r16,r16,16
  80c63c:	b804d43a 	srli	r2,r23,16
  80c640:	a72d383a 	mul	r22,r20,fp
  80c644:	1404b03a 	or	r2,r2,r16
  80c648:	1580062e 	bgeu	r2,r22,80c664 <__udivdi3+0x484>
  80c64c:	1445883a 	add	r2,r2,r17
  80c650:	e0ffffc4 	addi	r3,fp,-1
  80c654:	14403836 	bltu	r2,r17,80c738 <__udivdi3+0x558>
  80c658:	1580372e 	bgeu	r2,r22,80c738 <__udivdi3+0x558>
  80c65c:	e73fff84 	addi	fp,fp,-2
  80c660:	1445883a 	add	r2,r2,r17
  80c664:	15adc83a 	sub	r22,r2,r22
  80c668:	a80b883a 	mov	r5,r21
  80c66c:	b009883a 	mov	r4,r22
  80c670:	080cdec0 	call	80cdec <__umodsi3>
  80c674:	1027883a 	mov	r19,r2
  80c678:	b009883a 	mov	r4,r22
  80c67c:	a80b883a 	mov	r5,r21
  80c680:	080cd880 	call	80cd88 <__udivsi3>
  80c684:	9826943a 	slli	r19,r19,16
  80c688:	a0a1383a 	mul	r16,r20,r2
  80c68c:	b93fffcc 	andi	r4,r23,65535
  80c690:	24c8b03a 	or	r4,r4,r19
  80c694:	2400062e 	bgeu	r4,r16,80c6b0 <__udivdi3+0x4d0>
  80c698:	2449883a 	add	r4,r4,r17
  80c69c:	10ffffc4 	addi	r3,r2,-1
  80c6a0:	24402336 	bltu	r4,r17,80c730 <__udivdi3+0x550>
  80c6a4:	2400222e 	bgeu	r4,r16,80c730 <__udivdi3+0x550>
  80c6a8:	10bfff84 	addi	r2,r2,-2
  80c6ac:	2449883a 	add	r4,r4,r17
  80c6b0:	e038943a 	slli	fp,fp,16
  80c6b4:	2421c83a 	sub	r16,r4,r16
  80c6b8:	e086b03a 	or	r3,fp,r2
  80c6bc:	003f4306 	br	80c3cc <__alt_data_end+0xff80c3cc>
  80c6c0:	2005883a 	mov	r2,r4
  80c6c4:	003f6906 	br	80c46c <__alt_data_end+0xff80c46c>
  80c6c8:	1805883a 	mov	r2,r3
  80c6cc:	003f0f06 	br	80c30c <__alt_data_end+0xff80c30c>
  80c6d0:	1806943a 	slli	r3,r3,16
  80c6d4:	9d66983a 	sll	r19,r19,r21
  80c6d8:	39ffffcc 	andi	r7,r7,65535
  80c6dc:	19c7883a 	add	r3,r3,r7
  80c6e0:	98ffc32e 	bgeu	r19,r3,80c5f0 <__alt_data_end+0xff80c5f0>
  80c6e4:	10bfffc4 	addi	r2,r2,-1
  80c6e8:	003fc106 	br	80c5f0 <__alt_data_end+0xff80c5f0>
  80c6ec:	00800604 	movi	r2,24
  80c6f0:	003f1106 	br	80c338 <__alt_data_end+0xff80c338>
  80c6f4:	00800604 	movi	r2,24
  80c6f8:	003f2706 	br	80c398 <__alt_data_end+0xff80c398>
  80c6fc:	00800604 	movi	r2,24
  80c700:	003ece06 	br	80c23c <__alt_data_end+0xff80c23c>
  80c704:	0007883a 	mov	r3,zero
  80c708:	00800044 	movi	r2,1
  80c70c:	003f5c06 	br	80c480 <__alt_data_end+0xff80c480>
  80c710:	813fa12e 	bgeu	r16,r4,80c598 <__alt_data_end+0xff80c598>
  80c714:	10bfff84 	addi	r2,r2,-2
  80c718:	85e1883a 	add	r16,r16,r23
  80c71c:	003f9f06 	br	80c59c <__alt_data_end+0xff80c59c>
  80c720:	1c7f8a2e 	bgeu	r3,r17,80c54c <__alt_data_end+0xff80c54c>
  80c724:	31bfff84 	addi	r6,r6,-2
  80c728:	1dc7883a 	add	r3,r3,r23
  80c72c:	003f8806 	br	80c550 <__alt_data_end+0xff80c550>
  80c730:	1805883a 	mov	r2,r3
  80c734:	003fde06 	br	80c6b0 <__alt_data_end+0xff80c6b0>
  80c738:	1839883a 	mov	fp,r3
  80c73c:	003fc906 	br	80c664 <__alt_data_end+0xff80c664>
  80c740:	b5bfff84 	addi	r22,r22,-2
  80c744:	2449883a 	add	r4,r4,r17
  80c748:	003f3406 	br	80c41c <__alt_data_end+0xff80c41c>
  80c74c:	b5bfff84 	addi	r22,r22,-2
  80c750:	1445883a 	add	r2,r2,r17
  80c754:	003edb06 	br	80c2c4 <__alt_data_end+0xff80c2c4>

0080c758 <__umoddi3>:
  80c758:	defff404 	addi	sp,sp,-48
  80c75c:	df000a15 	stw	fp,40(sp)
  80c760:	dc400315 	stw	r17,12(sp)
  80c764:	dc000215 	stw	r16,8(sp)
  80c768:	dfc00b15 	stw	ra,44(sp)
  80c76c:	ddc00915 	stw	r23,36(sp)
  80c770:	dd800815 	stw	r22,32(sp)
  80c774:	dd400715 	stw	r21,28(sp)
  80c778:	dd000615 	stw	r20,24(sp)
  80c77c:	dcc00515 	stw	r19,20(sp)
  80c780:	dc800415 	stw	r18,16(sp)
  80c784:	2021883a 	mov	r16,r4
  80c788:	2823883a 	mov	r17,r5
  80c78c:	2839883a 	mov	fp,r5
  80c790:	38003c1e 	bne	r7,zero,80c884 <__umoddi3+0x12c>
  80c794:	3027883a 	mov	r19,r6
  80c798:	2029883a 	mov	r20,r4
  80c79c:	2980512e 	bgeu	r5,r6,80c8e4 <__umoddi3+0x18c>
  80c7a0:	00bfffd4 	movui	r2,65535
  80c7a4:	11809a36 	bltu	r2,r6,80ca10 <__umoddi3+0x2b8>
  80c7a8:	01003fc4 	movi	r4,255
  80c7ac:	2189803a 	cmpltu	r4,r4,r6
  80c7b0:	200890fa 	slli	r4,r4,3
  80c7b4:	3104d83a 	srl	r2,r6,r4
  80c7b8:	00c02074 	movhi	r3,129
  80c7bc:	18c32d04 	addi	r3,r3,3252
  80c7c0:	1885883a 	add	r2,r3,r2
  80c7c4:	10c00003 	ldbu	r3,0(r2)
  80c7c8:	00800804 	movi	r2,32
  80c7cc:	1909883a 	add	r4,r3,r4
  80c7d0:	1125c83a 	sub	r18,r2,r4
  80c7d4:	90000526 	beq	r18,zero,80c7ec <__umoddi3+0x94>
  80c7d8:	8ca2983a 	sll	r17,r17,r18
  80c7dc:	8108d83a 	srl	r4,r16,r4
  80c7e0:	34a6983a 	sll	r19,r6,r18
  80c7e4:	84a8983a 	sll	r20,r16,r18
  80c7e8:	2478b03a 	or	fp,r4,r17
  80c7ec:	982ed43a 	srli	r23,r19,16
  80c7f0:	e009883a 	mov	r4,fp
  80c7f4:	9dbfffcc 	andi	r22,r19,65535
  80c7f8:	b80b883a 	mov	r5,r23
  80c7fc:	080cdec0 	call	80cdec <__umodsi3>
  80c800:	e009883a 	mov	r4,fp
  80c804:	b80b883a 	mov	r5,r23
  80c808:	102b883a 	mov	r21,r2
  80c80c:	080cd880 	call	80cd88 <__udivsi3>
  80c810:	a806943a 	slli	r3,r21,16
  80c814:	a008d43a 	srli	r4,r20,16
  80c818:	b085383a 	mul	r2,r22,r2
  80c81c:	20c8b03a 	or	r4,r4,r3
  80c820:	2080032e 	bgeu	r4,r2,80c830 <__umoddi3+0xd8>
  80c824:	24c9883a 	add	r4,r4,r19
  80c828:	24c00136 	bltu	r4,r19,80c830 <__umoddi3+0xd8>
  80c82c:	20811036 	bltu	r4,r2,80cc70 <__umoddi3+0x518>
  80c830:	20abc83a 	sub	r21,r4,r2
  80c834:	b80b883a 	mov	r5,r23
  80c838:	a809883a 	mov	r4,r21
  80c83c:	080cdec0 	call	80cdec <__umodsi3>
  80c840:	1023883a 	mov	r17,r2
  80c844:	b80b883a 	mov	r5,r23
  80c848:	a809883a 	mov	r4,r21
  80c84c:	080cd880 	call	80cd88 <__udivsi3>
  80c850:	8822943a 	slli	r17,r17,16
  80c854:	b085383a 	mul	r2,r22,r2
  80c858:	a0ffffcc 	andi	r3,r20,65535
  80c85c:	1c46b03a 	or	r3,r3,r17
  80c860:	1880042e 	bgeu	r3,r2,80c874 <__umoddi3+0x11c>
  80c864:	1cc7883a 	add	r3,r3,r19
  80c868:	1cc00236 	bltu	r3,r19,80c874 <__umoddi3+0x11c>
  80c86c:	1880012e 	bgeu	r3,r2,80c874 <__umoddi3+0x11c>
  80c870:	1cc7883a 	add	r3,r3,r19
  80c874:	1885c83a 	sub	r2,r3,r2
  80c878:	1484d83a 	srl	r2,r2,r18
  80c87c:	0007883a 	mov	r3,zero
  80c880:	00004f06 	br	80c9c0 <__umoddi3+0x268>
  80c884:	29c04c36 	bltu	r5,r7,80c9b8 <__umoddi3+0x260>
  80c888:	00bfffd4 	movui	r2,65535
  80c88c:	11c0582e 	bgeu	r2,r7,80c9f0 <__umoddi3+0x298>
  80c890:	00804034 	movhi	r2,256
  80c894:	10bfffc4 	addi	r2,r2,-1
  80c898:	11c0e736 	bltu	r2,r7,80cc38 <__umoddi3+0x4e0>
  80c89c:	01000404 	movi	r4,16
  80c8a0:	3904d83a 	srl	r2,r7,r4
  80c8a4:	00c02074 	movhi	r3,129
  80c8a8:	18c32d04 	addi	r3,r3,3252
  80c8ac:	1885883a 	add	r2,r3,r2
  80c8b0:	14c00003 	ldbu	r19,0(r2)
  80c8b4:	00c00804 	movi	r3,32
  80c8b8:	9927883a 	add	r19,r19,r4
  80c8bc:	1ce9c83a 	sub	r20,r3,r19
  80c8c0:	a000581e 	bne	r20,zero,80ca24 <__umoddi3+0x2cc>
  80c8c4:	3c400136 	bltu	r7,r17,80c8cc <__umoddi3+0x174>
  80c8c8:	8180eb36 	bltu	r16,r6,80cc78 <__umoddi3+0x520>
  80c8cc:	8185c83a 	sub	r2,r16,r6
  80c8d0:	89e3c83a 	sub	r17,r17,r7
  80c8d4:	8089803a 	cmpltu	r4,r16,r2
  80c8d8:	8939c83a 	sub	fp,r17,r4
  80c8dc:	e007883a 	mov	r3,fp
  80c8e0:	00003706 	br	80c9c0 <__umoddi3+0x268>
  80c8e4:	3000041e 	bne	r6,zero,80c8f8 <__umoddi3+0x1a0>
  80c8e8:	000b883a 	mov	r5,zero
  80c8ec:	01000044 	movi	r4,1
  80c8f0:	080cd880 	call	80cd88 <__udivsi3>
  80c8f4:	1027883a 	mov	r19,r2
  80c8f8:	00bfffd4 	movui	r2,65535
  80c8fc:	14c0402e 	bgeu	r2,r19,80ca00 <__umoddi3+0x2a8>
  80c900:	00804034 	movhi	r2,256
  80c904:	10bfffc4 	addi	r2,r2,-1
  80c908:	14c0cd36 	bltu	r2,r19,80cc40 <__umoddi3+0x4e8>
  80c90c:	00800404 	movi	r2,16
  80c910:	9886d83a 	srl	r3,r19,r2
  80c914:	01002074 	movhi	r4,129
  80c918:	21032d04 	addi	r4,r4,3252
  80c91c:	20c7883a 	add	r3,r4,r3
  80c920:	18c00003 	ldbu	r3,0(r3)
  80c924:	1887883a 	add	r3,r3,r2
  80c928:	00800804 	movi	r2,32
  80c92c:	10e5c83a 	sub	r18,r2,r3
  80c930:	9000901e 	bne	r18,zero,80cb74 <__umoddi3+0x41c>
  80c934:	982cd43a 	srli	r22,r19,16
  80c938:	8ce3c83a 	sub	r17,r17,r19
  80c93c:	9d7fffcc 	andi	r21,r19,65535
  80c940:	b00b883a 	mov	r5,r22
  80c944:	8809883a 	mov	r4,r17
  80c948:	080cdec0 	call	80cdec <__umodsi3>
  80c94c:	8809883a 	mov	r4,r17
  80c950:	b00b883a 	mov	r5,r22
  80c954:	1021883a 	mov	r16,r2
  80c958:	080cd880 	call	80cd88 <__udivsi3>
  80c95c:	8006943a 	slli	r3,r16,16
  80c960:	a008d43a 	srli	r4,r20,16
  80c964:	1545383a 	mul	r2,r2,r21
  80c968:	20c8b03a 	or	r4,r4,r3
  80c96c:	2080042e 	bgeu	r4,r2,80c980 <__umoddi3+0x228>
  80c970:	24c9883a 	add	r4,r4,r19
  80c974:	24c00236 	bltu	r4,r19,80c980 <__umoddi3+0x228>
  80c978:	2080012e 	bgeu	r4,r2,80c980 <__umoddi3+0x228>
  80c97c:	24c9883a 	add	r4,r4,r19
  80c980:	20a1c83a 	sub	r16,r4,r2
  80c984:	b00b883a 	mov	r5,r22
  80c988:	8009883a 	mov	r4,r16
  80c98c:	080cdec0 	call	80cdec <__umodsi3>
  80c990:	1023883a 	mov	r17,r2
  80c994:	b00b883a 	mov	r5,r22
  80c998:	8009883a 	mov	r4,r16
  80c99c:	080cd880 	call	80cd88 <__udivsi3>
  80c9a0:	8822943a 	slli	r17,r17,16
  80c9a4:	1545383a 	mul	r2,r2,r21
  80c9a8:	a53fffcc 	andi	r20,r20,65535
  80c9ac:	a446b03a 	or	r3,r20,r17
  80c9b0:	18bfb02e 	bgeu	r3,r2,80c874 <__alt_data_end+0xff80c874>
  80c9b4:	003fab06 	br	80c864 <__alt_data_end+0xff80c864>
  80c9b8:	2005883a 	mov	r2,r4
  80c9bc:	2807883a 	mov	r3,r5
  80c9c0:	dfc00b17 	ldw	ra,44(sp)
  80c9c4:	df000a17 	ldw	fp,40(sp)
  80c9c8:	ddc00917 	ldw	r23,36(sp)
  80c9cc:	dd800817 	ldw	r22,32(sp)
  80c9d0:	dd400717 	ldw	r21,28(sp)
  80c9d4:	dd000617 	ldw	r20,24(sp)
  80c9d8:	dcc00517 	ldw	r19,20(sp)
  80c9dc:	dc800417 	ldw	r18,16(sp)
  80c9e0:	dc400317 	ldw	r17,12(sp)
  80c9e4:	dc000217 	ldw	r16,8(sp)
  80c9e8:	dec00c04 	addi	sp,sp,48
  80c9ec:	f800283a 	ret
  80c9f0:	04c03fc4 	movi	r19,255
  80c9f4:	99c9803a 	cmpltu	r4,r19,r7
  80c9f8:	200890fa 	slli	r4,r4,3
  80c9fc:	003fa806 	br	80c8a0 <__alt_data_end+0xff80c8a0>
  80ca00:	00803fc4 	movi	r2,255
  80ca04:	14c5803a 	cmpltu	r2,r2,r19
  80ca08:	100490fa 	slli	r2,r2,3
  80ca0c:	003fc006 	br	80c910 <__alt_data_end+0xff80c910>
  80ca10:	00804034 	movhi	r2,256
  80ca14:	10bfffc4 	addi	r2,r2,-1
  80ca18:	11808b36 	bltu	r2,r6,80cc48 <__umoddi3+0x4f0>
  80ca1c:	01000404 	movi	r4,16
  80ca20:	003f6406 	br	80c7b4 <__alt_data_end+0xff80c7b4>
  80ca24:	34c4d83a 	srl	r2,r6,r19
  80ca28:	3d0e983a 	sll	r7,r7,r20
  80ca2c:	8cf8d83a 	srl	fp,r17,r19
  80ca30:	8d10983a 	sll	r8,r17,r20
  80ca34:	38aab03a 	or	r21,r7,r2
  80ca38:	a82cd43a 	srli	r22,r21,16
  80ca3c:	84e2d83a 	srl	r17,r16,r19
  80ca40:	e009883a 	mov	r4,fp
  80ca44:	b00b883a 	mov	r5,r22
  80ca48:	8a22b03a 	or	r17,r17,r8
  80ca4c:	3524983a 	sll	r18,r6,r20
  80ca50:	080cdec0 	call	80cdec <__umodsi3>
  80ca54:	e009883a 	mov	r4,fp
  80ca58:	b00b883a 	mov	r5,r22
  80ca5c:	102f883a 	mov	r23,r2
  80ca60:	080cd880 	call	80cd88 <__udivsi3>
  80ca64:	100d883a 	mov	r6,r2
  80ca68:	b808943a 	slli	r4,r23,16
  80ca6c:	aa3fffcc 	andi	r8,r21,65535
  80ca70:	8804d43a 	srli	r2,r17,16
  80ca74:	41af383a 	mul	r23,r8,r6
  80ca78:	8520983a 	sll	r16,r16,r20
  80ca7c:	1104b03a 	or	r2,r2,r4
  80ca80:	15c0042e 	bgeu	r2,r23,80ca94 <__umoddi3+0x33c>
  80ca84:	1545883a 	add	r2,r2,r21
  80ca88:	30ffffc4 	addi	r3,r6,-1
  80ca8c:	1540742e 	bgeu	r2,r21,80cc60 <__umoddi3+0x508>
  80ca90:	180d883a 	mov	r6,r3
  80ca94:	15efc83a 	sub	r23,r2,r23
  80ca98:	b00b883a 	mov	r5,r22
  80ca9c:	b809883a 	mov	r4,r23
  80caa0:	d9800115 	stw	r6,4(sp)
  80caa4:	da000015 	stw	r8,0(sp)
  80caa8:	080cdec0 	call	80cdec <__umodsi3>
  80caac:	b00b883a 	mov	r5,r22
  80cab0:	b809883a 	mov	r4,r23
  80cab4:	1039883a 	mov	fp,r2
  80cab8:	080cd880 	call	80cd88 <__udivsi3>
  80cabc:	da000017 	ldw	r8,0(sp)
  80cac0:	e038943a 	slli	fp,fp,16
  80cac4:	100b883a 	mov	r5,r2
  80cac8:	4089383a 	mul	r4,r8,r2
  80cacc:	8a3fffcc 	andi	r8,r17,65535
  80cad0:	4710b03a 	or	r8,r8,fp
  80cad4:	d9800117 	ldw	r6,4(sp)
  80cad8:	4100042e 	bgeu	r8,r4,80caec <__umoddi3+0x394>
  80cadc:	4551883a 	add	r8,r8,r21
  80cae0:	10bfffc4 	addi	r2,r2,-1
  80cae4:	45405a2e 	bgeu	r8,r21,80cc50 <__umoddi3+0x4f8>
  80cae8:	100b883a 	mov	r5,r2
  80caec:	300c943a 	slli	r6,r6,16
  80caf0:	91ffffcc 	andi	r7,r18,65535
  80caf4:	9004d43a 	srli	r2,r18,16
  80caf8:	314cb03a 	or	r6,r6,r5
  80cafc:	317fffcc 	andi	r5,r6,65535
  80cb00:	300cd43a 	srli	r6,r6,16
  80cb04:	29d3383a 	mul	r9,r5,r7
  80cb08:	288b383a 	mul	r5,r5,r2
  80cb0c:	31cf383a 	mul	r7,r6,r7
  80cb10:	4806d43a 	srli	r3,r9,16
  80cb14:	4111c83a 	sub	r8,r8,r4
  80cb18:	29cb883a 	add	r5,r5,r7
  80cb1c:	194b883a 	add	r5,r3,r5
  80cb20:	3085383a 	mul	r2,r6,r2
  80cb24:	29c0022e 	bgeu	r5,r7,80cb30 <__umoddi3+0x3d8>
  80cb28:	00c00074 	movhi	r3,1
  80cb2c:	10c5883a 	add	r2,r2,r3
  80cb30:	2808d43a 	srli	r4,r5,16
  80cb34:	280a943a 	slli	r5,r5,16
  80cb38:	4a7fffcc 	andi	r9,r9,65535
  80cb3c:	2085883a 	add	r2,r4,r2
  80cb40:	2a4b883a 	add	r5,r5,r9
  80cb44:	40803636 	bltu	r8,r2,80cc20 <__umoddi3+0x4c8>
  80cb48:	40804d26 	beq	r8,r2,80cc80 <__umoddi3+0x528>
  80cb4c:	4089c83a 	sub	r4,r8,r2
  80cb50:	280f883a 	mov	r7,r5
  80cb54:	81cfc83a 	sub	r7,r16,r7
  80cb58:	81c7803a 	cmpltu	r3,r16,r7
  80cb5c:	20c7c83a 	sub	r3,r4,r3
  80cb60:	1cc4983a 	sll	r2,r3,r19
  80cb64:	3d0ed83a 	srl	r7,r7,r20
  80cb68:	1d06d83a 	srl	r3,r3,r20
  80cb6c:	11c4b03a 	or	r2,r2,r7
  80cb70:	003f9306 	br	80c9c0 <__alt_data_end+0xff80c9c0>
  80cb74:	9ca6983a 	sll	r19,r19,r18
  80cb78:	88e8d83a 	srl	r20,r17,r3
  80cb7c:	80c4d83a 	srl	r2,r16,r3
  80cb80:	982cd43a 	srli	r22,r19,16
  80cb84:	8ca2983a 	sll	r17,r17,r18
  80cb88:	a009883a 	mov	r4,r20
  80cb8c:	b00b883a 	mov	r5,r22
  80cb90:	1478b03a 	or	fp,r2,r17
  80cb94:	080cdec0 	call	80cdec <__umodsi3>
  80cb98:	a009883a 	mov	r4,r20
  80cb9c:	b00b883a 	mov	r5,r22
  80cba0:	1023883a 	mov	r17,r2
  80cba4:	080cd880 	call	80cd88 <__udivsi3>
  80cba8:	9d7fffcc 	andi	r21,r19,65535
  80cbac:	880a943a 	slli	r5,r17,16
  80cbb0:	e008d43a 	srli	r4,fp,16
  80cbb4:	a885383a 	mul	r2,r21,r2
  80cbb8:	84a8983a 	sll	r20,r16,r18
  80cbbc:	2148b03a 	or	r4,r4,r5
  80cbc0:	2080042e 	bgeu	r4,r2,80cbd4 <__umoddi3+0x47c>
  80cbc4:	24c9883a 	add	r4,r4,r19
  80cbc8:	24c00236 	bltu	r4,r19,80cbd4 <__umoddi3+0x47c>
  80cbcc:	2080012e 	bgeu	r4,r2,80cbd4 <__umoddi3+0x47c>
  80cbd0:	24c9883a 	add	r4,r4,r19
  80cbd4:	20a3c83a 	sub	r17,r4,r2
  80cbd8:	b00b883a 	mov	r5,r22
  80cbdc:	8809883a 	mov	r4,r17
  80cbe0:	080cdec0 	call	80cdec <__umodsi3>
  80cbe4:	102f883a 	mov	r23,r2
  80cbe8:	8809883a 	mov	r4,r17
  80cbec:	b00b883a 	mov	r5,r22
  80cbf0:	080cd880 	call	80cd88 <__udivsi3>
  80cbf4:	b82e943a 	slli	r23,r23,16
  80cbf8:	a885383a 	mul	r2,r21,r2
  80cbfc:	e13fffcc 	andi	r4,fp,65535
  80cc00:	25c8b03a 	or	r4,r4,r23
  80cc04:	2080042e 	bgeu	r4,r2,80cc18 <__umoddi3+0x4c0>
  80cc08:	24c9883a 	add	r4,r4,r19
  80cc0c:	24c00236 	bltu	r4,r19,80cc18 <__umoddi3+0x4c0>
  80cc10:	2080012e 	bgeu	r4,r2,80cc18 <__umoddi3+0x4c0>
  80cc14:	24c9883a 	add	r4,r4,r19
  80cc18:	20a3c83a 	sub	r17,r4,r2
  80cc1c:	003f4806 	br	80c940 <__alt_data_end+0xff80c940>
  80cc20:	2c8fc83a 	sub	r7,r5,r18
  80cc24:	1545c83a 	sub	r2,r2,r21
  80cc28:	29cb803a 	cmpltu	r5,r5,r7
  80cc2c:	1145c83a 	sub	r2,r2,r5
  80cc30:	4089c83a 	sub	r4,r8,r2
  80cc34:	003fc706 	br	80cb54 <__alt_data_end+0xff80cb54>
  80cc38:	01000604 	movi	r4,24
  80cc3c:	003f1806 	br	80c8a0 <__alt_data_end+0xff80c8a0>
  80cc40:	00800604 	movi	r2,24
  80cc44:	003f3206 	br	80c910 <__alt_data_end+0xff80c910>
  80cc48:	01000604 	movi	r4,24
  80cc4c:	003ed906 	br	80c7b4 <__alt_data_end+0xff80c7b4>
  80cc50:	413fa52e 	bgeu	r8,r4,80cae8 <__alt_data_end+0xff80cae8>
  80cc54:	297fff84 	addi	r5,r5,-2
  80cc58:	4551883a 	add	r8,r8,r21
  80cc5c:	003fa306 	br	80caec <__alt_data_end+0xff80caec>
  80cc60:	15ff8b2e 	bgeu	r2,r23,80ca90 <__alt_data_end+0xff80ca90>
  80cc64:	31bfff84 	addi	r6,r6,-2
  80cc68:	1545883a 	add	r2,r2,r21
  80cc6c:	003f8906 	br	80ca94 <__alt_data_end+0xff80ca94>
  80cc70:	24c9883a 	add	r4,r4,r19
  80cc74:	003eee06 	br	80c830 <__alt_data_end+0xff80c830>
  80cc78:	8005883a 	mov	r2,r16
  80cc7c:	003f1706 	br	80c8dc <__alt_data_end+0xff80c8dc>
  80cc80:	817fe736 	bltu	r16,r5,80cc20 <__alt_data_end+0xff80cc20>
  80cc84:	280f883a 	mov	r7,r5
  80cc88:	0009883a 	mov	r4,zero
  80cc8c:	003fb106 	br	80cb54 <__alt_data_end+0xff80cb54>

0080cc90 <__divsi3>:
  80cc90:	20001b16 	blt	r4,zero,80cd00 <__divsi3+0x70>
  80cc94:	000f883a 	mov	r7,zero
  80cc98:	28001616 	blt	r5,zero,80ccf4 <__divsi3+0x64>
  80cc9c:	200d883a 	mov	r6,r4
  80cca0:	29001a2e 	bgeu	r5,r4,80cd0c <__divsi3+0x7c>
  80cca4:	00800804 	movi	r2,32
  80cca8:	00c00044 	movi	r3,1
  80ccac:	00000106 	br	80ccb4 <__divsi3+0x24>
  80ccb0:	10000d26 	beq	r2,zero,80cce8 <__divsi3+0x58>
  80ccb4:	294b883a 	add	r5,r5,r5
  80ccb8:	10bfffc4 	addi	r2,r2,-1
  80ccbc:	18c7883a 	add	r3,r3,r3
  80ccc0:	293ffb36 	bltu	r5,r4,80ccb0 <__alt_data_end+0xff80ccb0>
  80ccc4:	0005883a 	mov	r2,zero
  80ccc8:	18000726 	beq	r3,zero,80cce8 <__divsi3+0x58>
  80cccc:	0005883a 	mov	r2,zero
  80ccd0:	31400236 	bltu	r6,r5,80ccdc <__divsi3+0x4c>
  80ccd4:	314dc83a 	sub	r6,r6,r5
  80ccd8:	10c4b03a 	or	r2,r2,r3
  80ccdc:	1806d07a 	srli	r3,r3,1
  80cce0:	280ad07a 	srli	r5,r5,1
  80cce4:	183ffa1e 	bne	r3,zero,80ccd0 <__alt_data_end+0xff80ccd0>
  80cce8:	38000126 	beq	r7,zero,80ccf0 <__divsi3+0x60>
  80ccec:	0085c83a 	sub	r2,zero,r2
  80ccf0:	f800283a 	ret
  80ccf4:	014bc83a 	sub	r5,zero,r5
  80ccf8:	39c0005c 	xori	r7,r7,1
  80ccfc:	003fe706 	br	80cc9c <__alt_data_end+0xff80cc9c>
  80cd00:	0109c83a 	sub	r4,zero,r4
  80cd04:	01c00044 	movi	r7,1
  80cd08:	003fe306 	br	80cc98 <__alt_data_end+0xff80cc98>
  80cd0c:	00c00044 	movi	r3,1
  80cd10:	003fee06 	br	80cccc <__alt_data_end+0xff80cccc>

0080cd14 <__modsi3>:
  80cd14:	20001716 	blt	r4,zero,80cd74 <__modsi3+0x60>
  80cd18:	000f883a 	mov	r7,zero
  80cd1c:	2005883a 	mov	r2,r4
  80cd20:	28001216 	blt	r5,zero,80cd6c <__modsi3+0x58>
  80cd24:	2900162e 	bgeu	r5,r4,80cd80 <__modsi3+0x6c>
  80cd28:	01800804 	movi	r6,32
  80cd2c:	00c00044 	movi	r3,1
  80cd30:	00000106 	br	80cd38 <__modsi3+0x24>
  80cd34:	30000a26 	beq	r6,zero,80cd60 <__modsi3+0x4c>
  80cd38:	294b883a 	add	r5,r5,r5
  80cd3c:	31bfffc4 	addi	r6,r6,-1
  80cd40:	18c7883a 	add	r3,r3,r3
  80cd44:	293ffb36 	bltu	r5,r4,80cd34 <__alt_data_end+0xff80cd34>
  80cd48:	18000526 	beq	r3,zero,80cd60 <__modsi3+0x4c>
  80cd4c:	1806d07a 	srli	r3,r3,1
  80cd50:	11400136 	bltu	r2,r5,80cd58 <__modsi3+0x44>
  80cd54:	1145c83a 	sub	r2,r2,r5
  80cd58:	280ad07a 	srli	r5,r5,1
  80cd5c:	183ffb1e 	bne	r3,zero,80cd4c <__alt_data_end+0xff80cd4c>
  80cd60:	38000126 	beq	r7,zero,80cd68 <__modsi3+0x54>
  80cd64:	0085c83a 	sub	r2,zero,r2
  80cd68:	f800283a 	ret
  80cd6c:	014bc83a 	sub	r5,zero,r5
  80cd70:	003fec06 	br	80cd24 <__alt_data_end+0xff80cd24>
  80cd74:	0109c83a 	sub	r4,zero,r4
  80cd78:	01c00044 	movi	r7,1
  80cd7c:	003fe706 	br	80cd1c <__alt_data_end+0xff80cd1c>
  80cd80:	00c00044 	movi	r3,1
  80cd84:	003ff106 	br	80cd4c <__alt_data_end+0xff80cd4c>

0080cd88 <__udivsi3>:
  80cd88:	200d883a 	mov	r6,r4
  80cd8c:	2900152e 	bgeu	r5,r4,80cde4 <__udivsi3+0x5c>
  80cd90:	28001416 	blt	r5,zero,80cde4 <__udivsi3+0x5c>
  80cd94:	00800804 	movi	r2,32
  80cd98:	00c00044 	movi	r3,1
  80cd9c:	00000206 	br	80cda8 <__udivsi3+0x20>
  80cda0:	10000e26 	beq	r2,zero,80cddc <__udivsi3+0x54>
  80cda4:	28000516 	blt	r5,zero,80cdbc <__udivsi3+0x34>
  80cda8:	294b883a 	add	r5,r5,r5
  80cdac:	10bfffc4 	addi	r2,r2,-1
  80cdb0:	18c7883a 	add	r3,r3,r3
  80cdb4:	293ffa36 	bltu	r5,r4,80cda0 <__alt_data_end+0xff80cda0>
  80cdb8:	18000826 	beq	r3,zero,80cddc <__udivsi3+0x54>
  80cdbc:	0005883a 	mov	r2,zero
  80cdc0:	31400236 	bltu	r6,r5,80cdcc <__udivsi3+0x44>
  80cdc4:	314dc83a 	sub	r6,r6,r5
  80cdc8:	10c4b03a 	or	r2,r2,r3
  80cdcc:	1806d07a 	srli	r3,r3,1
  80cdd0:	280ad07a 	srli	r5,r5,1
  80cdd4:	183ffa1e 	bne	r3,zero,80cdc0 <__alt_data_end+0xff80cdc0>
  80cdd8:	f800283a 	ret
  80cddc:	0005883a 	mov	r2,zero
  80cde0:	f800283a 	ret
  80cde4:	00c00044 	movi	r3,1
  80cde8:	003ff406 	br	80cdbc <__alt_data_end+0xff80cdbc>

0080cdec <__umodsi3>:
  80cdec:	2005883a 	mov	r2,r4
  80cdf0:	2900122e 	bgeu	r5,r4,80ce3c <__umodsi3+0x50>
  80cdf4:	28001116 	blt	r5,zero,80ce3c <__umodsi3+0x50>
  80cdf8:	01800804 	movi	r6,32
  80cdfc:	00c00044 	movi	r3,1
  80ce00:	00000206 	br	80ce0c <__umodsi3+0x20>
  80ce04:	30000c26 	beq	r6,zero,80ce38 <__umodsi3+0x4c>
  80ce08:	28000516 	blt	r5,zero,80ce20 <__umodsi3+0x34>
  80ce0c:	294b883a 	add	r5,r5,r5
  80ce10:	31bfffc4 	addi	r6,r6,-1
  80ce14:	18c7883a 	add	r3,r3,r3
  80ce18:	293ffa36 	bltu	r5,r4,80ce04 <__alt_data_end+0xff80ce04>
  80ce1c:	18000626 	beq	r3,zero,80ce38 <__umodsi3+0x4c>
  80ce20:	1806d07a 	srli	r3,r3,1
  80ce24:	11400136 	bltu	r2,r5,80ce2c <__umodsi3+0x40>
  80ce28:	1145c83a 	sub	r2,r2,r5
  80ce2c:	280ad07a 	srli	r5,r5,1
  80ce30:	183ffb1e 	bne	r3,zero,80ce20 <__alt_data_end+0xff80ce20>
  80ce34:	f800283a 	ret
  80ce38:	f800283a 	ret
  80ce3c:	00c00044 	movi	r3,1
  80ce40:	003ff706 	br	80ce20 <__alt_data_end+0xff80ce20>

0080ce44 <__divdf3>:
  80ce44:	defff204 	addi	sp,sp,-56
  80ce48:	dd400915 	stw	r21,36(sp)
  80ce4c:	282ad53a 	srli	r21,r5,20
  80ce50:	dd000815 	stw	r20,32(sp)
  80ce54:	2828d7fa 	srli	r20,r5,31
  80ce58:	dc000415 	stw	r16,16(sp)
  80ce5c:	04000434 	movhi	r16,16
  80ce60:	df000c15 	stw	fp,48(sp)
  80ce64:	843fffc4 	addi	r16,r16,-1
  80ce68:	dfc00d15 	stw	ra,52(sp)
  80ce6c:	ddc00b15 	stw	r23,44(sp)
  80ce70:	dd800a15 	stw	r22,40(sp)
  80ce74:	dcc00715 	stw	r19,28(sp)
  80ce78:	dc800615 	stw	r18,24(sp)
  80ce7c:	dc400515 	stw	r17,20(sp)
  80ce80:	ad41ffcc 	andi	r21,r21,2047
  80ce84:	2c20703a 	and	r16,r5,r16
  80ce88:	a7003fcc 	andi	fp,r20,255
  80ce8c:	a8006126 	beq	r21,zero,80d014 <__divdf3+0x1d0>
  80ce90:	0081ffc4 	movi	r2,2047
  80ce94:	2025883a 	mov	r18,r4
  80ce98:	a8803726 	beq	r21,r2,80cf78 <__divdf3+0x134>
  80ce9c:	80800434 	orhi	r2,r16,16
  80cea0:	100490fa 	slli	r2,r2,3
  80cea4:	2020d77a 	srli	r16,r4,29
  80cea8:	202490fa 	slli	r18,r4,3
  80ceac:	ad7f0044 	addi	r21,r21,-1023
  80ceb0:	80a0b03a 	or	r16,r16,r2
  80ceb4:	0027883a 	mov	r19,zero
  80ceb8:	0013883a 	mov	r9,zero
  80cebc:	3804d53a 	srli	r2,r7,20
  80cec0:	382cd7fa 	srli	r22,r7,31
  80cec4:	04400434 	movhi	r17,16
  80cec8:	8c7fffc4 	addi	r17,r17,-1
  80cecc:	1081ffcc 	andi	r2,r2,2047
  80ced0:	3011883a 	mov	r8,r6
  80ced4:	3c62703a 	and	r17,r7,r17
  80ced8:	b5c03fcc 	andi	r23,r22,255
  80cedc:	10006c26 	beq	r2,zero,80d090 <__divdf3+0x24c>
  80cee0:	00c1ffc4 	movi	r3,2047
  80cee4:	10c06426 	beq	r2,r3,80d078 <__divdf3+0x234>
  80cee8:	88c00434 	orhi	r3,r17,16
  80ceec:	180690fa 	slli	r3,r3,3
  80cef0:	3022d77a 	srli	r17,r6,29
  80cef4:	301090fa 	slli	r8,r6,3
  80cef8:	10bf0044 	addi	r2,r2,-1023
  80cefc:	88e2b03a 	or	r17,r17,r3
  80cf00:	000f883a 	mov	r7,zero
  80cf04:	a58cf03a 	xor	r6,r20,r22
  80cf08:	3cc8b03a 	or	r4,r7,r19
  80cf0c:	a8abc83a 	sub	r21,r21,r2
  80cf10:	008003c4 	movi	r2,15
  80cf14:	3007883a 	mov	r3,r6
  80cf18:	34c03fcc 	andi	r19,r6,255
  80cf1c:	11009036 	bltu	r2,r4,80d160 <__divdf3+0x31c>
  80cf20:	200890ba 	slli	r4,r4,2
  80cf24:	00802074 	movhi	r2,129
  80cf28:	10b3ce04 	addi	r2,r2,-12488
  80cf2c:	2089883a 	add	r4,r4,r2
  80cf30:	20800017 	ldw	r2,0(r4)
  80cf34:	1000683a 	jmp	r2
  80cf38:	0080d160 	cmpeqi	r2,zero,837
  80cf3c:	0080cfb0 	cmpltui	r2,zero,830
  80cf40:	0080d150 	cmplti	r2,zero,837
  80cf44:	0080cfa4 	muli	r2,zero,830
  80cf48:	0080d150 	cmplti	r2,zero,837
  80cf4c:	0080d124 	muli	r2,zero,836
  80cf50:	0080d150 	cmplti	r2,zero,837
  80cf54:	0080cfa4 	muli	r2,zero,830
  80cf58:	0080cfb0 	cmpltui	r2,zero,830
  80cf5c:	0080cfb0 	cmpltui	r2,zero,830
  80cf60:	0080d124 	muli	r2,zero,836
  80cf64:	0080cfa4 	muli	r2,zero,830
  80cf68:	0080cf94 	movui	r2,830
  80cf6c:	0080cf94 	movui	r2,830
  80cf70:	0080cf94 	movui	r2,830
  80cf74:	0080d444 	movi	r2,849
  80cf78:	2404b03a 	or	r2,r4,r16
  80cf7c:	1000661e 	bne	r2,zero,80d118 <__divdf3+0x2d4>
  80cf80:	04c00204 	movi	r19,8
  80cf84:	0021883a 	mov	r16,zero
  80cf88:	0025883a 	mov	r18,zero
  80cf8c:	02400084 	movi	r9,2
  80cf90:	003fca06 	br	80cebc <__alt_data_end+0xff80cebc>
  80cf94:	8023883a 	mov	r17,r16
  80cf98:	9011883a 	mov	r8,r18
  80cf9c:	e02f883a 	mov	r23,fp
  80cfa0:	480f883a 	mov	r7,r9
  80cfa4:	00800084 	movi	r2,2
  80cfa8:	3881311e 	bne	r7,r2,80d470 <__divdf3+0x62c>
  80cfac:	b827883a 	mov	r19,r23
  80cfb0:	98c0004c 	andi	r3,r19,1
  80cfb4:	0081ffc4 	movi	r2,2047
  80cfb8:	000b883a 	mov	r5,zero
  80cfbc:	0025883a 	mov	r18,zero
  80cfc0:	1004953a 	slli	r2,r2,20
  80cfc4:	18c03fcc 	andi	r3,r3,255
  80cfc8:	04400434 	movhi	r17,16
  80cfcc:	8c7fffc4 	addi	r17,r17,-1
  80cfd0:	180697fa 	slli	r3,r3,31
  80cfd4:	2c4a703a 	and	r5,r5,r17
  80cfd8:	288ab03a 	or	r5,r5,r2
  80cfdc:	28c6b03a 	or	r3,r5,r3
  80cfe0:	9005883a 	mov	r2,r18
  80cfe4:	dfc00d17 	ldw	ra,52(sp)
  80cfe8:	df000c17 	ldw	fp,48(sp)
  80cfec:	ddc00b17 	ldw	r23,44(sp)
  80cff0:	dd800a17 	ldw	r22,40(sp)
  80cff4:	dd400917 	ldw	r21,36(sp)
  80cff8:	dd000817 	ldw	r20,32(sp)
  80cffc:	dcc00717 	ldw	r19,28(sp)
  80d000:	dc800617 	ldw	r18,24(sp)
  80d004:	dc400517 	ldw	r17,20(sp)
  80d008:	dc000417 	ldw	r16,16(sp)
  80d00c:	dec00e04 	addi	sp,sp,56
  80d010:	f800283a 	ret
  80d014:	2404b03a 	or	r2,r4,r16
  80d018:	2027883a 	mov	r19,r4
  80d01c:	10003926 	beq	r2,zero,80d104 <__divdf3+0x2c0>
  80d020:	80012e26 	beq	r16,zero,80d4dc <__divdf3+0x698>
  80d024:	8009883a 	mov	r4,r16
  80d028:	d9800315 	stw	r6,12(sp)
  80d02c:	d9c00215 	stw	r7,8(sp)
  80d030:	0801d980 	call	801d98 <__clzsi2>
  80d034:	d9800317 	ldw	r6,12(sp)
  80d038:	d9c00217 	ldw	r7,8(sp)
  80d03c:	113ffd44 	addi	r4,r2,-11
  80d040:	00c00704 	movi	r3,28
  80d044:	19012116 	blt	r3,r4,80d4cc <__divdf3+0x688>
  80d048:	00c00744 	movi	r3,29
  80d04c:	147ffe04 	addi	r17,r2,-8
  80d050:	1907c83a 	sub	r3,r3,r4
  80d054:	8460983a 	sll	r16,r16,r17
  80d058:	98c6d83a 	srl	r3,r19,r3
  80d05c:	9c64983a 	sll	r18,r19,r17
  80d060:	1c20b03a 	or	r16,r3,r16
  80d064:	1080fcc4 	addi	r2,r2,1011
  80d068:	00abc83a 	sub	r21,zero,r2
  80d06c:	0027883a 	mov	r19,zero
  80d070:	0013883a 	mov	r9,zero
  80d074:	003f9106 	br	80cebc <__alt_data_end+0xff80cebc>
  80d078:	3446b03a 	or	r3,r6,r17
  80d07c:	18001f1e 	bne	r3,zero,80d0fc <__divdf3+0x2b8>
  80d080:	0023883a 	mov	r17,zero
  80d084:	0011883a 	mov	r8,zero
  80d088:	01c00084 	movi	r7,2
  80d08c:	003f9d06 	br	80cf04 <__alt_data_end+0xff80cf04>
  80d090:	3446b03a 	or	r3,r6,r17
  80d094:	18001526 	beq	r3,zero,80d0ec <__divdf3+0x2a8>
  80d098:	88011b26 	beq	r17,zero,80d508 <__divdf3+0x6c4>
  80d09c:	8809883a 	mov	r4,r17
  80d0a0:	d9800315 	stw	r6,12(sp)
  80d0a4:	da400115 	stw	r9,4(sp)
  80d0a8:	0801d980 	call	801d98 <__clzsi2>
  80d0ac:	d9800317 	ldw	r6,12(sp)
  80d0b0:	da400117 	ldw	r9,4(sp)
  80d0b4:	113ffd44 	addi	r4,r2,-11
  80d0b8:	00c00704 	movi	r3,28
  80d0bc:	19010e16 	blt	r3,r4,80d4f8 <__divdf3+0x6b4>
  80d0c0:	00c00744 	movi	r3,29
  80d0c4:	123ffe04 	addi	r8,r2,-8
  80d0c8:	1907c83a 	sub	r3,r3,r4
  80d0cc:	8a22983a 	sll	r17,r17,r8
  80d0d0:	30c6d83a 	srl	r3,r6,r3
  80d0d4:	3210983a 	sll	r8,r6,r8
  80d0d8:	1c62b03a 	or	r17,r3,r17
  80d0dc:	1080fcc4 	addi	r2,r2,1011
  80d0e0:	0085c83a 	sub	r2,zero,r2
  80d0e4:	000f883a 	mov	r7,zero
  80d0e8:	003f8606 	br	80cf04 <__alt_data_end+0xff80cf04>
  80d0ec:	0023883a 	mov	r17,zero
  80d0f0:	0011883a 	mov	r8,zero
  80d0f4:	01c00044 	movi	r7,1
  80d0f8:	003f8206 	br	80cf04 <__alt_data_end+0xff80cf04>
  80d0fc:	01c000c4 	movi	r7,3
  80d100:	003f8006 	br	80cf04 <__alt_data_end+0xff80cf04>
  80d104:	04c00104 	movi	r19,4
  80d108:	0021883a 	mov	r16,zero
  80d10c:	0025883a 	mov	r18,zero
  80d110:	02400044 	movi	r9,1
  80d114:	003f6906 	br	80cebc <__alt_data_end+0xff80cebc>
  80d118:	04c00304 	movi	r19,12
  80d11c:	024000c4 	movi	r9,3
  80d120:	003f6606 	br	80cebc <__alt_data_end+0xff80cebc>
  80d124:	01400434 	movhi	r5,16
  80d128:	0007883a 	mov	r3,zero
  80d12c:	297fffc4 	addi	r5,r5,-1
  80d130:	04bfffc4 	movi	r18,-1
  80d134:	0081ffc4 	movi	r2,2047
  80d138:	003fa106 	br	80cfc0 <__alt_data_end+0xff80cfc0>
  80d13c:	00c00044 	movi	r3,1
  80d140:	1887c83a 	sub	r3,r3,r2
  80d144:	01000e04 	movi	r4,56
  80d148:	20c1210e 	bge	r4,r3,80d5d0 <__divdf3+0x78c>
  80d14c:	98c0004c 	andi	r3,r19,1
  80d150:	0005883a 	mov	r2,zero
  80d154:	000b883a 	mov	r5,zero
  80d158:	0025883a 	mov	r18,zero
  80d15c:	003f9806 	br	80cfc0 <__alt_data_end+0xff80cfc0>
  80d160:	8c00fd36 	bltu	r17,r16,80d558 <__divdf3+0x714>
  80d164:	8440fb26 	beq	r16,r17,80d554 <__divdf3+0x710>
  80d168:	8007883a 	mov	r3,r16
  80d16c:	ad7fffc4 	addi	r21,r21,-1
  80d170:	0021883a 	mov	r16,zero
  80d174:	4004d63a 	srli	r2,r8,24
  80d178:	8822923a 	slli	r17,r17,8
  80d17c:	1809883a 	mov	r4,r3
  80d180:	402c923a 	slli	r22,r8,8
  80d184:	88b8b03a 	or	fp,r17,r2
  80d188:	e028d43a 	srli	r20,fp,16
  80d18c:	d8c00015 	stw	r3,0(sp)
  80d190:	e5ffffcc 	andi	r23,fp,65535
  80d194:	a00b883a 	mov	r5,r20
  80d198:	080cd880 	call	80cd88 <__udivsi3>
  80d19c:	d8c00017 	ldw	r3,0(sp)
  80d1a0:	a00b883a 	mov	r5,r20
  80d1a4:	d8800315 	stw	r2,12(sp)
  80d1a8:	1809883a 	mov	r4,r3
  80d1ac:	080cdec0 	call	80cdec <__umodsi3>
  80d1b0:	d9800317 	ldw	r6,12(sp)
  80d1b4:	1006943a 	slli	r3,r2,16
  80d1b8:	9004d43a 	srli	r2,r18,16
  80d1bc:	b9a3383a 	mul	r17,r23,r6
  80d1c0:	10c4b03a 	or	r2,r2,r3
  80d1c4:	1440062e 	bgeu	r2,r17,80d1e0 <__divdf3+0x39c>
  80d1c8:	1705883a 	add	r2,r2,fp
  80d1cc:	30ffffc4 	addi	r3,r6,-1
  80d1d0:	1700ee36 	bltu	r2,fp,80d58c <__divdf3+0x748>
  80d1d4:	1440ed2e 	bgeu	r2,r17,80d58c <__divdf3+0x748>
  80d1d8:	31bfff84 	addi	r6,r6,-2
  80d1dc:	1705883a 	add	r2,r2,fp
  80d1e0:	1463c83a 	sub	r17,r2,r17
  80d1e4:	a00b883a 	mov	r5,r20
  80d1e8:	8809883a 	mov	r4,r17
  80d1ec:	d9800315 	stw	r6,12(sp)
  80d1f0:	080cd880 	call	80cd88 <__udivsi3>
  80d1f4:	a00b883a 	mov	r5,r20
  80d1f8:	8809883a 	mov	r4,r17
  80d1fc:	d8800215 	stw	r2,8(sp)
  80d200:	080cdec0 	call	80cdec <__umodsi3>
  80d204:	d9c00217 	ldw	r7,8(sp)
  80d208:	1004943a 	slli	r2,r2,16
  80d20c:	94bfffcc 	andi	r18,r18,65535
  80d210:	b9d1383a 	mul	r8,r23,r7
  80d214:	90a4b03a 	or	r18,r18,r2
  80d218:	d9800317 	ldw	r6,12(sp)
  80d21c:	9200062e 	bgeu	r18,r8,80d238 <__divdf3+0x3f4>
  80d220:	9725883a 	add	r18,r18,fp
  80d224:	38bfffc4 	addi	r2,r7,-1
  80d228:	9700d636 	bltu	r18,fp,80d584 <__divdf3+0x740>
  80d22c:	9200d52e 	bgeu	r18,r8,80d584 <__divdf3+0x740>
  80d230:	39ffff84 	addi	r7,r7,-2
  80d234:	9725883a 	add	r18,r18,fp
  80d238:	3004943a 	slli	r2,r6,16
  80d23c:	b012d43a 	srli	r9,r22,16
  80d240:	b1bfffcc 	andi	r6,r22,65535
  80d244:	11e2b03a 	or	r17,r2,r7
  80d248:	8806d43a 	srli	r3,r17,16
  80d24c:	893fffcc 	andi	r4,r17,65535
  80d250:	218b383a 	mul	r5,r4,r6
  80d254:	30c5383a 	mul	r2,r6,r3
  80d258:	2249383a 	mul	r4,r4,r9
  80d25c:	280ed43a 	srli	r7,r5,16
  80d260:	9225c83a 	sub	r18,r18,r8
  80d264:	2089883a 	add	r4,r4,r2
  80d268:	3909883a 	add	r4,r7,r4
  80d26c:	1a47383a 	mul	r3,r3,r9
  80d270:	2080022e 	bgeu	r4,r2,80d27c <__divdf3+0x438>
  80d274:	00800074 	movhi	r2,1
  80d278:	1887883a 	add	r3,r3,r2
  80d27c:	2004d43a 	srli	r2,r4,16
  80d280:	2008943a 	slli	r4,r4,16
  80d284:	297fffcc 	andi	r5,r5,65535
  80d288:	10c7883a 	add	r3,r2,r3
  80d28c:	2149883a 	add	r4,r4,r5
  80d290:	90c0a536 	bltu	r18,r3,80d528 <__divdf3+0x6e4>
  80d294:	90c0bf26 	beq	r18,r3,80d594 <__divdf3+0x750>
  80d298:	90c7c83a 	sub	r3,r18,r3
  80d29c:	810fc83a 	sub	r7,r16,r4
  80d2a0:	81e5803a 	cmpltu	r18,r16,r7
  80d2a4:	1ca5c83a 	sub	r18,r3,r18
  80d2a8:	e480c126 	beq	fp,r18,80d5b0 <__divdf3+0x76c>
  80d2ac:	a00b883a 	mov	r5,r20
  80d2b0:	9009883a 	mov	r4,r18
  80d2b4:	d9800315 	stw	r6,12(sp)
  80d2b8:	d9c00215 	stw	r7,8(sp)
  80d2bc:	da400115 	stw	r9,4(sp)
  80d2c0:	080cd880 	call	80cd88 <__udivsi3>
  80d2c4:	a00b883a 	mov	r5,r20
  80d2c8:	9009883a 	mov	r4,r18
  80d2cc:	d8800015 	stw	r2,0(sp)
  80d2d0:	080cdec0 	call	80cdec <__umodsi3>
  80d2d4:	d9c00217 	ldw	r7,8(sp)
  80d2d8:	da000017 	ldw	r8,0(sp)
  80d2dc:	1006943a 	slli	r3,r2,16
  80d2e0:	3804d43a 	srli	r2,r7,16
  80d2e4:	ba21383a 	mul	r16,r23,r8
  80d2e8:	d9800317 	ldw	r6,12(sp)
  80d2ec:	10c4b03a 	or	r2,r2,r3
  80d2f0:	da400117 	ldw	r9,4(sp)
  80d2f4:	1400062e 	bgeu	r2,r16,80d310 <__divdf3+0x4cc>
  80d2f8:	1705883a 	add	r2,r2,fp
  80d2fc:	40ffffc4 	addi	r3,r8,-1
  80d300:	1700ad36 	bltu	r2,fp,80d5b8 <__divdf3+0x774>
  80d304:	1400ac2e 	bgeu	r2,r16,80d5b8 <__divdf3+0x774>
  80d308:	423fff84 	addi	r8,r8,-2
  80d30c:	1705883a 	add	r2,r2,fp
  80d310:	1421c83a 	sub	r16,r2,r16
  80d314:	a00b883a 	mov	r5,r20
  80d318:	8009883a 	mov	r4,r16
  80d31c:	d9800315 	stw	r6,12(sp)
  80d320:	d9c00215 	stw	r7,8(sp)
  80d324:	da000015 	stw	r8,0(sp)
  80d328:	da400115 	stw	r9,4(sp)
  80d32c:	080cd880 	call	80cd88 <__udivsi3>
  80d330:	8009883a 	mov	r4,r16
  80d334:	a00b883a 	mov	r5,r20
  80d338:	1025883a 	mov	r18,r2
  80d33c:	080cdec0 	call	80cdec <__umodsi3>
  80d340:	d9c00217 	ldw	r7,8(sp)
  80d344:	1004943a 	slli	r2,r2,16
  80d348:	bcaf383a 	mul	r23,r23,r18
  80d34c:	393fffcc 	andi	r4,r7,65535
  80d350:	2088b03a 	or	r4,r4,r2
  80d354:	d9800317 	ldw	r6,12(sp)
  80d358:	da000017 	ldw	r8,0(sp)
  80d35c:	da400117 	ldw	r9,4(sp)
  80d360:	25c0062e 	bgeu	r4,r23,80d37c <__divdf3+0x538>
  80d364:	2709883a 	add	r4,r4,fp
  80d368:	90bfffc4 	addi	r2,r18,-1
  80d36c:	27009436 	bltu	r4,fp,80d5c0 <__divdf3+0x77c>
  80d370:	25c0932e 	bgeu	r4,r23,80d5c0 <__divdf3+0x77c>
  80d374:	94bfff84 	addi	r18,r18,-2
  80d378:	2709883a 	add	r4,r4,fp
  80d37c:	4004943a 	slli	r2,r8,16
  80d380:	25efc83a 	sub	r23,r4,r23
  80d384:	1490b03a 	or	r8,r2,r18
  80d388:	4008d43a 	srli	r4,r8,16
  80d38c:	40ffffcc 	andi	r3,r8,65535
  80d390:	30c5383a 	mul	r2,r6,r3
  80d394:	1a47383a 	mul	r3,r3,r9
  80d398:	310d383a 	mul	r6,r6,r4
  80d39c:	100ad43a 	srli	r5,r2,16
  80d3a0:	4913383a 	mul	r9,r9,r4
  80d3a4:	1987883a 	add	r3,r3,r6
  80d3a8:	28c7883a 	add	r3,r5,r3
  80d3ac:	1980022e 	bgeu	r3,r6,80d3b8 <__divdf3+0x574>
  80d3b0:	01000074 	movhi	r4,1
  80d3b4:	4913883a 	add	r9,r9,r4
  80d3b8:	1808d43a 	srli	r4,r3,16
  80d3bc:	1806943a 	slli	r3,r3,16
  80d3c0:	10bfffcc 	andi	r2,r2,65535
  80d3c4:	2253883a 	add	r9,r4,r9
  80d3c8:	1887883a 	add	r3,r3,r2
  80d3cc:	ba403836 	bltu	r23,r9,80d4b0 <__divdf3+0x66c>
  80d3d0:	ba403626 	beq	r23,r9,80d4ac <__divdf3+0x668>
  80d3d4:	42000054 	ori	r8,r8,1
  80d3d8:	a880ffc4 	addi	r2,r21,1023
  80d3dc:	00bf570e 	bge	zero,r2,80d13c <__alt_data_end+0xff80d13c>
  80d3e0:	40c001cc 	andi	r3,r8,7
  80d3e4:	18000726 	beq	r3,zero,80d404 <__divdf3+0x5c0>
  80d3e8:	40c003cc 	andi	r3,r8,15
  80d3ec:	01000104 	movi	r4,4
  80d3f0:	19000426 	beq	r3,r4,80d404 <__divdf3+0x5c0>
  80d3f4:	4107883a 	add	r3,r8,r4
  80d3f8:	1a11803a 	cmpltu	r8,r3,r8
  80d3fc:	8a23883a 	add	r17,r17,r8
  80d400:	1811883a 	mov	r8,r3
  80d404:	88c0402c 	andhi	r3,r17,256
  80d408:	18000426 	beq	r3,zero,80d41c <__divdf3+0x5d8>
  80d40c:	00ffc034 	movhi	r3,65280
  80d410:	18ffffc4 	addi	r3,r3,-1
  80d414:	a8810004 	addi	r2,r21,1024
  80d418:	88e2703a 	and	r17,r17,r3
  80d41c:	00c1ff84 	movi	r3,2046
  80d420:	18bee316 	blt	r3,r2,80cfb0 <__alt_data_end+0xff80cfb0>
  80d424:	8824977a 	slli	r18,r17,29
  80d428:	4010d0fa 	srli	r8,r8,3
  80d42c:	8822927a 	slli	r17,r17,9
  80d430:	1081ffcc 	andi	r2,r2,2047
  80d434:	9224b03a 	or	r18,r18,r8
  80d438:	880ad33a 	srli	r5,r17,12
  80d43c:	98c0004c 	andi	r3,r19,1
  80d440:	003edf06 	br	80cfc0 <__alt_data_end+0xff80cfc0>
  80d444:	8080022c 	andhi	r2,r16,8
  80d448:	10001226 	beq	r2,zero,80d494 <__divdf3+0x650>
  80d44c:	8880022c 	andhi	r2,r17,8
  80d450:	1000101e 	bne	r2,zero,80d494 <__divdf3+0x650>
  80d454:	00800434 	movhi	r2,16
  80d458:	89400234 	orhi	r5,r17,8
  80d45c:	10bfffc4 	addi	r2,r2,-1
  80d460:	b007883a 	mov	r3,r22
  80d464:	288a703a 	and	r5,r5,r2
  80d468:	4025883a 	mov	r18,r8
  80d46c:	003f3106 	br	80d134 <__alt_data_end+0xff80d134>
  80d470:	008000c4 	movi	r2,3
  80d474:	3880a626 	beq	r7,r2,80d710 <__divdf3+0x8cc>
  80d478:	00800044 	movi	r2,1
  80d47c:	3880521e 	bne	r7,r2,80d5c8 <__divdf3+0x784>
  80d480:	b807883a 	mov	r3,r23
  80d484:	0005883a 	mov	r2,zero
  80d488:	000b883a 	mov	r5,zero
  80d48c:	0025883a 	mov	r18,zero
  80d490:	003ecb06 	br	80cfc0 <__alt_data_end+0xff80cfc0>
  80d494:	00800434 	movhi	r2,16
  80d498:	81400234 	orhi	r5,r16,8
  80d49c:	10bfffc4 	addi	r2,r2,-1
  80d4a0:	a007883a 	mov	r3,r20
  80d4a4:	288a703a 	and	r5,r5,r2
  80d4a8:	003f2206 	br	80d134 <__alt_data_end+0xff80d134>
  80d4ac:	183fca26 	beq	r3,zero,80d3d8 <__alt_data_end+0xff80d3d8>
  80d4b0:	e5ef883a 	add	r23,fp,r23
  80d4b4:	40bfffc4 	addi	r2,r8,-1
  80d4b8:	bf00392e 	bgeu	r23,fp,80d5a0 <__divdf3+0x75c>
  80d4bc:	1011883a 	mov	r8,r2
  80d4c0:	ba7fc41e 	bne	r23,r9,80d3d4 <__alt_data_end+0xff80d3d4>
  80d4c4:	b0ffc31e 	bne	r22,r3,80d3d4 <__alt_data_end+0xff80d3d4>
  80d4c8:	003fc306 	br	80d3d8 <__alt_data_end+0xff80d3d8>
  80d4cc:	143ff604 	addi	r16,r2,-40
  80d4d0:	9c20983a 	sll	r16,r19,r16
  80d4d4:	0025883a 	mov	r18,zero
  80d4d8:	003ee206 	br	80d064 <__alt_data_end+0xff80d064>
  80d4dc:	d9800315 	stw	r6,12(sp)
  80d4e0:	d9c00215 	stw	r7,8(sp)
  80d4e4:	0801d980 	call	801d98 <__clzsi2>
  80d4e8:	10800804 	addi	r2,r2,32
  80d4ec:	d9c00217 	ldw	r7,8(sp)
  80d4f0:	d9800317 	ldw	r6,12(sp)
  80d4f4:	003ed106 	br	80d03c <__alt_data_end+0xff80d03c>
  80d4f8:	147ff604 	addi	r17,r2,-40
  80d4fc:	3462983a 	sll	r17,r6,r17
  80d500:	0011883a 	mov	r8,zero
  80d504:	003ef506 	br	80d0dc <__alt_data_end+0xff80d0dc>
  80d508:	3009883a 	mov	r4,r6
  80d50c:	d9800315 	stw	r6,12(sp)
  80d510:	da400115 	stw	r9,4(sp)
  80d514:	0801d980 	call	801d98 <__clzsi2>
  80d518:	10800804 	addi	r2,r2,32
  80d51c:	da400117 	ldw	r9,4(sp)
  80d520:	d9800317 	ldw	r6,12(sp)
  80d524:	003ee306 	br	80d0b4 <__alt_data_end+0xff80d0b4>
  80d528:	85a1883a 	add	r16,r16,r22
  80d52c:	8585803a 	cmpltu	r2,r16,r22
  80d530:	1705883a 	add	r2,r2,fp
  80d534:	14a5883a 	add	r18,r2,r18
  80d538:	88bfffc4 	addi	r2,r17,-1
  80d53c:	e4800c2e 	bgeu	fp,r18,80d570 <__divdf3+0x72c>
  80d540:	90c03e36 	bltu	r18,r3,80d63c <__divdf3+0x7f8>
  80d544:	1c806926 	beq	r3,r18,80d6ec <__divdf3+0x8a8>
  80d548:	90c7c83a 	sub	r3,r18,r3
  80d54c:	1023883a 	mov	r17,r2
  80d550:	003f5206 	br	80d29c <__alt_data_end+0xff80d29c>
  80d554:	923f0436 	bltu	r18,r8,80d168 <__alt_data_end+0xff80d168>
  80d558:	800897fa 	slli	r4,r16,31
  80d55c:	9004d07a 	srli	r2,r18,1
  80d560:	8006d07a 	srli	r3,r16,1
  80d564:	902097fa 	slli	r16,r18,31
  80d568:	20a4b03a 	or	r18,r4,r2
  80d56c:	003f0106 	br	80d174 <__alt_data_end+0xff80d174>
  80d570:	e4bff51e 	bne	fp,r18,80d548 <__alt_data_end+0xff80d548>
  80d574:	85bff22e 	bgeu	r16,r22,80d540 <__alt_data_end+0xff80d540>
  80d578:	e0c7c83a 	sub	r3,fp,r3
  80d57c:	1023883a 	mov	r17,r2
  80d580:	003f4606 	br	80d29c <__alt_data_end+0xff80d29c>
  80d584:	100f883a 	mov	r7,r2
  80d588:	003f2b06 	br	80d238 <__alt_data_end+0xff80d238>
  80d58c:	180d883a 	mov	r6,r3
  80d590:	003f1306 	br	80d1e0 <__alt_data_end+0xff80d1e0>
  80d594:	813fe436 	bltu	r16,r4,80d528 <__alt_data_end+0xff80d528>
  80d598:	0007883a 	mov	r3,zero
  80d59c:	003f3f06 	br	80d29c <__alt_data_end+0xff80d29c>
  80d5a0:	ba402c36 	bltu	r23,r9,80d654 <__divdf3+0x810>
  80d5a4:	4dc05426 	beq	r9,r23,80d6f8 <__divdf3+0x8b4>
  80d5a8:	1011883a 	mov	r8,r2
  80d5ac:	003f8906 	br	80d3d4 <__alt_data_end+0xff80d3d4>
  80d5b0:	023fffc4 	movi	r8,-1
  80d5b4:	003f8806 	br	80d3d8 <__alt_data_end+0xff80d3d8>
  80d5b8:	1811883a 	mov	r8,r3
  80d5bc:	003f5406 	br	80d310 <__alt_data_end+0xff80d310>
  80d5c0:	1025883a 	mov	r18,r2
  80d5c4:	003f6d06 	br	80d37c <__alt_data_end+0xff80d37c>
  80d5c8:	b827883a 	mov	r19,r23
  80d5cc:	003f8206 	br	80d3d8 <__alt_data_end+0xff80d3d8>
  80d5d0:	010007c4 	movi	r4,31
  80d5d4:	20c02616 	blt	r4,r3,80d670 <__divdf3+0x82c>
  80d5d8:	00800804 	movi	r2,32
  80d5dc:	10c5c83a 	sub	r2,r2,r3
  80d5e0:	888a983a 	sll	r5,r17,r2
  80d5e4:	40c8d83a 	srl	r4,r8,r3
  80d5e8:	4084983a 	sll	r2,r8,r2
  80d5ec:	88e2d83a 	srl	r17,r17,r3
  80d5f0:	2906b03a 	or	r3,r5,r4
  80d5f4:	1004c03a 	cmpne	r2,r2,zero
  80d5f8:	1886b03a 	or	r3,r3,r2
  80d5fc:	188001cc 	andi	r2,r3,7
  80d600:	10000726 	beq	r2,zero,80d620 <__divdf3+0x7dc>
  80d604:	188003cc 	andi	r2,r3,15
  80d608:	01000104 	movi	r4,4
  80d60c:	11000426 	beq	r2,r4,80d620 <__divdf3+0x7dc>
  80d610:	1805883a 	mov	r2,r3
  80d614:	10c00104 	addi	r3,r2,4
  80d618:	1885803a 	cmpltu	r2,r3,r2
  80d61c:	88a3883a 	add	r17,r17,r2
  80d620:	8880202c 	andhi	r2,r17,128
  80d624:	10002726 	beq	r2,zero,80d6c4 <__divdf3+0x880>
  80d628:	98c0004c 	andi	r3,r19,1
  80d62c:	00800044 	movi	r2,1
  80d630:	000b883a 	mov	r5,zero
  80d634:	0025883a 	mov	r18,zero
  80d638:	003e6106 	br	80cfc0 <__alt_data_end+0xff80cfc0>
  80d63c:	85a1883a 	add	r16,r16,r22
  80d640:	8585803a 	cmpltu	r2,r16,r22
  80d644:	1705883a 	add	r2,r2,fp
  80d648:	14a5883a 	add	r18,r2,r18
  80d64c:	8c7fff84 	addi	r17,r17,-2
  80d650:	003f1106 	br	80d298 <__alt_data_end+0xff80d298>
  80d654:	b589883a 	add	r4,r22,r22
  80d658:	25ad803a 	cmpltu	r22,r4,r22
  80d65c:	b739883a 	add	fp,r22,fp
  80d660:	40bfff84 	addi	r2,r8,-2
  80d664:	bf2f883a 	add	r23,r23,fp
  80d668:	202d883a 	mov	r22,r4
  80d66c:	003f9306 	br	80d4bc <__alt_data_end+0xff80d4bc>
  80d670:	013ff844 	movi	r4,-31
  80d674:	2085c83a 	sub	r2,r4,r2
  80d678:	8888d83a 	srl	r4,r17,r2
  80d67c:	00800804 	movi	r2,32
  80d680:	18802126 	beq	r3,r2,80d708 <__divdf3+0x8c4>
  80d684:	00801004 	movi	r2,64
  80d688:	10c5c83a 	sub	r2,r2,r3
  80d68c:	8884983a 	sll	r2,r17,r2
  80d690:	1204b03a 	or	r2,r2,r8
  80d694:	1004c03a 	cmpne	r2,r2,zero
  80d698:	2084b03a 	or	r2,r4,r2
  80d69c:	144001cc 	andi	r17,r2,7
  80d6a0:	88000d1e 	bne	r17,zero,80d6d8 <__divdf3+0x894>
  80d6a4:	000b883a 	mov	r5,zero
  80d6a8:	1024d0fa 	srli	r18,r2,3
  80d6ac:	98c0004c 	andi	r3,r19,1
  80d6b0:	0005883a 	mov	r2,zero
  80d6b4:	9464b03a 	or	r18,r18,r17
  80d6b8:	003e4106 	br	80cfc0 <__alt_data_end+0xff80cfc0>
  80d6bc:	1007883a 	mov	r3,r2
  80d6c0:	0023883a 	mov	r17,zero
  80d6c4:	880a927a 	slli	r5,r17,9
  80d6c8:	1805883a 	mov	r2,r3
  80d6cc:	8822977a 	slli	r17,r17,29
  80d6d0:	280ad33a 	srli	r5,r5,12
  80d6d4:	003ff406 	br	80d6a8 <__alt_data_end+0xff80d6a8>
  80d6d8:	10c003cc 	andi	r3,r2,15
  80d6dc:	01000104 	movi	r4,4
  80d6e0:	193ff626 	beq	r3,r4,80d6bc <__alt_data_end+0xff80d6bc>
  80d6e4:	0023883a 	mov	r17,zero
  80d6e8:	003fca06 	br	80d614 <__alt_data_end+0xff80d614>
  80d6ec:	813fd336 	bltu	r16,r4,80d63c <__alt_data_end+0xff80d63c>
  80d6f0:	1023883a 	mov	r17,r2
  80d6f4:	003fa806 	br	80d598 <__alt_data_end+0xff80d598>
  80d6f8:	b0ffd636 	bltu	r22,r3,80d654 <__alt_data_end+0xff80d654>
  80d6fc:	1011883a 	mov	r8,r2
  80d700:	b0ff341e 	bne	r22,r3,80d3d4 <__alt_data_end+0xff80d3d4>
  80d704:	003f3406 	br	80d3d8 <__alt_data_end+0xff80d3d8>
  80d708:	0005883a 	mov	r2,zero
  80d70c:	003fe006 	br	80d690 <__alt_data_end+0xff80d690>
  80d710:	00800434 	movhi	r2,16
  80d714:	89400234 	orhi	r5,r17,8
  80d718:	10bfffc4 	addi	r2,r2,-1
  80d71c:	b807883a 	mov	r3,r23
  80d720:	288a703a 	and	r5,r5,r2
  80d724:	4025883a 	mov	r18,r8
  80d728:	003e8206 	br	80d134 <__alt_data_end+0xff80d134>

0080d72c <__eqdf2>:
  80d72c:	2804d53a 	srli	r2,r5,20
  80d730:	3806d53a 	srli	r3,r7,20
  80d734:	02000434 	movhi	r8,16
  80d738:	423fffc4 	addi	r8,r8,-1
  80d73c:	1081ffcc 	andi	r2,r2,2047
  80d740:	0281ffc4 	movi	r10,2047
  80d744:	2a12703a 	and	r9,r5,r8
  80d748:	18c1ffcc 	andi	r3,r3,2047
  80d74c:	3a10703a 	and	r8,r7,r8
  80d750:	280ad7fa 	srli	r5,r5,31
  80d754:	380ed7fa 	srli	r7,r7,31
  80d758:	12801026 	beq	r2,r10,80d79c <__eqdf2+0x70>
  80d75c:	0281ffc4 	movi	r10,2047
  80d760:	1a800a26 	beq	r3,r10,80d78c <__eqdf2+0x60>
  80d764:	10c00226 	beq	r2,r3,80d770 <__eqdf2+0x44>
  80d768:	00800044 	movi	r2,1
  80d76c:	f800283a 	ret
  80d770:	4a3ffd1e 	bne	r9,r8,80d768 <__alt_data_end+0xff80d768>
  80d774:	21bffc1e 	bne	r4,r6,80d768 <__alt_data_end+0xff80d768>
  80d778:	29c00c26 	beq	r5,r7,80d7ac <__eqdf2+0x80>
  80d77c:	103ffa1e 	bne	r2,zero,80d768 <__alt_data_end+0xff80d768>
  80d780:	2244b03a 	or	r2,r4,r9
  80d784:	1004c03a 	cmpne	r2,r2,zero
  80d788:	f800283a 	ret
  80d78c:	3214b03a 	or	r10,r6,r8
  80d790:	503ff426 	beq	r10,zero,80d764 <__alt_data_end+0xff80d764>
  80d794:	00800044 	movi	r2,1
  80d798:	f800283a 	ret
  80d79c:	2254b03a 	or	r10,r4,r9
  80d7a0:	503fee26 	beq	r10,zero,80d75c <__alt_data_end+0xff80d75c>
  80d7a4:	00800044 	movi	r2,1
  80d7a8:	f800283a 	ret
  80d7ac:	0005883a 	mov	r2,zero
  80d7b0:	f800283a 	ret

0080d7b4 <__gedf2>:
  80d7b4:	2804d53a 	srli	r2,r5,20
  80d7b8:	3806d53a 	srli	r3,r7,20
  80d7bc:	02000434 	movhi	r8,16
  80d7c0:	423fffc4 	addi	r8,r8,-1
  80d7c4:	1081ffcc 	andi	r2,r2,2047
  80d7c8:	0241ffc4 	movi	r9,2047
  80d7cc:	2a14703a 	and	r10,r5,r8
  80d7d0:	18c1ffcc 	andi	r3,r3,2047
  80d7d4:	3a10703a 	and	r8,r7,r8
  80d7d8:	280ad7fa 	srli	r5,r5,31
  80d7dc:	380ed7fa 	srli	r7,r7,31
  80d7e0:	12401d26 	beq	r2,r9,80d858 <__gedf2+0xa4>
  80d7e4:	0241ffc4 	movi	r9,2047
  80d7e8:	1a401226 	beq	r3,r9,80d834 <__gedf2+0x80>
  80d7ec:	1000081e 	bne	r2,zero,80d810 <__gedf2+0x5c>
  80d7f0:	2296b03a 	or	r11,r4,r10
  80d7f4:	5813003a 	cmpeq	r9,r11,zero
  80d7f8:	1800091e 	bne	r3,zero,80d820 <__gedf2+0x6c>
  80d7fc:	3218b03a 	or	r12,r6,r8
  80d800:	6000071e 	bne	r12,zero,80d820 <__gedf2+0x6c>
  80d804:	0005883a 	mov	r2,zero
  80d808:	5800101e 	bne	r11,zero,80d84c <__gedf2+0x98>
  80d80c:	f800283a 	ret
  80d810:	18000c1e 	bne	r3,zero,80d844 <__gedf2+0x90>
  80d814:	3212b03a 	or	r9,r6,r8
  80d818:	48000c26 	beq	r9,zero,80d84c <__gedf2+0x98>
  80d81c:	0013883a 	mov	r9,zero
  80d820:	39c03fcc 	andi	r7,r7,255
  80d824:	48000826 	beq	r9,zero,80d848 <__gedf2+0x94>
  80d828:	38000926 	beq	r7,zero,80d850 <__gedf2+0x9c>
  80d82c:	00800044 	movi	r2,1
  80d830:	f800283a 	ret
  80d834:	3212b03a 	or	r9,r6,r8
  80d838:	483fec26 	beq	r9,zero,80d7ec <__alt_data_end+0xff80d7ec>
  80d83c:	00bfff84 	movi	r2,-2
  80d840:	f800283a 	ret
  80d844:	39c03fcc 	andi	r7,r7,255
  80d848:	29c00626 	beq	r5,r7,80d864 <__gedf2+0xb0>
  80d84c:	283ff726 	beq	r5,zero,80d82c <__alt_data_end+0xff80d82c>
  80d850:	00bfffc4 	movi	r2,-1
  80d854:	f800283a 	ret
  80d858:	2292b03a 	or	r9,r4,r10
  80d85c:	483fe126 	beq	r9,zero,80d7e4 <__alt_data_end+0xff80d7e4>
  80d860:	003ff606 	br	80d83c <__alt_data_end+0xff80d83c>
  80d864:	18bff916 	blt	r3,r2,80d84c <__alt_data_end+0xff80d84c>
  80d868:	10c00316 	blt	r2,r3,80d878 <__gedf2+0xc4>
  80d86c:	42bff736 	bltu	r8,r10,80d84c <__alt_data_end+0xff80d84c>
  80d870:	52000326 	beq	r10,r8,80d880 <__gedf2+0xcc>
  80d874:	5200042e 	bgeu	r10,r8,80d888 <__gedf2+0xd4>
  80d878:	283fec1e 	bne	r5,zero,80d82c <__alt_data_end+0xff80d82c>
  80d87c:	003ff406 	br	80d850 <__alt_data_end+0xff80d850>
  80d880:	313ff236 	bltu	r6,r4,80d84c <__alt_data_end+0xff80d84c>
  80d884:	21bffc36 	bltu	r4,r6,80d878 <__alt_data_end+0xff80d878>
  80d888:	0005883a 	mov	r2,zero
  80d88c:	f800283a 	ret

0080d890 <__ledf2>:
  80d890:	2804d53a 	srli	r2,r5,20
  80d894:	3810d53a 	srli	r8,r7,20
  80d898:	00c00434 	movhi	r3,16
  80d89c:	18ffffc4 	addi	r3,r3,-1
  80d8a0:	1081ffcc 	andi	r2,r2,2047
  80d8a4:	0241ffc4 	movi	r9,2047
  80d8a8:	28d4703a 	and	r10,r5,r3
  80d8ac:	4201ffcc 	andi	r8,r8,2047
  80d8b0:	38c6703a 	and	r3,r7,r3
  80d8b4:	280ad7fa 	srli	r5,r5,31
  80d8b8:	380ed7fa 	srli	r7,r7,31
  80d8bc:	12401f26 	beq	r2,r9,80d93c <__ledf2+0xac>
  80d8c0:	0241ffc4 	movi	r9,2047
  80d8c4:	42401426 	beq	r8,r9,80d918 <__ledf2+0x88>
  80d8c8:	1000091e 	bne	r2,zero,80d8f0 <__ledf2+0x60>
  80d8cc:	2296b03a 	or	r11,r4,r10
  80d8d0:	5813003a 	cmpeq	r9,r11,zero
  80d8d4:	29403fcc 	andi	r5,r5,255
  80d8d8:	40000a1e 	bne	r8,zero,80d904 <__ledf2+0x74>
  80d8dc:	30d8b03a 	or	r12,r6,r3
  80d8e0:	6000081e 	bne	r12,zero,80d904 <__ledf2+0x74>
  80d8e4:	0005883a 	mov	r2,zero
  80d8e8:	5800111e 	bne	r11,zero,80d930 <__ledf2+0xa0>
  80d8ec:	f800283a 	ret
  80d8f0:	29403fcc 	andi	r5,r5,255
  80d8f4:	40000c1e 	bne	r8,zero,80d928 <__ledf2+0x98>
  80d8f8:	30d2b03a 	or	r9,r6,r3
  80d8fc:	48000c26 	beq	r9,zero,80d930 <__ledf2+0xa0>
  80d900:	0013883a 	mov	r9,zero
  80d904:	39c03fcc 	andi	r7,r7,255
  80d908:	48000826 	beq	r9,zero,80d92c <__ledf2+0x9c>
  80d90c:	38001126 	beq	r7,zero,80d954 <__ledf2+0xc4>
  80d910:	00800044 	movi	r2,1
  80d914:	f800283a 	ret
  80d918:	30d2b03a 	or	r9,r6,r3
  80d91c:	483fea26 	beq	r9,zero,80d8c8 <__alt_data_end+0xff80d8c8>
  80d920:	00800084 	movi	r2,2
  80d924:	f800283a 	ret
  80d928:	39c03fcc 	andi	r7,r7,255
  80d92c:	39400726 	beq	r7,r5,80d94c <__ledf2+0xbc>
  80d930:	2800081e 	bne	r5,zero,80d954 <__ledf2+0xc4>
  80d934:	00800044 	movi	r2,1
  80d938:	f800283a 	ret
  80d93c:	2292b03a 	or	r9,r4,r10
  80d940:	483fdf26 	beq	r9,zero,80d8c0 <__alt_data_end+0xff80d8c0>
  80d944:	00800084 	movi	r2,2
  80d948:	f800283a 	ret
  80d94c:	4080030e 	bge	r8,r2,80d95c <__ledf2+0xcc>
  80d950:	383fef26 	beq	r7,zero,80d910 <__alt_data_end+0xff80d910>
  80d954:	00bfffc4 	movi	r2,-1
  80d958:	f800283a 	ret
  80d95c:	123feb16 	blt	r2,r8,80d90c <__alt_data_end+0xff80d90c>
  80d960:	1abff336 	bltu	r3,r10,80d930 <__alt_data_end+0xff80d930>
  80d964:	50c00326 	beq	r10,r3,80d974 <__ledf2+0xe4>
  80d968:	50c0042e 	bgeu	r10,r3,80d97c <__ledf2+0xec>
  80d96c:	283fe81e 	bne	r5,zero,80d910 <__alt_data_end+0xff80d910>
  80d970:	003ff806 	br	80d954 <__alt_data_end+0xff80d954>
  80d974:	313fee36 	bltu	r6,r4,80d930 <__alt_data_end+0xff80d930>
  80d978:	21bffc36 	bltu	r4,r6,80d96c <__alt_data_end+0xff80d96c>
  80d97c:	0005883a 	mov	r2,zero
  80d980:	f800283a 	ret

0080d984 <__subdf3>:
  80d984:	02000434 	movhi	r8,16
  80d988:	423fffc4 	addi	r8,r8,-1
  80d98c:	defffb04 	addi	sp,sp,-20
  80d990:	2a14703a 	and	r10,r5,r8
  80d994:	3812d53a 	srli	r9,r7,20
  80d998:	3a10703a 	and	r8,r7,r8
  80d99c:	2006d77a 	srli	r3,r4,29
  80d9a0:	3004d77a 	srli	r2,r6,29
  80d9a4:	dc000015 	stw	r16,0(sp)
  80d9a8:	501490fa 	slli	r10,r10,3
  80d9ac:	2820d53a 	srli	r16,r5,20
  80d9b0:	401090fa 	slli	r8,r8,3
  80d9b4:	dc800215 	stw	r18,8(sp)
  80d9b8:	dc400115 	stw	r17,4(sp)
  80d9bc:	dfc00415 	stw	ra,16(sp)
  80d9c0:	202290fa 	slli	r17,r4,3
  80d9c4:	dcc00315 	stw	r19,12(sp)
  80d9c8:	4a41ffcc 	andi	r9,r9,2047
  80d9cc:	0101ffc4 	movi	r4,2047
  80d9d0:	2824d7fa 	srli	r18,r5,31
  80d9d4:	8401ffcc 	andi	r16,r16,2047
  80d9d8:	50c6b03a 	or	r3,r10,r3
  80d9dc:	380ed7fa 	srli	r7,r7,31
  80d9e0:	408ab03a 	or	r5,r8,r2
  80d9e4:	300c90fa 	slli	r6,r6,3
  80d9e8:	49009626 	beq	r9,r4,80dc44 <__subdf3+0x2c0>
  80d9ec:	39c0005c 	xori	r7,r7,1
  80d9f0:	8245c83a 	sub	r2,r16,r9
  80d9f4:	3c807426 	beq	r7,r18,80dbc8 <__subdf3+0x244>
  80d9f8:	0080af0e 	bge	zero,r2,80dcb8 <__subdf3+0x334>
  80d9fc:	48002a1e 	bne	r9,zero,80daa8 <__subdf3+0x124>
  80da00:	2988b03a 	or	r4,r5,r6
  80da04:	20009a1e 	bne	r4,zero,80dc70 <__subdf3+0x2ec>
  80da08:	888001cc 	andi	r2,r17,7
  80da0c:	10000726 	beq	r2,zero,80da2c <__subdf3+0xa8>
  80da10:	888003cc 	andi	r2,r17,15
  80da14:	01000104 	movi	r4,4
  80da18:	11000426 	beq	r2,r4,80da2c <__subdf3+0xa8>
  80da1c:	890b883a 	add	r5,r17,r4
  80da20:	2c63803a 	cmpltu	r17,r5,r17
  80da24:	1c47883a 	add	r3,r3,r17
  80da28:	2823883a 	mov	r17,r5
  80da2c:	1880202c 	andhi	r2,r3,128
  80da30:	10005926 	beq	r2,zero,80db98 <__subdf3+0x214>
  80da34:	84000044 	addi	r16,r16,1
  80da38:	0081ffc4 	movi	r2,2047
  80da3c:	8080be26 	beq	r16,r2,80dd38 <__subdf3+0x3b4>
  80da40:	017fe034 	movhi	r5,65408
  80da44:	297fffc4 	addi	r5,r5,-1
  80da48:	1946703a 	and	r3,r3,r5
  80da4c:	1804977a 	slli	r2,r3,29
  80da50:	1806927a 	slli	r3,r3,9
  80da54:	8822d0fa 	srli	r17,r17,3
  80da58:	8401ffcc 	andi	r16,r16,2047
  80da5c:	180ad33a 	srli	r5,r3,12
  80da60:	9100004c 	andi	r4,r18,1
  80da64:	1444b03a 	or	r2,r2,r17
  80da68:	80c1ffcc 	andi	r3,r16,2047
  80da6c:	1820953a 	slli	r16,r3,20
  80da70:	20c03fcc 	andi	r3,r4,255
  80da74:	180897fa 	slli	r4,r3,31
  80da78:	00c00434 	movhi	r3,16
  80da7c:	18ffffc4 	addi	r3,r3,-1
  80da80:	28c6703a 	and	r3,r5,r3
  80da84:	1c06b03a 	or	r3,r3,r16
  80da88:	1906b03a 	or	r3,r3,r4
  80da8c:	dfc00417 	ldw	ra,16(sp)
  80da90:	dcc00317 	ldw	r19,12(sp)
  80da94:	dc800217 	ldw	r18,8(sp)
  80da98:	dc400117 	ldw	r17,4(sp)
  80da9c:	dc000017 	ldw	r16,0(sp)
  80daa0:	dec00504 	addi	sp,sp,20
  80daa4:	f800283a 	ret
  80daa8:	0101ffc4 	movi	r4,2047
  80daac:	813fd626 	beq	r16,r4,80da08 <__alt_data_end+0xff80da08>
  80dab0:	29402034 	orhi	r5,r5,128
  80dab4:	01000e04 	movi	r4,56
  80dab8:	2080a316 	blt	r4,r2,80dd48 <__subdf3+0x3c4>
  80dabc:	010007c4 	movi	r4,31
  80dac0:	2080c616 	blt	r4,r2,80dddc <__subdf3+0x458>
  80dac4:	01000804 	movi	r4,32
  80dac8:	2089c83a 	sub	r4,r4,r2
  80dacc:	2910983a 	sll	r8,r5,r4
  80dad0:	308ed83a 	srl	r7,r6,r2
  80dad4:	3108983a 	sll	r4,r6,r4
  80dad8:	2884d83a 	srl	r2,r5,r2
  80dadc:	41ccb03a 	or	r6,r8,r7
  80dae0:	2008c03a 	cmpne	r4,r4,zero
  80dae4:	310cb03a 	or	r6,r6,r4
  80dae8:	898dc83a 	sub	r6,r17,r6
  80daec:	89a3803a 	cmpltu	r17,r17,r6
  80daf0:	1887c83a 	sub	r3,r3,r2
  80daf4:	1c47c83a 	sub	r3,r3,r17
  80daf8:	3023883a 	mov	r17,r6
  80dafc:	1880202c 	andhi	r2,r3,128
  80db00:	10002326 	beq	r2,zero,80db90 <__subdf3+0x20c>
  80db04:	04c02034 	movhi	r19,128
  80db08:	9cffffc4 	addi	r19,r19,-1
  80db0c:	1ce6703a 	and	r19,r3,r19
  80db10:	98007a26 	beq	r19,zero,80dcfc <__subdf3+0x378>
  80db14:	9809883a 	mov	r4,r19
  80db18:	0801d980 	call	801d98 <__clzsi2>
  80db1c:	113ffe04 	addi	r4,r2,-8
  80db20:	00c007c4 	movi	r3,31
  80db24:	19007b16 	blt	r3,r4,80dd14 <__subdf3+0x390>
  80db28:	00800804 	movi	r2,32
  80db2c:	1105c83a 	sub	r2,r2,r4
  80db30:	8884d83a 	srl	r2,r17,r2
  80db34:	9906983a 	sll	r3,r19,r4
  80db38:	8922983a 	sll	r17,r17,r4
  80db3c:	10c4b03a 	or	r2,r2,r3
  80db40:	24007816 	blt	r4,r16,80dd24 <__subdf3+0x3a0>
  80db44:	2421c83a 	sub	r16,r4,r16
  80db48:	80c00044 	addi	r3,r16,1
  80db4c:	010007c4 	movi	r4,31
  80db50:	20c09516 	blt	r4,r3,80dda8 <__subdf3+0x424>
  80db54:	01400804 	movi	r5,32
  80db58:	28cbc83a 	sub	r5,r5,r3
  80db5c:	88c8d83a 	srl	r4,r17,r3
  80db60:	8962983a 	sll	r17,r17,r5
  80db64:	114a983a 	sll	r5,r2,r5
  80db68:	10c6d83a 	srl	r3,r2,r3
  80db6c:	8804c03a 	cmpne	r2,r17,zero
  80db70:	290ab03a 	or	r5,r5,r4
  80db74:	28a2b03a 	or	r17,r5,r2
  80db78:	0021883a 	mov	r16,zero
  80db7c:	003fa206 	br	80da08 <__alt_data_end+0xff80da08>
  80db80:	2090b03a 	or	r8,r4,r2
  80db84:	40018e26 	beq	r8,zero,80e1c0 <__subdf3+0x83c>
  80db88:	1007883a 	mov	r3,r2
  80db8c:	2023883a 	mov	r17,r4
  80db90:	888001cc 	andi	r2,r17,7
  80db94:	103f9e1e 	bne	r2,zero,80da10 <__alt_data_end+0xff80da10>
  80db98:	1804977a 	slli	r2,r3,29
  80db9c:	8822d0fa 	srli	r17,r17,3
  80dba0:	1810d0fa 	srli	r8,r3,3
  80dba4:	9100004c 	andi	r4,r18,1
  80dba8:	1444b03a 	or	r2,r2,r17
  80dbac:	00c1ffc4 	movi	r3,2047
  80dbb0:	80c02826 	beq	r16,r3,80dc54 <__subdf3+0x2d0>
  80dbb4:	01400434 	movhi	r5,16
  80dbb8:	297fffc4 	addi	r5,r5,-1
  80dbbc:	80e0703a 	and	r16,r16,r3
  80dbc0:	414a703a 	and	r5,r8,r5
  80dbc4:	003fa806 	br	80da68 <__alt_data_end+0xff80da68>
  80dbc8:	0080630e 	bge	zero,r2,80dd58 <__subdf3+0x3d4>
  80dbcc:	48003026 	beq	r9,zero,80dc90 <__subdf3+0x30c>
  80dbd0:	0101ffc4 	movi	r4,2047
  80dbd4:	813f8c26 	beq	r16,r4,80da08 <__alt_data_end+0xff80da08>
  80dbd8:	29402034 	orhi	r5,r5,128
  80dbdc:	01000e04 	movi	r4,56
  80dbe0:	2080a90e 	bge	r4,r2,80de88 <__subdf3+0x504>
  80dbe4:	298cb03a 	or	r6,r5,r6
  80dbe8:	3012c03a 	cmpne	r9,r6,zero
  80dbec:	0005883a 	mov	r2,zero
  80dbf0:	4c53883a 	add	r9,r9,r17
  80dbf4:	4c63803a 	cmpltu	r17,r9,r17
  80dbf8:	10c7883a 	add	r3,r2,r3
  80dbfc:	88c7883a 	add	r3,r17,r3
  80dc00:	4823883a 	mov	r17,r9
  80dc04:	1880202c 	andhi	r2,r3,128
  80dc08:	1000d026 	beq	r2,zero,80df4c <__subdf3+0x5c8>
  80dc0c:	84000044 	addi	r16,r16,1
  80dc10:	0081ffc4 	movi	r2,2047
  80dc14:	8080fe26 	beq	r16,r2,80e010 <__subdf3+0x68c>
  80dc18:	00bfe034 	movhi	r2,65408
  80dc1c:	10bfffc4 	addi	r2,r2,-1
  80dc20:	1886703a 	and	r3,r3,r2
  80dc24:	880ad07a 	srli	r5,r17,1
  80dc28:	180497fa 	slli	r2,r3,31
  80dc2c:	8900004c 	andi	r4,r17,1
  80dc30:	2922b03a 	or	r17,r5,r4
  80dc34:	1806d07a 	srli	r3,r3,1
  80dc38:	1462b03a 	or	r17,r2,r17
  80dc3c:	3825883a 	mov	r18,r7
  80dc40:	003f7106 	br	80da08 <__alt_data_end+0xff80da08>
  80dc44:	2984b03a 	or	r2,r5,r6
  80dc48:	103f6826 	beq	r2,zero,80d9ec <__alt_data_end+0xff80d9ec>
  80dc4c:	39c03fcc 	andi	r7,r7,255
  80dc50:	003f6706 	br	80d9f0 <__alt_data_end+0xff80d9f0>
  80dc54:	4086b03a 	or	r3,r8,r2
  80dc58:	18015226 	beq	r3,zero,80e1a4 <__subdf3+0x820>
  80dc5c:	00c00434 	movhi	r3,16
  80dc60:	41400234 	orhi	r5,r8,8
  80dc64:	18ffffc4 	addi	r3,r3,-1
  80dc68:	28ca703a 	and	r5,r5,r3
  80dc6c:	003f7e06 	br	80da68 <__alt_data_end+0xff80da68>
  80dc70:	10bfffc4 	addi	r2,r2,-1
  80dc74:	1000491e 	bne	r2,zero,80dd9c <__subdf3+0x418>
  80dc78:	898fc83a 	sub	r7,r17,r6
  80dc7c:	89e3803a 	cmpltu	r17,r17,r7
  80dc80:	1947c83a 	sub	r3,r3,r5
  80dc84:	1c47c83a 	sub	r3,r3,r17
  80dc88:	3823883a 	mov	r17,r7
  80dc8c:	003f9b06 	br	80dafc <__alt_data_end+0xff80dafc>
  80dc90:	2988b03a 	or	r4,r5,r6
  80dc94:	203f5c26 	beq	r4,zero,80da08 <__alt_data_end+0xff80da08>
  80dc98:	10bfffc4 	addi	r2,r2,-1
  80dc9c:	1000931e 	bne	r2,zero,80deec <__subdf3+0x568>
  80dca0:	898d883a 	add	r6,r17,r6
  80dca4:	3463803a 	cmpltu	r17,r6,r17
  80dca8:	1947883a 	add	r3,r3,r5
  80dcac:	88c7883a 	add	r3,r17,r3
  80dcb0:	3023883a 	mov	r17,r6
  80dcb4:	003fd306 	br	80dc04 <__alt_data_end+0xff80dc04>
  80dcb8:	1000541e 	bne	r2,zero,80de0c <__subdf3+0x488>
  80dcbc:	80800044 	addi	r2,r16,1
  80dcc0:	1081ffcc 	andi	r2,r2,2047
  80dcc4:	01000044 	movi	r4,1
  80dcc8:	2080a20e 	bge	r4,r2,80df54 <__subdf3+0x5d0>
  80dccc:	8989c83a 	sub	r4,r17,r6
  80dcd0:	8905803a 	cmpltu	r2,r17,r4
  80dcd4:	1967c83a 	sub	r19,r3,r5
  80dcd8:	98a7c83a 	sub	r19,r19,r2
  80dcdc:	9880202c 	andhi	r2,r19,128
  80dce0:	10006326 	beq	r2,zero,80de70 <__subdf3+0x4ec>
  80dce4:	3463c83a 	sub	r17,r6,r17
  80dce8:	28c7c83a 	sub	r3,r5,r3
  80dcec:	344d803a 	cmpltu	r6,r6,r17
  80dcf0:	19a7c83a 	sub	r19,r3,r6
  80dcf4:	3825883a 	mov	r18,r7
  80dcf8:	983f861e 	bne	r19,zero,80db14 <__alt_data_end+0xff80db14>
  80dcfc:	8809883a 	mov	r4,r17
  80dd00:	0801d980 	call	801d98 <__clzsi2>
  80dd04:	10800804 	addi	r2,r2,32
  80dd08:	113ffe04 	addi	r4,r2,-8
  80dd0c:	00c007c4 	movi	r3,31
  80dd10:	193f850e 	bge	r3,r4,80db28 <__alt_data_end+0xff80db28>
  80dd14:	10bff604 	addi	r2,r2,-40
  80dd18:	8884983a 	sll	r2,r17,r2
  80dd1c:	0023883a 	mov	r17,zero
  80dd20:	243f880e 	bge	r4,r16,80db44 <__alt_data_end+0xff80db44>
  80dd24:	00ffe034 	movhi	r3,65408
  80dd28:	18ffffc4 	addi	r3,r3,-1
  80dd2c:	8121c83a 	sub	r16,r16,r4
  80dd30:	10c6703a 	and	r3,r2,r3
  80dd34:	003f3406 	br	80da08 <__alt_data_end+0xff80da08>
  80dd38:	9100004c 	andi	r4,r18,1
  80dd3c:	000b883a 	mov	r5,zero
  80dd40:	0005883a 	mov	r2,zero
  80dd44:	003f4806 	br	80da68 <__alt_data_end+0xff80da68>
  80dd48:	298cb03a 	or	r6,r5,r6
  80dd4c:	300cc03a 	cmpne	r6,r6,zero
  80dd50:	0005883a 	mov	r2,zero
  80dd54:	003f6406 	br	80dae8 <__alt_data_end+0xff80dae8>
  80dd58:	10009a1e 	bne	r2,zero,80dfc4 <__subdf3+0x640>
  80dd5c:	82400044 	addi	r9,r16,1
  80dd60:	4881ffcc 	andi	r2,r9,2047
  80dd64:	02800044 	movi	r10,1
  80dd68:	5080670e 	bge	r10,r2,80df08 <__subdf3+0x584>
  80dd6c:	0081ffc4 	movi	r2,2047
  80dd70:	4880af26 	beq	r9,r2,80e030 <__subdf3+0x6ac>
  80dd74:	898d883a 	add	r6,r17,r6
  80dd78:	1945883a 	add	r2,r3,r5
  80dd7c:	3447803a 	cmpltu	r3,r6,r17
  80dd80:	1887883a 	add	r3,r3,r2
  80dd84:	182297fa 	slli	r17,r3,31
  80dd88:	300cd07a 	srli	r6,r6,1
  80dd8c:	1806d07a 	srli	r3,r3,1
  80dd90:	4821883a 	mov	r16,r9
  80dd94:	89a2b03a 	or	r17,r17,r6
  80dd98:	003f1b06 	br	80da08 <__alt_data_end+0xff80da08>
  80dd9c:	0101ffc4 	movi	r4,2047
  80dda0:	813f441e 	bne	r16,r4,80dab4 <__alt_data_end+0xff80dab4>
  80dda4:	003f1806 	br	80da08 <__alt_data_end+0xff80da08>
  80dda8:	843ff844 	addi	r16,r16,-31
  80ddac:	01400804 	movi	r5,32
  80ddb0:	1408d83a 	srl	r4,r2,r16
  80ddb4:	19405026 	beq	r3,r5,80def8 <__subdf3+0x574>
  80ddb8:	01401004 	movi	r5,64
  80ddbc:	28c7c83a 	sub	r3,r5,r3
  80ddc0:	10c4983a 	sll	r2,r2,r3
  80ddc4:	88a2b03a 	or	r17,r17,r2
  80ddc8:	8822c03a 	cmpne	r17,r17,zero
  80ddcc:	2462b03a 	or	r17,r4,r17
  80ddd0:	0007883a 	mov	r3,zero
  80ddd4:	0021883a 	mov	r16,zero
  80ddd8:	003f6d06 	br	80db90 <__alt_data_end+0xff80db90>
  80dddc:	11fff804 	addi	r7,r2,-32
  80dde0:	01000804 	movi	r4,32
  80dde4:	29ced83a 	srl	r7,r5,r7
  80dde8:	11004526 	beq	r2,r4,80df00 <__subdf3+0x57c>
  80ddec:	01001004 	movi	r4,64
  80ddf0:	2089c83a 	sub	r4,r4,r2
  80ddf4:	2904983a 	sll	r2,r5,r4
  80ddf8:	118cb03a 	or	r6,r2,r6
  80ddfc:	300cc03a 	cmpne	r6,r6,zero
  80de00:	398cb03a 	or	r6,r7,r6
  80de04:	0005883a 	mov	r2,zero
  80de08:	003f3706 	br	80dae8 <__alt_data_end+0xff80dae8>
  80de0c:	80002a26 	beq	r16,zero,80deb8 <__subdf3+0x534>
  80de10:	0101ffc4 	movi	r4,2047
  80de14:	49006626 	beq	r9,r4,80dfb0 <__subdf3+0x62c>
  80de18:	0085c83a 	sub	r2,zero,r2
  80de1c:	18c02034 	orhi	r3,r3,128
  80de20:	01000e04 	movi	r4,56
  80de24:	20807e16 	blt	r4,r2,80e020 <__subdf3+0x69c>
  80de28:	010007c4 	movi	r4,31
  80de2c:	2080e716 	blt	r4,r2,80e1cc <__subdf3+0x848>
  80de30:	01000804 	movi	r4,32
  80de34:	2089c83a 	sub	r4,r4,r2
  80de38:	1914983a 	sll	r10,r3,r4
  80de3c:	8890d83a 	srl	r8,r17,r2
  80de40:	8908983a 	sll	r4,r17,r4
  80de44:	1884d83a 	srl	r2,r3,r2
  80de48:	5222b03a 	or	r17,r10,r8
  80de4c:	2006c03a 	cmpne	r3,r4,zero
  80de50:	88e2b03a 	or	r17,r17,r3
  80de54:	3463c83a 	sub	r17,r6,r17
  80de58:	2885c83a 	sub	r2,r5,r2
  80de5c:	344d803a 	cmpltu	r6,r6,r17
  80de60:	1187c83a 	sub	r3,r2,r6
  80de64:	4821883a 	mov	r16,r9
  80de68:	3825883a 	mov	r18,r7
  80de6c:	003f2306 	br	80dafc <__alt_data_end+0xff80dafc>
  80de70:	24d0b03a 	or	r8,r4,r19
  80de74:	40001b1e 	bne	r8,zero,80dee4 <__subdf3+0x560>
  80de78:	0005883a 	mov	r2,zero
  80de7c:	0009883a 	mov	r4,zero
  80de80:	0021883a 	mov	r16,zero
  80de84:	003f4906 	br	80dbac <__alt_data_end+0xff80dbac>
  80de88:	010007c4 	movi	r4,31
  80de8c:	20803a16 	blt	r4,r2,80df78 <__subdf3+0x5f4>
  80de90:	01000804 	movi	r4,32
  80de94:	2089c83a 	sub	r4,r4,r2
  80de98:	2912983a 	sll	r9,r5,r4
  80de9c:	3090d83a 	srl	r8,r6,r2
  80dea0:	3108983a 	sll	r4,r6,r4
  80dea4:	2884d83a 	srl	r2,r5,r2
  80dea8:	4a12b03a 	or	r9,r9,r8
  80deac:	2008c03a 	cmpne	r4,r4,zero
  80deb0:	4912b03a 	or	r9,r9,r4
  80deb4:	003f4e06 	br	80dbf0 <__alt_data_end+0xff80dbf0>
  80deb8:	1c48b03a 	or	r4,r3,r17
  80debc:	20003c26 	beq	r4,zero,80dfb0 <__subdf3+0x62c>
  80dec0:	0084303a 	nor	r2,zero,r2
  80dec4:	1000381e 	bne	r2,zero,80dfa8 <__subdf3+0x624>
  80dec8:	3463c83a 	sub	r17,r6,r17
  80decc:	28c5c83a 	sub	r2,r5,r3
  80ded0:	344d803a 	cmpltu	r6,r6,r17
  80ded4:	1187c83a 	sub	r3,r2,r6
  80ded8:	4821883a 	mov	r16,r9
  80dedc:	3825883a 	mov	r18,r7
  80dee0:	003f0606 	br	80dafc <__alt_data_end+0xff80dafc>
  80dee4:	2023883a 	mov	r17,r4
  80dee8:	003f0906 	br	80db10 <__alt_data_end+0xff80db10>
  80deec:	0101ffc4 	movi	r4,2047
  80def0:	813f3a1e 	bne	r16,r4,80dbdc <__alt_data_end+0xff80dbdc>
  80def4:	003ec406 	br	80da08 <__alt_data_end+0xff80da08>
  80def8:	0005883a 	mov	r2,zero
  80defc:	003fb106 	br	80ddc4 <__alt_data_end+0xff80ddc4>
  80df00:	0005883a 	mov	r2,zero
  80df04:	003fbc06 	br	80ddf8 <__alt_data_end+0xff80ddf8>
  80df08:	1c44b03a 	or	r2,r3,r17
  80df0c:	80008e1e 	bne	r16,zero,80e148 <__subdf3+0x7c4>
  80df10:	1000c826 	beq	r2,zero,80e234 <__subdf3+0x8b0>
  80df14:	2984b03a 	or	r2,r5,r6
  80df18:	103ebb26 	beq	r2,zero,80da08 <__alt_data_end+0xff80da08>
  80df1c:	8989883a 	add	r4,r17,r6
  80df20:	1945883a 	add	r2,r3,r5
  80df24:	2447803a 	cmpltu	r3,r4,r17
  80df28:	1887883a 	add	r3,r3,r2
  80df2c:	1880202c 	andhi	r2,r3,128
  80df30:	2023883a 	mov	r17,r4
  80df34:	103f1626 	beq	r2,zero,80db90 <__alt_data_end+0xff80db90>
  80df38:	00bfe034 	movhi	r2,65408
  80df3c:	10bfffc4 	addi	r2,r2,-1
  80df40:	5021883a 	mov	r16,r10
  80df44:	1886703a 	and	r3,r3,r2
  80df48:	003eaf06 	br	80da08 <__alt_data_end+0xff80da08>
  80df4c:	3825883a 	mov	r18,r7
  80df50:	003f0f06 	br	80db90 <__alt_data_end+0xff80db90>
  80df54:	1c44b03a 	or	r2,r3,r17
  80df58:	8000251e 	bne	r16,zero,80dff0 <__subdf3+0x66c>
  80df5c:	1000661e 	bne	r2,zero,80e0f8 <__subdf3+0x774>
  80df60:	2990b03a 	or	r8,r5,r6
  80df64:	40009626 	beq	r8,zero,80e1c0 <__subdf3+0x83c>
  80df68:	2807883a 	mov	r3,r5
  80df6c:	3023883a 	mov	r17,r6
  80df70:	3825883a 	mov	r18,r7
  80df74:	003ea406 	br	80da08 <__alt_data_end+0xff80da08>
  80df78:	127ff804 	addi	r9,r2,-32
  80df7c:	01000804 	movi	r4,32
  80df80:	2a52d83a 	srl	r9,r5,r9
  80df84:	11008c26 	beq	r2,r4,80e1b8 <__subdf3+0x834>
  80df88:	01001004 	movi	r4,64
  80df8c:	2085c83a 	sub	r2,r4,r2
  80df90:	2884983a 	sll	r2,r5,r2
  80df94:	118cb03a 	or	r6,r2,r6
  80df98:	300cc03a 	cmpne	r6,r6,zero
  80df9c:	4992b03a 	or	r9,r9,r6
  80dfa0:	0005883a 	mov	r2,zero
  80dfa4:	003f1206 	br	80dbf0 <__alt_data_end+0xff80dbf0>
  80dfa8:	0101ffc4 	movi	r4,2047
  80dfac:	493f9c1e 	bne	r9,r4,80de20 <__alt_data_end+0xff80de20>
  80dfb0:	2807883a 	mov	r3,r5
  80dfb4:	3023883a 	mov	r17,r6
  80dfb8:	4821883a 	mov	r16,r9
  80dfbc:	3825883a 	mov	r18,r7
  80dfc0:	003e9106 	br	80da08 <__alt_data_end+0xff80da08>
  80dfc4:	80001f1e 	bne	r16,zero,80e044 <__subdf3+0x6c0>
  80dfc8:	1c48b03a 	or	r4,r3,r17
  80dfcc:	20005a26 	beq	r4,zero,80e138 <__subdf3+0x7b4>
  80dfd0:	0084303a 	nor	r2,zero,r2
  80dfd4:	1000561e 	bne	r2,zero,80e130 <__subdf3+0x7ac>
  80dfd8:	89a3883a 	add	r17,r17,r6
  80dfdc:	1945883a 	add	r2,r3,r5
  80dfe0:	898d803a 	cmpltu	r6,r17,r6
  80dfe4:	3087883a 	add	r3,r6,r2
  80dfe8:	4821883a 	mov	r16,r9
  80dfec:	003f0506 	br	80dc04 <__alt_data_end+0xff80dc04>
  80dff0:	10002b1e 	bne	r2,zero,80e0a0 <__subdf3+0x71c>
  80dff4:	2984b03a 	or	r2,r5,r6
  80dff8:	10008026 	beq	r2,zero,80e1fc <__subdf3+0x878>
  80dffc:	2807883a 	mov	r3,r5
  80e000:	3023883a 	mov	r17,r6
  80e004:	3825883a 	mov	r18,r7
  80e008:	0401ffc4 	movi	r16,2047
  80e00c:	003e7e06 	br	80da08 <__alt_data_end+0xff80da08>
  80e010:	3809883a 	mov	r4,r7
  80e014:	0011883a 	mov	r8,zero
  80e018:	0005883a 	mov	r2,zero
  80e01c:	003ee306 	br	80dbac <__alt_data_end+0xff80dbac>
  80e020:	1c62b03a 	or	r17,r3,r17
  80e024:	8822c03a 	cmpne	r17,r17,zero
  80e028:	0005883a 	mov	r2,zero
  80e02c:	003f8906 	br	80de54 <__alt_data_end+0xff80de54>
  80e030:	3809883a 	mov	r4,r7
  80e034:	4821883a 	mov	r16,r9
  80e038:	0011883a 	mov	r8,zero
  80e03c:	0005883a 	mov	r2,zero
  80e040:	003eda06 	br	80dbac <__alt_data_end+0xff80dbac>
  80e044:	0101ffc4 	movi	r4,2047
  80e048:	49003b26 	beq	r9,r4,80e138 <__subdf3+0x7b4>
  80e04c:	0085c83a 	sub	r2,zero,r2
  80e050:	18c02034 	orhi	r3,r3,128
  80e054:	01000e04 	movi	r4,56
  80e058:	20806e16 	blt	r4,r2,80e214 <__subdf3+0x890>
  80e05c:	010007c4 	movi	r4,31
  80e060:	20807716 	blt	r4,r2,80e240 <__subdf3+0x8bc>
  80e064:	01000804 	movi	r4,32
  80e068:	2089c83a 	sub	r4,r4,r2
  80e06c:	1914983a 	sll	r10,r3,r4
  80e070:	8890d83a 	srl	r8,r17,r2
  80e074:	8908983a 	sll	r4,r17,r4
  80e078:	1884d83a 	srl	r2,r3,r2
  80e07c:	5222b03a 	or	r17,r10,r8
  80e080:	2006c03a 	cmpne	r3,r4,zero
  80e084:	88e2b03a 	or	r17,r17,r3
  80e088:	89a3883a 	add	r17,r17,r6
  80e08c:	1145883a 	add	r2,r2,r5
  80e090:	898d803a 	cmpltu	r6,r17,r6
  80e094:	3087883a 	add	r3,r6,r2
  80e098:	4821883a 	mov	r16,r9
  80e09c:	003ed906 	br	80dc04 <__alt_data_end+0xff80dc04>
  80e0a0:	2984b03a 	or	r2,r5,r6
  80e0a4:	10004226 	beq	r2,zero,80e1b0 <__subdf3+0x82c>
  80e0a8:	1808d0fa 	srli	r4,r3,3
  80e0ac:	8822d0fa 	srli	r17,r17,3
  80e0b0:	1806977a 	slli	r3,r3,29
  80e0b4:	2080022c 	andhi	r2,r4,8
  80e0b8:	1c62b03a 	or	r17,r3,r17
  80e0bc:	10000826 	beq	r2,zero,80e0e0 <__subdf3+0x75c>
  80e0c0:	2812d0fa 	srli	r9,r5,3
  80e0c4:	4880022c 	andhi	r2,r9,8
  80e0c8:	1000051e 	bne	r2,zero,80e0e0 <__subdf3+0x75c>
  80e0cc:	300cd0fa 	srli	r6,r6,3
  80e0d0:	2804977a 	slli	r2,r5,29
  80e0d4:	4809883a 	mov	r4,r9
  80e0d8:	3825883a 	mov	r18,r7
  80e0dc:	11a2b03a 	or	r17,r2,r6
  80e0e0:	8806d77a 	srli	r3,r17,29
  80e0e4:	200890fa 	slli	r4,r4,3
  80e0e8:	882290fa 	slli	r17,r17,3
  80e0ec:	0401ffc4 	movi	r16,2047
  80e0f0:	1906b03a 	or	r3,r3,r4
  80e0f4:	003e4406 	br	80da08 <__alt_data_end+0xff80da08>
  80e0f8:	2984b03a 	or	r2,r5,r6
  80e0fc:	103e4226 	beq	r2,zero,80da08 <__alt_data_end+0xff80da08>
  80e100:	8989c83a 	sub	r4,r17,r6
  80e104:	8911803a 	cmpltu	r8,r17,r4
  80e108:	1945c83a 	sub	r2,r3,r5
  80e10c:	1205c83a 	sub	r2,r2,r8
  80e110:	1200202c 	andhi	r8,r2,128
  80e114:	403e9a26 	beq	r8,zero,80db80 <__alt_data_end+0xff80db80>
  80e118:	3463c83a 	sub	r17,r6,r17
  80e11c:	28c5c83a 	sub	r2,r5,r3
  80e120:	344d803a 	cmpltu	r6,r6,r17
  80e124:	1187c83a 	sub	r3,r2,r6
  80e128:	3825883a 	mov	r18,r7
  80e12c:	003e3606 	br	80da08 <__alt_data_end+0xff80da08>
  80e130:	0101ffc4 	movi	r4,2047
  80e134:	493fc71e 	bne	r9,r4,80e054 <__alt_data_end+0xff80e054>
  80e138:	2807883a 	mov	r3,r5
  80e13c:	3023883a 	mov	r17,r6
  80e140:	4821883a 	mov	r16,r9
  80e144:	003e3006 	br	80da08 <__alt_data_end+0xff80da08>
  80e148:	10003626 	beq	r2,zero,80e224 <__subdf3+0x8a0>
  80e14c:	2984b03a 	or	r2,r5,r6
  80e150:	10001726 	beq	r2,zero,80e1b0 <__subdf3+0x82c>
  80e154:	1808d0fa 	srli	r4,r3,3
  80e158:	8822d0fa 	srli	r17,r17,3
  80e15c:	1806977a 	slli	r3,r3,29
  80e160:	2080022c 	andhi	r2,r4,8
  80e164:	1c62b03a 	or	r17,r3,r17
  80e168:	10000726 	beq	r2,zero,80e188 <__subdf3+0x804>
  80e16c:	2812d0fa 	srli	r9,r5,3
  80e170:	4880022c 	andhi	r2,r9,8
  80e174:	1000041e 	bne	r2,zero,80e188 <__subdf3+0x804>
  80e178:	300cd0fa 	srli	r6,r6,3
  80e17c:	2804977a 	slli	r2,r5,29
  80e180:	4809883a 	mov	r4,r9
  80e184:	11a2b03a 	or	r17,r2,r6
  80e188:	8806d77a 	srli	r3,r17,29
  80e18c:	200890fa 	slli	r4,r4,3
  80e190:	882290fa 	slli	r17,r17,3
  80e194:	3825883a 	mov	r18,r7
  80e198:	1906b03a 	or	r3,r3,r4
  80e19c:	0401ffc4 	movi	r16,2047
  80e1a0:	003e1906 	br	80da08 <__alt_data_end+0xff80da08>
  80e1a4:	000b883a 	mov	r5,zero
  80e1a8:	0005883a 	mov	r2,zero
  80e1ac:	003e2e06 	br	80da68 <__alt_data_end+0xff80da68>
  80e1b0:	0401ffc4 	movi	r16,2047
  80e1b4:	003e1406 	br	80da08 <__alt_data_end+0xff80da08>
  80e1b8:	0005883a 	mov	r2,zero
  80e1bc:	003f7506 	br	80df94 <__alt_data_end+0xff80df94>
  80e1c0:	0005883a 	mov	r2,zero
  80e1c4:	0009883a 	mov	r4,zero
  80e1c8:	003e7806 	br	80dbac <__alt_data_end+0xff80dbac>
  80e1cc:	123ff804 	addi	r8,r2,-32
  80e1d0:	01000804 	movi	r4,32
  80e1d4:	1a10d83a 	srl	r8,r3,r8
  80e1d8:	11002526 	beq	r2,r4,80e270 <__subdf3+0x8ec>
  80e1dc:	01001004 	movi	r4,64
  80e1e0:	2085c83a 	sub	r2,r4,r2
  80e1e4:	1884983a 	sll	r2,r3,r2
  80e1e8:	1444b03a 	or	r2,r2,r17
  80e1ec:	1004c03a 	cmpne	r2,r2,zero
  80e1f0:	40a2b03a 	or	r17,r8,r2
  80e1f4:	0005883a 	mov	r2,zero
  80e1f8:	003f1606 	br	80de54 <__alt_data_end+0xff80de54>
  80e1fc:	02000434 	movhi	r8,16
  80e200:	0009883a 	mov	r4,zero
  80e204:	423fffc4 	addi	r8,r8,-1
  80e208:	00bfffc4 	movi	r2,-1
  80e20c:	0401ffc4 	movi	r16,2047
  80e210:	003e6606 	br	80dbac <__alt_data_end+0xff80dbac>
  80e214:	1c62b03a 	or	r17,r3,r17
  80e218:	8822c03a 	cmpne	r17,r17,zero
  80e21c:	0005883a 	mov	r2,zero
  80e220:	003f9906 	br	80e088 <__alt_data_end+0xff80e088>
  80e224:	2807883a 	mov	r3,r5
  80e228:	3023883a 	mov	r17,r6
  80e22c:	0401ffc4 	movi	r16,2047
  80e230:	003df506 	br	80da08 <__alt_data_end+0xff80da08>
  80e234:	2807883a 	mov	r3,r5
  80e238:	3023883a 	mov	r17,r6
  80e23c:	003df206 	br	80da08 <__alt_data_end+0xff80da08>
  80e240:	123ff804 	addi	r8,r2,-32
  80e244:	01000804 	movi	r4,32
  80e248:	1a10d83a 	srl	r8,r3,r8
  80e24c:	11000a26 	beq	r2,r4,80e278 <__subdf3+0x8f4>
  80e250:	01001004 	movi	r4,64
  80e254:	2085c83a 	sub	r2,r4,r2
  80e258:	1884983a 	sll	r2,r3,r2
  80e25c:	1444b03a 	or	r2,r2,r17
  80e260:	1004c03a 	cmpne	r2,r2,zero
  80e264:	40a2b03a 	or	r17,r8,r2
  80e268:	0005883a 	mov	r2,zero
  80e26c:	003f8606 	br	80e088 <__alt_data_end+0xff80e088>
  80e270:	0005883a 	mov	r2,zero
  80e274:	003fdc06 	br	80e1e8 <__alt_data_end+0xff80e1e8>
  80e278:	0005883a 	mov	r2,zero
  80e27c:	003ff706 	br	80e25c <__alt_data_end+0xff80e25c>

0080e280 <__fixdfsi>:
  80e280:	280cd53a 	srli	r6,r5,20
  80e284:	00c00434 	movhi	r3,16
  80e288:	18ffffc4 	addi	r3,r3,-1
  80e28c:	3181ffcc 	andi	r6,r6,2047
  80e290:	01c0ff84 	movi	r7,1022
  80e294:	28c6703a 	and	r3,r5,r3
  80e298:	280ad7fa 	srli	r5,r5,31
  80e29c:	3980120e 	bge	r7,r6,80e2e8 <__fixdfsi+0x68>
  80e2a0:	00810744 	movi	r2,1053
  80e2a4:	11800c16 	blt	r2,r6,80e2d8 <__fixdfsi+0x58>
  80e2a8:	00810cc4 	movi	r2,1075
  80e2ac:	1185c83a 	sub	r2,r2,r6
  80e2b0:	01c007c4 	movi	r7,31
  80e2b4:	18c00434 	orhi	r3,r3,16
  80e2b8:	38800d16 	blt	r7,r2,80e2f0 <__fixdfsi+0x70>
  80e2bc:	31befb44 	addi	r6,r6,-1043
  80e2c0:	2084d83a 	srl	r2,r4,r2
  80e2c4:	1986983a 	sll	r3,r3,r6
  80e2c8:	1884b03a 	or	r2,r3,r2
  80e2cc:	28000726 	beq	r5,zero,80e2ec <__fixdfsi+0x6c>
  80e2d0:	0085c83a 	sub	r2,zero,r2
  80e2d4:	f800283a 	ret
  80e2d8:	00a00034 	movhi	r2,32768
  80e2dc:	10bfffc4 	addi	r2,r2,-1
  80e2e0:	2885883a 	add	r2,r5,r2
  80e2e4:	f800283a 	ret
  80e2e8:	0005883a 	mov	r2,zero
  80e2ec:	f800283a 	ret
  80e2f0:	008104c4 	movi	r2,1043
  80e2f4:	1185c83a 	sub	r2,r2,r6
  80e2f8:	1884d83a 	srl	r2,r3,r2
  80e2fc:	003ff306 	br	80e2cc <__alt_data_end+0xff80e2cc>

0080e300 <__floatsidf>:
  80e300:	defffd04 	addi	sp,sp,-12
  80e304:	dfc00215 	stw	ra,8(sp)
  80e308:	dc400115 	stw	r17,4(sp)
  80e30c:	dc000015 	stw	r16,0(sp)
  80e310:	20002b26 	beq	r4,zero,80e3c0 <__floatsidf+0xc0>
  80e314:	2023883a 	mov	r17,r4
  80e318:	2020d7fa 	srli	r16,r4,31
  80e31c:	20002d16 	blt	r4,zero,80e3d4 <__floatsidf+0xd4>
  80e320:	8809883a 	mov	r4,r17
  80e324:	0801d980 	call	801d98 <__clzsi2>
  80e328:	01410784 	movi	r5,1054
  80e32c:	288bc83a 	sub	r5,r5,r2
  80e330:	01010cc4 	movi	r4,1075
  80e334:	2149c83a 	sub	r4,r4,r5
  80e338:	00c007c4 	movi	r3,31
  80e33c:	1900160e 	bge	r3,r4,80e398 <__floatsidf+0x98>
  80e340:	00c104c4 	movi	r3,1043
  80e344:	1947c83a 	sub	r3,r3,r5
  80e348:	88c6983a 	sll	r3,r17,r3
  80e34c:	00800434 	movhi	r2,16
  80e350:	10bfffc4 	addi	r2,r2,-1
  80e354:	1886703a 	and	r3,r3,r2
  80e358:	2941ffcc 	andi	r5,r5,2047
  80e35c:	800d883a 	mov	r6,r16
  80e360:	0005883a 	mov	r2,zero
  80e364:	280a953a 	slli	r5,r5,20
  80e368:	31803fcc 	andi	r6,r6,255
  80e36c:	01000434 	movhi	r4,16
  80e370:	300c97fa 	slli	r6,r6,31
  80e374:	213fffc4 	addi	r4,r4,-1
  80e378:	1906703a 	and	r3,r3,r4
  80e37c:	1946b03a 	or	r3,r3,r5
  80e380:	1986b03a 	or	r3,r3,r6
  80e384:	dfc00217 	ldw	ra,8(sp)
  80e388:	dc400117 	ldw	r17,4(sp)
  80e38c:	dc000017 	ldw	r16,0(sp)
  80e390:	dec00304 	addi	sp,sp,12
  80e394:	f800283a 	ret
  80e398:	00c002c4 	movi	r3,11
  80e39c:	1887c83a 	sub	r3,r3,r2
  80e3a0:	88c6d83a 	srl	r3,r17,r3
  80e3a4:	8904983a 	sll	r2,r17,r4
  80e3a8:	01000434 	movhi	r4,16
  80e3ac:	213fffc4 	addi	r4,r4,-1
  80e3b0:	2941ffcc 	andi	r5,r5,2047
  80e3b4:	1906703a 	and	r3,r3,r4
  80e3b8:	800d883a 	mov	r6,r16
  80e3bc:	003fe906 	br	80e364 <__alt_data_end+0xff80e364>
  80e3c0:	000d883a 	mov	r6,zero
  80e3c4:	000b883a 	mov	r5,zero
  80e3c8:	0007883a 	mov	r3,zero
  80e3cc:	0005883a 	mov	r2,zero
  80e3d0:	003fe406 	br	80e364 <__alt_data_end+0xff80e364>
  80e3d4:	0123c83a 	sub	r17,zero,r4
  80e3d8:	003fd106 	br	80e320 <__alt_data_end+0xff80e320>

0080e3dc <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
  80e3dc:	defffe04 	addi	sp,sp,-8
  80e3e0:	dfc00115 	stw	ra,4(sp)
  80e3e4:	df000015 	stw	fp,0(sp)
  80e3e8:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
  80e3ec:	d0a00b17 	ldw	r2,-32724(gp)
  80e3f0:	10000326 	beq	r2,zero,80e400 <alt_get_errno+0x24>
  80e3f4:	d0a00b17 	ldw	r2,-32724(gp)
  80e3f8:	103ee83a 	callr	r2
  80e3fc:	00000106 	br	80e404 <alt_get_errno+0x28>
  80e400:	d0b6c304 	addi	r2,gp,-9460
}
  80e404:	e037883a 	mov	sp,fp
  80e408:	dfc00117 	ldw	ra,4(sp)
  80e40c:	df000017 	ldw	fp,0(sp)
  80e410:	dec00204 	addi	sp,sp,8
  80e414:	f800283a 	ret

0080e418 <close>:
 *
 * ALT_CLOSE is mapped onto the close() system call in alt_syscall.h
 */
 
int ALT_CLOSE (int fildes)
{
  80e418:	defffb04 	addi	sp,sp,-20
  80e41c:	dfc00415 	stw	ra,16(sp)
  80e420:	df000315 	stw	fp,12(sp)
  80e424:	df000304 	addi	fp,sp,12
  80e428:	e13fff15 	stw	r4,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (fildes < 0) ? NULL : &alt_fd_list[fildes];
  80e42c:	e0bfff17 	ldw	r2,-4(fp)
  80e430:	10000616 	blt	r2,zero,80e44c <close+0x34>
  80e434:	e0bfff17 	ldw	r2,-4(fp)
  80e438:	10c00324 	muli	r3,r2,12
  80e43c:	00802074 	movhi	r2,129
  80e440:	10961004 	addi	r2,r2,22592
  80e444:	1885883a 	add	r2,r3,r2
  80e448:	00000106 	br	80e450 <close+0x38>
  80e44c:	0005883a 	mov	r2,zero
  80e450:	e0bffd15 	stw	r2,-12(fp)

  if (fd)
  80e454:	e0bffd17 	ldw	r2,-12(fp)
  80e458:	10001926 	beq	r2,zero,80e4c0 <close+0xa8>
    /*
     * If the associated file system/device has a close function, call it so 
     * that any necessary cleanup code can run.
     */

    rval = (fd->dev->close) ? fd->dev->close(fd) : 0;
  80e45c:	e0bffd17 	ldw	r2,-12(fp)
  80e460:	10800017 	ldw	r2,0(r2)
  80e464:	10800417 	ldw	r2,16(r2)
  80e468:	10000626 	beq	r2,zero,80e484 <close+0x6c>
  80e46c:	e0bffd17 	ldw	r2,-12(fp)
  80e470:	10800017 	ldw	r2,0(r2)
  80e474:	10800417 	ldw	r2,16(r2)
  80e478:	e13ffd17 	ldw	r4,-12(fp)
  80e47c:	103ee83a 	callr	r2
  80e480:	00000106 	br	80e488 <close+0x70>
  80e484:	0005883a 	mov	r2,zero
  80e488:	e0bffe15 	stw	r2,-8(fp)

    /* Free the file descriptor structure and return. */

    alt_release_fd (fildes);
  80e48c:	e13fff17 	ldw	r4,-4(fp)
  80e490:	080eb140 	call	80eb14 <alt_release_fd>
    if (rval < 0)
  80e494:	e0bffe17 	ldw	r2,-8(fp)
  80e498:	1000070e 	bge	r2,zero,80e4b8 <close+0xa0>
    {
      ALT_ERRNO = -rval;
  80e49c:	080e3dc0 	call	80e3dc <alt_get_errno>
  80e4a0:	1007883a 	mov	r3,r2
  80e4a4:	e0bffe17 	ldw	r2,-8(fp)
  80e4a8:	0085c83a 	sub	r2,zero,r2
  80e4ac:	18800015 	stw	r2,0(r3)
      return -1;
  80e4b0:	00bfffc4 	movi	r2,-1
  80e4b4:	00000706 	br	80e4d4 <close+0xbc>
    }
    return 0;
  80e4b8:	0005883a 	mov	r2,zero
  80e4bc:	00000506 	br	80e4d4 <close+0xbc>
  }
  else
  {
    ALT_ERRNO = EBADFD;
  80e4c0:	080e3dc0 	call	80e3dc <alt_get_errno>
  80e4c4:	1007883a 	mov	r3,r2
  80e4c8:	00801444 	movi	r2,81
  80e4cc:	18800015 	stw	r2,0(r3)
    return -1;
  80e4d0:	00bfffc4 	movi	r2,-1
  }
}
  80e4d4:	e037883a 	mov	sp,fp
  80e4d8:	dfc00117 	ldw	ra,4(sp)
  80e4dc:	df000017 	ldw	fp,0(sp)
  80e4e0:	dec00204 	addi	sp,sp,8
  80e4e4:	f800283a 	ret

0080e4e8 <alt_dev_null_write>:
 * by the alt_dev_null device. It simple discards all data passed to it, and
 * indicates that the data has been successfully transmitted.
 */

static int alt_dev_null_write (alt_fd* fd, const char* ptr, int len)
{
  80e4e8:	defffc04 	addi	sp,sp,-16
  80e4ec:	df000315 	stw	fp,12(sp)
  80e4f0:	df000304 	addi	fp,sp,12
  80e4f4:	e13ffd15 	stw	r4,-12(fp)
  80e4f8:	e17ffe15 	stw	r5,-8(fp)
  80e4fc:	e1bfff15 	stw	r6,-4(fp)
  return len;
  80e500:	e0bfff17 	ldw	r2,-4(fp)
}
  80e504:	e037883a 	mov	sp,fp
  80e508:	df000017 	ldw	fp,0(sp)
  80e50c:	dec00104 	addi	sp,sp,4
  80e510:	f800283a 	ret

0080e514 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
  80e514:	defffe04 	addi	sp,sp,-8
  80e518:	dfc00115 	stw	ra,4(sp)
  80e51c:	df000015 	stw	fp,0(sp)
  80e520:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
  80e524:	d0a00b17 	ldw	r2,-32724(gp)
  80e528:	10000326 	beq	r2,zero,80e538 <alt_get_errno+0x24>
  80e52c:	d0a00b17 	ldw	r2,-32724(gp)
  80e530:	103ee83a 	callr	r2
  80e534:	00000106 	br	80e53c <alt_get_errno+0x28>
  80e538:	d0b6c304 	addi	r2,gp,-9460
}
  80e53c:	e037883a 	mov	sp,fp
  80e540:	dfc00117 	ldw	ra,4(sp)
  80e544:	df000017 	ldw	fp,0(sp)
  80e548:	dec00204 	addi	sp,sp,8
  80e54c:	f800283a 	ret

0080e550 <fstat>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_FSTAT (int file, struct stat *st)
{
  80e550:	defffb04 	addi	sp,sp,-20
  80e554:	dfc00415 	stw	ra,16(sp)
  80e558:	df000315 	stw	fp,12(sp)
  80e55c:	df000304 	addi	fp,sp,12
  80e560:	e13ffe15 	stw	r4,-8(fp)
  80e564:	e17fff15 	stw	r5,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
  80e568:	e0bffe17 	ldw	r2,-8(fp)
  80e56c:	10000616 	blt	r2,zero,80e588 <fstat+0x38>
  80e570:	e0bffe17 	ldw	r2,-8(fp)
  80e574:	10c00324 	muli	r3,r2,12
  80e578:	00802074 	movhi	r2,129
  80e57c:	10961004 	addi	r2,r2,22592
  80e580:	1885883a 	add	r2,r3,r2
  80e584:	00000106 	br	80e58c <fstat+0x3c>
  80e588:	0005883a 	mov	r2,zero
  80e58c:	e0bffd15 	stw	r2,-12(fp)
  
  if (fd)
  80e590:	e0bffd17 	ldw	r2,-12(fp)
  80e594:	10001026 	beq	r2,zero,80e5d8 <fstat+0x88>
  {
    /* Call the drivers fstat() function to fill out the "st" structure. */

    if (fd->dev->fstat)
  80e598:	e0bffd17 	ldw	r2,-12(fp)
  80e59c:	10800017 	ldw	r2,0(r2)
  80e5a0:	10800817 	ldw	r2,32(r2)
  80e5a4:	10000726 	beq	r2,zero,80e5c4 <fstat+0x74>
    {
      return fd->dev->fstat(fd, st);
  80e5a8:	e0bffd17 	ldw	r2,-12(fp)
  80e5ac:	10800017 	ldw	r2,0(r2)
  80e5b0:	10800817 	ldw	r2,32(r2)
  80e5b4:	e17fff17 	ldw	r5,-4(fp)
  80e5b8:	e13ffd17 	ldw	r4,-12(fp)
  80e5bc:	103ee83a 	callr	r2
  80e5c0:	00000a06 	br	80e5ec <fstat+0x9c>
     * device.
     */
 
    else
    {
      st->st_mode = _IFCHR;
  80e5c4:	e0bfff17 	ldw	r2,-4(fp)
  80e5c8:	00c80004 	movi	r3,8192
  80e5cc:	10c00115 	stw	r3,4(r2)
      return 0;
  80e5d0:	0005883a 	mov	r2,zero
  80e5d4:	00000506 	br	80e5ec <fstat+0x9c>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
  80e5d8:	080e5140 	call	80e514 <alt_get_errno>
  80e5dc:	1007883a 	mov	r3,r2
  80e5e0:	00801444 	movi	r2,81
  80e5e4:	18800015 	stw	r2,0(r3)
    return -1;
  80e5e8:	00bfffc4 	movi	r2,-1
  }
}
  80e5ec:	e037883a 	mov	sp,fp
  80e5f0:	dfc00117 	ldw	ra,4(sp)
  80e5f4:	df000017 	ldw	fp,0(sp)
  80e5f8:	dec00204 	addi	sp,sp,8
  80e5fc:	f800283a 	ret

0080e600 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
  80e600:	defffe04 	addi	sp,sp,-8
  80e604:	dfc00115 	stw	ra,4(sp)
  80e608:	df000015 	stw	fp,0(sp)
  80e60c:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
  80e610:	d0a00b17 	ldw	r2,-32724(gp)
  80e614:	10000326 	beq	r2,zero,80e624 <alt_get_errno+0x24>
  80e618:	d0a00b17 	ldw	r2,-32724(gp)
  80e61c:	103ee83a 	callr	r2
  80e620:	00000106 	br	80e628 <alt_get_errno+0x28>
  80e624:	d0b6c304 	addi	r2,gp,-9460
}
  80e628:	e037883a 	mov	sp,fp
  80e62c:	dfc00117 	ldw	ra,4(sp)
  80e630:	df000017 	ldw	fp,0(sp)
  80e634:	dec00204 	addi	sp,sp,8
  80e638:	f800283a 	ret

0080e63c <isatty>:
 *
 * ALT_ISATTY is mapped onto the isatty() system call in alt_syscall.h
 */
 
int ALT_ISATTY (int file)
{
  80e63c:	deffed04 	addi	sp,sp,-76
  80e640:	dfc01215 	stw	ra,72(sp)
  80e644:	df001115 	stw	fp,68(sp)
  80e648:	df001104 	addi	fp,sp,68
  80e64c:	e13fff15 	stw	r4,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
  80e650:	e0bfff17 	ldw	r2,-4(fp)
  80e654:	10000616 	blt	r2,zero,80e670 <isatty+0x34>
  80e658:	e0bfff17 	ldw	r2,-4(fp)
  80e65c:	10c00324 	muli	r3,r2,12
  80e660:	00802074 	movhi	r2,129
  80e664:	10961004 	addi	r2,r2,22592
  80e668:	1885883a 	add	r2,r3,r2
  80e66c:	00000106 	br	80e674 <isatty+0x38>
  80e670:	0005883a 	mov	r2,zero
  80e674:	e0bfef15 	stw	r2,-68(fp)
  
  if (fd)
  80e678:	e0bfef17 	ldw	r2,-68(fp)
  80e67c:	10000e26 	beq	r2,zero,80e6b8 <isatty+0x7c>
    /*
     * If a device driver does not provide an fstat() function, then it is 
     * treated as a terminal device by default.
     */

    if (!fd->dev->fstat)
  80e680:	e0bfef17 	ldw	r2,-68(fp)
  80e684:	10800017 	ldw	r2,0(r2)
  80e688:	10800817 	ldw	r2,32(r2)
  80e68c:	1000021e 	bne	r2,zero,80e698 <isatty+0x5c>
    {
      return 1;
  80e690:	00800044 	movi	r2,1
  80e694:	00000d06 	br	80e6cc <isatty+0x90>
     * this is called so that the device can identify itself.
     */ 

    else
    {
      fstat (file, &stat);
  80e698:	e0bff004 	addi	r2,fp,-64
  80e69c:	100b883a 	mov	r5,r2
  80e6a0:	e13fff17 	ldw	r4,-4(fp)
  80e6a4:	080e5500 	call	80e550 <fstat>
      return (stat.st_mode == _IFCHR) ? 1 : 0;
  80e6a8:	e0bff117 	ldw	r2,-60(fp)
  80e6ac:	10880020 	cmpeqi	r2,r2,8192
  80e6b0:	10803fcc 	andi	r2,r2,255
  80e6b4:	00000506 	br	80e6cc <isatty+0x90>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
  80e6b8:	080e6000 	call	80e600 <alt_get_errno>
  80e6bc:	1007883a 	mov	r3,r2
  80e6c0:	00801444 	movi	r2,81
  80e6c4:	18800015 	stw	r2,0(r3)
    return 0;
  80e6c8:	0005883a 	mov	r2,zero
  }
}
  80e6cc:	e037883a 	mov	sp,fp
  80e6d0:	dfc00117 	ldw	ra,4(sp)
  80e6d4:	df000017 	ldw	fp,0(sp)
  80e6d8:	dec00204 	addi	sp,sp,8
  80e6dc:	f800283a 	ret

0080e6e0 <alt_load_section>:
 */

static void ALT_INLINE alt_load_section (alt_u32* from, 
                                         alt_u32* to, 
                                         alt_u32* end)
{
  80e6e0:	defffc04 	addi	sp,sp,-16
  80e6e4:	df000315 	stw	fp,12(sp)
  80e6e8:	df000304 	addi	fp,sp,12
  80e6ec:	e13ffd15 	stw	r4,-12(fp)
  80e6f0:	e17ffe15 	stw	r5,-8(fp)
  80e6f4:	e1bfff15 	stw	r6,-4(fp)
  if (to != from)
  80e6f8:	e0fffe17 	ldw	r3,-8(fp)
  80e6fc:	e0bffd17 	ldw	r2,-12(fp)
  80e700:	18800c26 	beq	r3,r2,80e734 <alt_load_section+0x54>
  {
    while( to != end )
  80e704:	00000806 	br	80e728 <alt_load_section+0x48>
    {
      *to++ = *from++;
  80e708:	e0bffe17 	ldw	r2,-8(fp)
  80e70c:	10c00104 	addi	r3,r2,4
  80e710:	e0fffe15 	stw	r3,-8(fp)
  80e714:	e0fffd17 	ldw	r3,-12(fp)
  80e718:	19000104 	addi	r4,r3,4
  80e71c:	e13ffd15 	stw	r4,-12(fp)
  80e720:	18c00017 	ldw	r3,0(r3)
  80e724:	10c00015 	stw	r3,0(r2)
                                         alt_u32* to, 
                                         alt_u32* end)
{
  if (to != from)
  {
    while( to != end )
  80e728:	e0fffe17 	ldw	r3,-8(fp)
  80e72c:	e0bfff17 	ldw	r2,-4(fp)
  80e730:	18bff51e 	bne	r3,r2,80e708 <__alt_data_end+0xff80e708>
    {
      *to++ = *from++;
    }
  }
}
  80e734:	0001883a 	nop
  80e738:	e037883a 	mov	sp,fp
  80e73c:	df000017 	ldw	fp,0(sp)
  80e740:	dec00104 	addi	sp,sp,4
  80e744:	f800283a 	ret

0080e748 <alt_load>:
 * there is no bootloader, so this application is responsible for loading to
 * RAM any sections that are required.
 */  

void alt_load (void)
{
  80e748:	defffe04 	addi	sp,sp,-8
  80e74c:	dfc00115 	stw	ra,4(sp)
  80e750:	df000015 	stw	fp,0(sp)
  80e754:	d839883a 	mov	fp,sp
  /* 
   * Copy the .rwdata section. 
   */

  alt_load_section (&__flash_rwdata_start, 
  80e758:	01802074 	movhi	r6,129
  80e75c:	319a9804 	addi	r6,r6,27232
  80e760:	01402074 	movhi	r5,129
  80e764:	2943eb04 	addi	r5,r5,4012
  80e768:	01002074 	movhi	r4,129
  80e76c:	211a9804 	addi	r4,r4,27232
  80e770:	080e6e00 	call	80e6e0 <alt_load_section>

  /*
   * Copy the exception handler.
   */

  alt_load_section (&__flash_exceptions_start, 
  80e774:	01802034 	movhi	r6,128
  80e778:	31809104 	addi	r6,r6,580
  80e77c:	01402034 	movhi	r5,128
  80e780:	29400804 	addi	r5,r5,32
  80e784:	01002034 	movhi	r4,128
  80e788:	21000804 	addi	r4,r4,32
  80e78c:	080e6e00 	call	80e6e0 <alt_load_section>

  /*
   * Copy the .rodata section.
   */

  alt_load_section (&__flash_rodata_start, 
  80e790:	01802074 	movhi	r6,129
  80e794:	3183eb04 	addi	r6,r6,4012
  80e798:	01402074 	movhi	r5,129
  80e79c:	29432304 	addi	r5,r5,3212
  80e7a0:	01002074 	movhi	r4,129
  80e7a4:	21032304 	addi	r4,r4,3212
  80e7a8:	080e6e00 	call	80e6e0 <alt_load_section>
  
  /*
   * Now ensure that the caches are in synch.
   */
  
  alt_dcache_flush_all();
  80e7ac:	080fb680 	call	80fb68 <alt_dcache_flush_all>
  alt_icache_flush_all();
  80e7b0:	080fd500 	call	80fd50 <alt_icache_flush_all>
}
  80e7b4:	0001883a 	nop
  80e7b8:	e037883a 	mov	sp,fp
  80e7bc:	dfc00117 	ldw	ra,4(sp)
  80e7c0:	df000017 	ldw	fp,0(sp)
  80e7c4:	dec00204 	addi	sp,sp,8
  80e7c8:	f800283a 	ret

0080e7cc <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
  80e7cc:	defffe04 	addi	sp,sp,-8
  80e7d0:	dfc00115 	stw	ra,4(sp)
  80e7d4:	df000015 	stw	fp,0(sp)
  80e7d8:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
  80e7dc:	d0a00b17 	ldw	r2,-32724(gp)
  80e7e0:	10000326 	beq	r2,zero,80e7f0 <alt_get_errno+0x24>
  80e7e4:	d0a00b17 	ldw	r2,-32724(gp)
  80e7e8:	103ee83a 	callr	r2
  80e7ec:	00000106 	br	80e7f4 <alt_get_errno+0x28>
  80e7f0:	d0b6c304 	addi	r2,gp,-9460
}
  80e7f4:	e037883a 	mov	sp,fp
  80e7f8:	dfc00117 	ldw	ra,4(sp)
  80e7fc:	df000017 	ldw	fp,0(sp)
  80e800:	dec00204 	addi	sp,sp,8
  80e804:	f800283a 	ret

0080e808 <lseek>:
 * ALT_LSEEK is mapped onto the lseek() system call in alt_syscall.h
 *
 */

off_t ALT_LSEEK (int file, off_t ptr, int dir)
{
  80e808:	defff904 	addi	sp,sp,-28
  80e80c:	dfc00615 	stw	ra,24(sp)
  80e810:	df000515 	stw	fp,20(sp)
  80e814:	df000504 	addi	fp,sp,20
  80e818:	e13ffd15 	stw	r4,-12(fp)
  80e81c:	e17ffe15 	stw	r5,-8(fp)
  80e820:	e1bfff15 	stw	r6,-4(fp)
  alt_fd* fd;
  off_t   rc = 0; 
  80e824:	e03ffb15 	stw	zero,-20(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
  80e828:	e0bffd17 	ldw	r2,-12(fp)
  80e82c:	10000616 	blt	r2,zero,80e848 <lseek+0x40>
  80e830:	e0bffd17 	ldw	r2,-12(fp)
  80e834:	10c00324 	muli	r3,r2,12
  80e838:	00802074 	movhi	r2,129
  80e83c:	10961004 	addi	r2,r2,22592
  80e840:	1885883a 	add	r2,r3,r2
  80e844:	00000106 	br	80e84c <lseek+0x44>
  80e848:	0005883a 	mov	r2,zero
  80e84c:	e0bffc15 	stw	r2,-16(fp)
  
  if (fd) 
  80e850:	e0bffc17 	ldw	r2,-16(fp)
  80e854:	10001026 	beq	r2,zero,80e898 <lseek+0x90>
    /*
     * If the device driver provides an implementation of the lseek() function,
     * then call that to process the request.
     */
 
    if (fd->dev->lseek)
  80e858:	e0bffc17 	ldw	r2,-16(fp)
  80e85c:	10800017 	ldw	r2,0(r2)
  80e860:	10800717 	ldw	r2,28(r2)
  80e864:	10000926 	beq	r2,zero,80e88c <lseek+0x84>
    {
      rc = fd->dev->lseek(fd, ptr, dir);
  80e868:	e0bffc17 	ldw	r2,-16(fp)
  80e86c:	10800017 	ldw	r2,0(r2)
  80e870:	10800717 	ldw	r2,28(r2)
  80e874:	e1bfff17 	ldw	r6,-4(fp)
  80e878:	e17ffe17 	ldw	r5,-8(fp)
  80e87c:	e13ffc17 	ldw	r4,-16(fp)
  80e880:	103ee83a 	callr	r2
  80e884:	e0bffb15 	stw	r2,-20(fp)
  80e888:	00000506 	br	80e8a0 <lseek+0x98>
     * Otherwise return an error.
     */

    else
    {
      rc = -ENOTSUP;
  80e88c:	00bfde84 	movi	r2,-134
  80e890:	e0bffb15 	stw	r2,-20(fp)
  80e894:	00000206 	br	80e8a0 <lseek+0x98>
    }
  }
  else  
  {
    rc = -EBADFD;
  80e898:	00bfebc4 	movi	r2,-81
  80e89c:	e0bffb15 	stw	r2,-20(fp)
  }

  if (rc < 0)
  80e8a0:	e0bffb17 	ldw	r2,-20(fp)
  80e8a4:	1000070e 	bge	r2,zero,80e8c4 <lseek+0xbc>
  {
    ALT_ERRNO = -rc;
  80e8a8:	080e7cc0 	call	80e7cc <alt_get_errno>
  80e8ac:	1007883a 	mov	r3,r2
  80e8b0:	e0bffb17 	ldw	r2,-20(fp)
  80e8b4:	0085c83a 	sub	r2,zero,r2
  80e8b8:	18800015 	stw	r2,0(r3)
    rc = -1;
  80e8bc:	00bfffc4 	movi	r2,-1
  80e8c0:	e0bffb15 	stw	r2,-20(fp)
  }

  return rc;
  80e8c4:	e0bffb17 	ldw	r2,-20(fp)
}
  80e8c8:	e037883a 	mov	sp,fp
  80e8cc:	dfc00117 	ldw	ra,4(sp)
  80e8d0:	df000017 	ldw	fp,0(sp)
  80e8d4:	dec00204 	addi	sp,sp,8
  80e8d8:	f800283a 	ret

0080e8dc <alt_main>:
 * devices/filesystems/components in the system; and call the entry point for
 * the users application, i.e. main().
 */

void alt_main (void)
{
  80e8dc:	defffd04 	addi	sp,sp,-12
  80e8e0:	dfc00215 	stw	ra,8(sp)
  80e8e4:	df000115 	stw	fp,4(sp)
  80e8e8:	df000104 	addi	fp,sp,4
#endif

  /* ALT LOG - please see HAL/sys/alt_log_printf.h for details */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Entering alt_main, calling alt_irq_init.\r\n");
  /* Initialize the interrupt controller. */
  alt_irq_init (NULL);
  80e8ec:	0009883a 	mov	r4,zero
  80e8f0:	080ee440 	call	80ee44 <alt_irq_init>

  /* Initialize the operating system */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done alt_irq_init, calling alt_os_init.\r\n");
  ALT_OS_INIT();
  80e8f4:	0001883a 	nop
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done OS Init, calling alt_sem_create.\r\n");
  ALT_SEM_CREATE (&alt_fd_list_lock, 1);

  /* Initialize the device drivers/software components. */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling alt_sys_init.\r\n");
  alt_sys_init();
  80e8f8:	080ee7c0 	call	80ee7c <alt_sys_init>
   * devices be present (not equal to /dev/null) and if direct drivers
   * aren't being used.
   */

    ALT_LOG_PRINT_BOOT("[alt_main.c] Redirecting IO.\r\n");
    alt_io_redirect(ALT_STDOUT, ALT_STDIN, ALT_STDERR);
  80e8fc:	01802074 	movhi	r6,129
  80e900:	3183e304 	addi	r6,r6,3980
  80e904:	01402074 	movhi	r5,129
  80e908:	2943e304 	addi	r5,r5,3980
  80e90c:	01002074 	movhi	r4,129
  80e910:	2103e304 	addi	r4,r4,3980
  80e914:	08100d40 	call	8100d4 <alt_io_redirect>
  /* 
   * Call the C++ constructors 
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling C++ constructors.\r\n");
  _do_ctors ();
  80e918:	080fc900 	call	80fc90 <_do_ctors>
   * redefined as _exit()). This is in the interest of reducing code footprint,
   * in that the atexit() overhead is removed when it's not needed.
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling atexit.\r\n");
  atexit (_do_dtors);
  80e91c:	01002074 	movhi	r4,129
  80e920:	213f3c04 	addi	r4,r4,-784
  80e924:	08108440 	call	810844 <atexit>
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling main.\r\n");

#ifdef ALT_NO_EXIT
  main (alt_argc, alt_argv, alt_envp);
#else
  result = main (alt_argc, alt_argv, alt_envp);
  80e928:	d0b6c417 	ldw	r2,-9456(gp)
  80e92c:	d0f6c517 	ldw	r3,-9452(gp)
  80e930:	d136c617 	ldw	r4,-9448(gp)
  80e934:	200d883a 	mov	r6,r4
  80e938:	180b883a 	mov	r5,r3
  80e93c:	1009883a 	mov	r4,r2
  80e940:	08004c40 	call	8004c4 <main>
  80e944:	e0bfff15 	stw	r2,-4(fp)
  close(STDOUT_FILENO);
  80e948:	01000044 	movi	r4,1
  80e94c:	080e4180 	call	80e418 <close>
  exit (result);
  80e950:	e13fff17 	ldw	r4,-4(fp)
  80e954:	08108580 	call	810858 <exit>

0080e958 <__malloc_lock>:
 * configuration is single threaded, so there is nothing to do here. Note that 
 * this requires that malloc is never called by an interrupt service routine.
 */

void __malloc_lock ( struct _reent *_r )
{
  80e958:	defffe04 	addi	sp,sp,-8
  80e95c:	df000115 	stw	fp,4(sp)
  80e960:	df000104 	addi	fp,sp,4
  80e964:	e13fff15 	stw	r4,-4(fp)
}
  80e968:	0001883a 	nop
  80e96c:	e037883a 	mov	sp,fp
  80e970:	df000017 	ldw	fp,0(sp)
  80e974:	dec00104 	addi	sp,sp,4
  80e978:	f800283a 	ret

0080e97c <__malloc_unlock>:
/*
 *
 */

void __malloc_unlock ( struct _reent *_r )
{
  80e97c:	defffe04 	addi	sp,sp,-8
  80e980:	df000115 	stw	fp,4(sp)
  80e984:	df000104 	addi	fp,sp,4
  80e988:	e13fff15 	stw	r4,-4(fp)
}
  80e98c:	0001883a 	nop
  80e990:	e037883a 	mov	sp,fp
  80e994:	df000017 	ldw	fp,0(sp)
  80e998:	dec00104 	addi	sp,sp,4
  80e99c:	f800283a 	ret

0080e9a0 <alt_putstr>:
 * Uses the ALT_DRIVER_WRITE() macro to call directly to driver if available.
 * Otherwise, uses newlib provided fputs() routine.
 */
int 
alt_putstr(const char* str)
{
  80e9a0:	defffd04 	addi	sp,sp,-12
  80e9a4:	dfc00215 	stw	ra,8(sp)
  80e9a8:	df000115 	stw	fp,4(sp)
  80e9ac:	df000104 	addi	fp,sp,4
  80e9b0:	e13fff15 	stw	r4,-4(fp)
#else
#ifdef ALT_USE_DIRECT_DRIVERS
    ALT_DRIVER_WRITE_EXTERNS(ALT_STDOUT_DEV);
    return ALT_DRIVER_WRITE(ALT_STDOUT_DEV, str, strlen(str), 0);
#else
    return fputs(str, stdout);
  80e9b4:	d0a00117 	ldw	r2,-32764(gp)
  80e9b8:	10800217 	ldw	r2,8(r2)
  80e9bc:	100b883a 	mov	r5,r2
  80e9c0:	e13fff17 	ldw	r4,-4(fp)
  80e9c4:	081092c0 	call	81092c <fputs>
#endif
#endif
}
  80e9c8:	e037883a 	mov	sp,fp
  80e9cc:	dfc00117 	ldw	ra,4(sp)
  80e9d0:	df000017 	ldw	fp,0(sp)
  80e9d4:	dec00204 	addi	sp,sp,8
  80e9d8:	f800283a 	ret

0080e9dc <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
  80e9dc:	defffe04 	addi	sp,sp,-8
  80e9e0:	dfc00115 	stw	ra,4(sp)
  80e9e4:	df000015 	stw	fp,0(sp)
  80e9e8:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
  80e9ec:	d0a00b17 	ldw	r2,-32724(gp)
  80e9f0:	10000326 	beq	r2,zero,80ea00 <alt_get_errno+0x24>
  80e9f4:	d0a00b17 	ldw	r2,-32724(gp)
  80e9f8:	103ee83a 	callr	r2
  80e9fc:	00000106 	br	80ea04 <alt_get_errno+0x28>
  80ea00:	d0b6c304 	addi	r2,gp,-9460
}
  80ea04:	e037883a 	mov	sp,fp
  80ea08:	dfc00117 	ldw	ra,4(sp)
  80ea0c:	df000017 	ldw	fp,0(sp)
  80ea10:	dec00204 	addi	sp,sp,8
  80ea14:	f800283a 	ret

0080ea18 <read>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_READ (int file, void *ptr, size_t len)
{
  80ea18:	defff904 	addi	sp,sp,-28
  80ea1c:	dfc00615 	stw	ra,24(sp)
  80ea20:	df000515 	stw	fp,20(sp)
  80ea24:	df000504 	addi	fp,sp,20
  80ea28:	e13ffd15 	stw	r4,-12(fp)
  80ea2c:	e17ffe15 	stw	r5,-8(fp)
  80ea30:	e1bfff15 	stw	r6,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
  80ea34:	e0bffd17 	ldw	r2,-12(fp)
  80ea38:	10000616 	blt	r2,zero,80ea54 <read+0x3c>
  80ea3c:	e0bffd17 	ldw	r2,-12(fp)
  80ea40:	10c00324 	muli	r3,r2,12
  80ea44:	00802074 	movhi	r2,129
  80ea48:	10961004 	addi	r2,r2,22592
  80ea4c:	1885883a 	add	r2,r3,r2
  80ea50:	00000106 	br	80ea58 <read+0x40>
  80ea54:	0005883a 	mov	r2,zero
  80ea58:	e0bffb15 	stw	r2,-20(fp)
  
  if (fd)
  80ea5c:	e0bffb17 	ldw	r2,-20(fp)
  80ea60:	10002226 	beq	r2,zero,80eaec <read+0xd4>
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
  80ea64:	e0bffb17 	ldw	r2,-20(fp)
  80ea68:	10800217 	ldw	r2,8(r2)
  80ea6c:	108000cc 	andi	r2,r2,3
  80ea70:	10800060 	cmpeqi	r2,r2,1
  80ea74:	1000181e 	bne	r2,zero,80ead8 <read+0xc0>
        (fd->dev->read))
  80ea78:	e0bffb17 	ldw	r2,-20(fp)
  80ea7c:	10800017 	ldw	r2,0(r2)
  80ea80:	10800517 	ldw	r2,20(r2)
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
  80ea84:	10001426 	beq	r2,zero,80ead8 <read+0xc0>
        (fd->dev->read))
      {
        if ((rval = fd->dev->read(fd, ptr, len)) < 0)
  80ea88:	e0bffb17 	ldw	r2,-20(fp)
  80ea8c:	10800017 	ldw	r2,0(r2)
  80ea90:	10800517 	ldw	r2,20(r2)
  80ea94:	e0ffff17 	ldw	r3,-4(fp)
  80ea98:	180d883a 	mov	r6,r3
  80ea9c:	e17ffe17 	ldw	r5,-8(fp)
  80eaa0:	e13ffb17 	ldw	r4,-20(fp)
  80eaa4:	103ee83a 	callr	r2
  80eaa8:	e0bffc15 	stw	r2,-16(fp)
  80eaac:	e0bffc17 	ldw	r2,-16(fp)
  80eab0:	1000070e 	bge	r2,zero,80ead0 <read+0xb8>
        {
          ALT_ERRNO = -rval;
  80eab4:	080e9dc0 	call	80e9dc <alt_get_errno>
  80eab8:	1007883a 	mov	r3,r2
  80eabc:	e0bffc17 	ldw	r2,-16(fp)
  80eac0:	0085c83a 	sub	r2,zero,r2
  80eac4:	18800015 	stw	r2,0(r3)
          return -1;
  80eac8:	00bfffc4 	movi	r2,-1
  80eacc:	00000c06 	br	80eb00 <read+0xe8>
        }
        return rval;
  80ead0:	e0bffc17 	ldw	r2,-16(fp)
  80ead4:	00000a06 	br	80eb00 <read+0xe8>
      }
      else
      {
        ALT_ERRNO = EACCES;
  80ead8:	080e9dc0 	call	80e9dc <alt_get_errno>
  80eadc:	1007883a 	mov	r3,r2
  80eae0:	00800344 	movi	r2,13
  80eae4:	18800015 	stw	r2,0(r3)
  80eae8:	00000406 	br	80eafc <read+0xe4>
      }
    }
  else
  {
    ALT_ERRNO = EBADFD;
  80eaec:	080e9dc0 	call	80e9dc <alt_get_errno>
  80eaf0:	1007883a 	mov	r3,r2
  80eaf4:	00801444 	movi	r2,81
  80eaf8:	18800015 	stw	r2,0(r3)
  }
  return -1;
  80eafc:	00bfffc4 	movi	r2,-1
}
  80eb00:	e037883a 	mov	sp,fp
  80eb04:	dfc00117 	ldw	ra,4(sp)
  80eb08:	df000017 	ldw	fp,0(sp)
  80eb0c:	dec00204 	addi	sp,sp,8
  80eb10:	f800283a 	ret

0080eb14 <alt_release_fd>:
 * File descriptors correcponding to standard in, standard out and standard 
 * error cannont be released backed to the pool. They are always reserved.
 */

void alt_release_fd (int fd)
{
  80eb14:	defffe04 	addi	sp,sp,-8
  80eb18:	df000115 	stw	fp,4(sp)
  80eb1c:	df000104 	addi	fp,sp,4
  80eb20:	e13fff15 	stw	r4,-4(fp)
  if (fd > 2)
  80eb24:	e0bfff17 	ldw	r2,-4(fp)
  80eb28:	108000d0 	cmplti	r2,r2,3
  80eb2c:	10000d1e 	bne	r2,zero,80eb64 <alt_release_fd+0x50>
  {
    alt_fd_list[fd].fd_flags = 0;
  80eb30:	00802074 	movhi	r2,129
  80eb34:	10961004 	addi	r2,r2,22592
  80eb38:	e0ffff17 	ldw	r3,-4(fp)
  80eb3c:	18c00324 	muli	r3,r3,12
  80eb40:	10c5883a 	add	r2,r2,r3
  80eb44:	10800204 	addi	r2,r2,8
  80eb48:	10000015 	stw	zero,0(r2)
    alt_fd_list[fd].dev      = 0;
  80eb4c:	00802074 	movhi	r2,129
  80eb50:	10961004 	addi	r2,r2,22592
  80eb54:	e0ffff17 	ldw	r3,-4(fp)
  80eb58:	18c00324 	muli	r3,r3,12
  80eb5c:	10c5883a 	add	r2,r2,r3
  80eb60:	10000015 	stw	zero,0(r2)
  }
}
  80eb64:	0001883a 	nop
  80eb68:	e037883a 	mov	sp,fp
  80eb6c:	df000017 	ldw	fp,0(sp)
  80eb70:	dec00104 	addi	sp,sp,4
  80eb74:	f800283a 	ret

0080eb78 <sbrk>:
#endif
 
caddr_t ALT_SBRK (int incr) __attribute__ ((no_instrument_function ));

caddr_t ALT_SBRK (int incr)
{ 
  80eb78:	defff904 	addi	sp,sp,-28
  80eb7c:	df000615 	stw	fp,24(sp)
  80eb80:	df000604 	addi	fp,sp,24
  80eb84:	e13fff15 	stw	r4,-4(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  80eb88:	0005303a 	rdctl	r2,status
  80eb8c:	e0bffe15 	stw	r2,-8(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  80eb90:	e0fffe17 	ldw	r3,-8(fp)
  80eb94:	00bfff84 	movi	r2,-2
  80eb98:	1884703a 	and	r2,r3,r2
  80eb9c:	1001703a 	wrctl	status,r2
  
  return context;
  80eba0:	e0bffe17 	ldw	r2,-8(fp)
  alt_irq_context context;
  char *prev_heap_end; 

  context = alt_irq_disable_all();
  80eba4:	e0bffb15 	stw	r2,-20(fp)

  /* Always return data aligned on a word boundary */
  heap_end = (char *)(((unsigned int)heap_end + 3) & ~3);
  80eba8:	d0a00c17 	ldw	r2,-32720(gp)
  80ebac:	10c000c4 	addi	r3,r2,3
  80ebb0:	00bfff04 	movi	r2,-4
  80ebb4:	1884703a 	and	r2,r3,r2
  80ebb8:	d0a00c15 	stw	r2,-32720(gp)
  if (((heap_end + incr) - __alt_heap_start) > ALT_MAX_HEAP_BYTES) {
    alt_irq_enable_all(context);
    return (caddr_t)-1;
  }
#else
  if ((heap_end + incr) > __alt_heap_limit) {
  80ebbc:	d0e00c17 	ldw	r3,-32720(gp)
  80ebc0:	e0bfff17 	ldw	r2,-4(fp)
  80ebc4:	1887883a 	add	r3,r3,r2
  80ebc8:	00804034 	movhi	r2,256
  80ebcc:	10800004 	addi	r2,r2,0
  80ebd0:	10c0062e 	bgeu	r2,r3,80ebec <sbrk+0x74>
  80ebd4:	e0bffb17 	ldw	r2,-20(fp)
  80ebd8:	e0bffa15 	stw	r2,-24(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  80ebdc:	e0bffa17 	ldw	r2,-24(fp)
  80ebe0:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
    return (caddr_t)-1;
  80ebe4:	00bfffc4 	movi	r2,-1
  80ebe8:	00000b06 	br	80ec18 <sbrk+0xa0>
  }
#endif

  prev_heap_end = heap_end; 
  80ebec:	d0a00c17 	ldw	r2,-32720(gp)
  80ebf0:	e0bffd15 	stw	r2,-12(fp)
  heap_end += incr; 
  80ebf4:	d0e00c17 	ldw	r3,-32720(gp)
  80ebf8:	e0bfff17 	ldw	r2,-4(fp)
  80ebfc:	1885883a 	add	r2,r3,r2
  80ec00:	d0a00c15 	stw	r2,-32720(gp)
  80ec04:	e0bffb17 	ldw	r2,-20(fp)
  80ec08:	e0bffc15 	stw	r2,-16(fp)
  80ec0c:	e0bffc17 	ldw	r2,-16(fp)
  80ec10:	1001703a 	wrctl	status,r2

#endif

  alt_irq_enable_all(context);

  return (caddr_t) prev_heap_end; 
  80ec14:	e0bffd17 	ldw	r2,-12(fp)
} 
  80ec18:	e037883a 	mov	sp,fp
  80ec1c:	df000017 	ldw	fp,0(sp)
  80ec20:	dec00104 	addi	sp,sp,4
  80ec24:	f800283a 	ret

0080ec28 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
  80ec28:	defffe04 	addi	sp,sp,-8
  80ec2c:	dfc00115 	stw	ra,4(sp)
  80ec30:	df000015 	stw	fp,0(sp)
  80ec34:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
  80ec38:	d0a00b17 	ldw	r2,-32724(gp)
  80ec3c:	10000326 	beq	r2,zero,80ec4c <alt_get_errno+0x24>
  80ec40:	d0a00b17 	ldw	r2,-32724(gp)
  80ec44:	103ee83a 	callr	r2
  80ec48:	00000106 	br	80ec50 <alt_get_errno+0x28>
  80ec4c:	d0b6c304 	addi	r2,gp,-9460
}
  80ec50:	e037883a 	mov	sp,fp
  80ec54:	dfc00117 	ldw	ra,4(sp)
  80ec58:	df000017 	ldw	fp,0(sp)
  80ec5c:	dec00204 	addi	sp,sp,8
  80ec60:	f800283a 	ret

0080ec64 <times>:
 *
 * ALT_TIMES is mapped onto the times() system call in alt_syscall.h
 */
 
clock_t ALT_TIMES (struct tms *buf)
{
  80ec64:	defffc04 	addi	sp,sp,-16
  80ec68:	dfc00315 	stw	ra,12(sp)
  80ec6c:	df000215 	stw	fp,8(sp)
  80ec70:	df000204 	addi	fp,sp,8
  80ec74:	e13fff15 	stw	r4,-4(fp)
 * alt_nticks() returns the elapsed number of system clock ticks since reset.
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_nticks (void)
{
  return _alt_nticks;
  80ec78:	d0b6c917 	ldw	r2,-9436(gp)
  clock_t ticks = alt_nticks(); 
  80ec7c:	e0bffe15 	stw	r2,-8(fp)
 * Obtain the system clock rate in ticks/s. 
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_ticks_per_second (void)
{
  return _alt_tick_rate;
  80ec80:	d0b6c817 	ldw	r2,-9440(gp)

  /* If there is no system clock present, generate an error */

  if (!alt_ticks_per_second())
  80ec84:	1000061e 	bne	r2,zero,80eca0 <times+0x3c>
  {
    ALT_ERRNO = ENOSYS;
  80ec88:	080ec280 	call	80ec28 <alt_get_errno>
  80ec8c:	1007883a 	mov	r3,r2
  80ec90:	00801604 	movi	r2,88
  80ec94:	18800015 	stw	r2,0(r3)
    return 0;
  80ec98:	0005883a 	mov	r2,zero
  80ec9c:	00000a06 	br	80ecc8 <times+0x64>
  }

  /* Otherwise return the elapsed time */

  buf->tms_utime  = 0;
  80eca0:	e0bfff17 	ldw	r2,-4(fp)
  80eca4:	10000015 	stw	zero,0(r2)
  buf->tms_stime  = ticks;
  80eca8:	e0bfff17 	ldw	r2,-4(fp)
  80ecac:	e0fffe17 	ldw	r3,-8(fp)
  80ecb0:	10c00115 	stw	r3,4(r2)
  buf->tms_cutime = 0;
  80ecb4:	e0bfff17 	ldw	r2,-4(fp)
  80ecb8:	10000215 	stw	zero,8(r2)
  buf->tms_cstime = 0;
  80ecbc:	e0bfff17 	ldw	r2,-4(fp)
  80ecc0:	10000315 	stw	zero,12(r2)

  return ticks;
  80ecc4:	e0bffe17 	ldw	r2,-8(fp)
}
  80ecc8:	e037883a 	mov	sp,fp
  80eccc:	dfc00117 	ldw	ra,4(sp)
  80ecd0:	df000017 	ldw	fp,0(sp)
  80ecd4:	dec00204 	addi	sp,sp,8
  80ecd8:	f800283a 	ret

0080ecdc <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
  80ecdc:	defffe04 	addi	sp,sp,-8
  80ece0:	dfc00115 	stw	ra,4(sp)
  80ece4:	df000015 	stw	fp,0(sp)
  80ece8:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
  80ecec:	d0a00b17 	ldw	r2,-32724(gp)
  80ecf0:	10000326 	beq	r2,zero,80ed00 <alt_get_errno+0x24>
  80ecf4:	d0a00b17 	ldw	r2,-32724(gp)
  80ecf8:	103ee83a 	callr	r2
  80ecfc:	00000106 	br	80ed04 <alt_get_errno+0x28>
  80ed00:	d0b6c304 	addi	r2,gp,-9460
}
  80ed04:	e037883a 	mov	sp,fp
  80ed08:	dfc00117 	ldw	ra,4(sp)
  80ed0c:	df000017 	ldw	fp,0(sp)
  80ed10:	dec00204 	addi	sp,sp,8
  80ed14:	f800283a 	ret

0080ed18 <write>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_WRITE (int file, const void *ptr, size_t len)
{
  80ed18:	defff904 	addi	sp,sp,-28
  80ed1c:	dfc00615 	stw	ra,24(sp)
  80ed20:	df000515 	stw	fp,20(sp)
  80ed24:	df000504 	addi	fp,sp,20
  80ed28:	e13ffd15 	stw	r4,-12(fp)
  80ed2c:	e17ffe15 	stw	r5,-8(fp)
  80ed30:	e1bfff15 	stw	r6,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
  80ed34:	e0bffd17 	ldw	r2,-12(fp)
  80ed38:	10000616 	blt	r2,zero,80ed54 <write+0x3c>
  80ed3c:	e0bffd17 	ldw	r2,-12(fp)
  80ed40:	10c00324 	muli	r3,r2,12
  80ed44:	00802074 	movhi	r2,129
  80ed48:	10961004 	addi	r2,r2,22592
  80ed4c:	1885883a 	add	r2,r3,r2
  80ed50:	00000106 	br	80ed58 <write+0x40>
  80ed54:	0005883a 	mov	r2,zero
  80ed58:	e0bffb15 	stw	r2,-20(fp)
  
  if (fd)
  80ed5c:	e0bffb17 	ldw	r2,-20(fp)
  80ed60:	10002126 	beq	r2,zero,80ede8 <write+0xd0>
     * If the file has not been opened with write access, or if the driver does
     * not provide an implementation of write(), generate an error. Otherwise
     * call the drivers write() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_RDONLY) && fd->dev->write)
  80ed64:	e0bffb17 	ldw	r2,-20(fp)
  80ed68:	10800217 	ldw	r2,8(r2)
  80ed6c:	108000cc 	andi	r2,r2,3
  80ed70:	10001826 	beq	r2,zero,80edd4 <write+0xbc>
  80ed74:	e0bffb17 	ldw	r2,-20(fp)
  80ed78:	10800017 	ldw	r2,0(r2)
  80ed7c:	10800617 	ldw	r2,24(r2)
  80ed80:	10001426 	beq	r2,zero,80edd4 <write+0xbc>
    {
      
      /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */
      ALT_LOG_WRITE_FUNCTION(ptr,len);

      if ((rval = fd->dev->write(fd, ptr, len)) < 0)
  80ed84:	e0bffb17 	ldw	r2,-20(fp)
  80ed88:	10800017 	ldw	r2,0(r2)
  80ed8c:	10800617 	ldw	r2,24(r2)
  80ed90:	e0ffff17 	ldw	r3,-4(fp)
  80ed94:	180d883a 	mov	r6,r3
  80ed98:	e17ffe17 	ldw	r5,-8(fp)
  80ed9c:	e13ffb17 	ldw	r4,-20(fp)
  80eda0:	103ee83a 	callr	r2
  80eda4:	e0bffc15 	stw	r2,-16(fp)
  80eda8:	e0bffc17 	ldw	r2,-16(fp)
  80edac:	1000070e 	bge	r2,zero,80edcc <write+0xb4>
      {
        ALT_ERRNO = -rval;
  80edb0:	080ecdc0 	call	80ecdc <alt_get_errno>
  80edb4:	1007883a 	mov	r3,r2
  80edb8:	e0bffc17 	ldw	r2,-16(fp)
  80edbc:	0085c83a 	sub	r2,zero,r2
  80edc0:	18800015 	stw	r2,0(r3)
        return -1;
  80edc4:	00bfffc4 	movi	r2,-1
  80edc8:	00000c06 	br	80edfc <write+0xe4>
      }
      return rval;
  80edcc:	e0bffc17 	ldw	r2,-16(fp)
  80edd0:	00000a06 	br	80edfc <write+0xe4>
    }
    else
    {
      ALT_ERRNO = EACCES;
  80edd4:	080ecdc0 	call	80ecdc <alt_get_errno>
  80edd8:	1007883a 	mov	r3,r2
  80eddc:	00800344 	movi	r2,13
  80ede0:	18800015 	stw	r2,0(r3)
  80ede4:	00000406 	br	80edf8 <write+0xe0>
    }
  }
  else  
  {
    ALT_ERRNO = EBADFD;
  80ede8:	080ecdc0 	call	80ecdc <alt_get_errno>
  80edec:	1007883a 	mov	r3,r2
  80edf0:	00801444 	movi	r2,81
  80edf4:	18800015 	stw	r2,0(r3)
  }
  return -1;
  80edf8:	00bfffc4 	movi	r2,-1
}
  80edfc:	e037883a 	mov	sp,fp
  80ee00:	dfc00117 	ldw	ra,4(sp)
  80ee04:	df000017 	ldw	fp,0(sp)
  80ee08:	dec00204 	addi	sp,sp,8
  80ee0c:	f800283a 	ret

0080ee10 <alt_dev_reg>:
 */

extern int alt_fs_reg  (alt_dev* dev); 

static ALT_INLINE int alt_dev_reg (alt_dev* dev)
{
  80ee10:	defffd04 	addi	sp,sp,-12
  80ee14:	dfc00215 	stw	ra,8(sp)
  80ee18:	df000115 	stw	fp,4(sp)
  80ee1c:	df000104 	addi	fp,sp,4
  80ee20:	e13fff15 	stw	r4,-4(fp)
  extern alt_llist alt_dev_list;

  return alt_dev_llist_insert ((alt_dev_llist*) dev, &alt_dev_list);
  80ee24:	d1600804 	addi	r5,gp,-32736
  80ee28:	e13fff17 	ldw	r4,-4(fp)
  80ee2c:	080fbec0 	call	80fbec <alt_dev_llist_insert>
}
  80ee30:	e037883a 	mov	sp,fp
  80ee34:	dfc00117 	ldw	ra,4(sp)
  80ee38:	df000017 	ldw	fp,0(sp)
  80ee3c:	dec00204 	addi	sp,sp,8
  80ee40:	f800283a 	ret

0080ee44 <alt_irq_init>:
 * The "base" parameter is ignored and only
 * present for backwards-compatibility.
 */

void alt_irq_init ( const void* base )
{
  80ee44:	defffd04 	addi	sp,sp,-12
  80ee48:	dfc00215 	stw	ra,8(sp)
  80ee4c:	df000115 	stw	fp,4(sp)
  80ee50:	df000104 	addi	fp,sp,4
  80ee54:	e13fff15 	stw	r4,-4(fp)
    ALTERA_NIOS2_GEN2_IRQ_INIT ( CPU, cpu);
  80ee58:	08105480 	call	810548 <altera_nios2_gen2_irq_init>
 * alt_irq_cpu_enable_interrupts() enables the CPU to start taking interrupts.
 */
static ALT_INLINE void ALT_ALWAYS_INLINE 
       alt_irq_cpu_enable_interrupts (void)
{
    NIOS2_WRITE_STATUS(NIOS2_STATUS_PIE_MSK
  80ee5c:	00800044 	movi	r2,1
  80ee60:	1001703a 	wrctl	status,r2
    alt_irq_cpu_enable_interrupts();
}
  80ee64:	0001883a 	nop
  80ee68:	e037883a 	mov	sp,fp
  80ee6c:	dfc00117 	ldw	ra,4(sp)
  80ee70:	df000017 	ldw	fp,0(sp)
  80ee74:	dec00204 	addi	sp,sp,8
  80ee78:	f800283a 	ret

0080ee7c <alt_sys_init>:
 * Initialize the non-interrupt controller devices.
 * Called after alt_irq_init().
 */

void alt_sys_init( void )
{
  80ee7c:	defffe04 	addi	sp,sp,-8
  80ee80:	dfc00115 	stw	ra,4(sp)
  80ee84:	df000015 	stw	fp,0(sp)
  80ee88:	d839883a 	mov	fp,sp
    ALTERA_AVALON_TIMER_INIT ( SYS_CLK_TIMER, sys_clk_timer);
  80ee8c:	01c0fa04 	movi	r7,1000
  80ee90:	01800044 	movi	r6,1
  80ee94:	000b883a 	mov	r5,zero
  80ee98:	01004034 	movhi	r4,256
  80ee9c:	21040004 	addi	r4,r4,4096
  80eea0:	080f9c00 	call	80f9c0 <alt_avalon_timer_sc_init>
    ALTERA_AVALON_JTAG_UART_INIT ( JTAG_UART, jtag_uart);
  80eea4:	01800404 	movi	r6,16
  80eea8:	000b883a 	mov	r5,zero
  80eeac:	01002074 	movhi	r4,129
  80eeb0:	21167a04 	addi	r4,r4,23016
  80eeb4:	080f0440 	call	80f044 <altera_avalon_jtag_uart_init>
  80eeb8:	01002074 	movhi	r4,129
  80eebc:	21167004 	addi	r4,r4,22976
  80eec0:	080ee100 	call	80ee10 <alt_dev_reg>
    ALTERA_AVALON_SYSID_QSYS_INIT ( SYSID, sysid);
  80eec4:	0001883a 	nop
}
  80eec8:	0001883a 	nop
  80eecc:	e037883a 	mov	sp,fp
  80eed0:	dfc00117 	ldw	ra,4(sp)
  80eed4:	df000017 	ldw	fp,0(sp)
  80eed8:	dec00204 	addi	sp,sp,8
  80eedc:	f800283a 	ret

0080eee0 <altera_avalon_jtag_uart_read_fd>:
 *
 */

int 
altera_avalon_jtag_uart_read_fd(alt_fd* fd, char* buffer, int space)
{
  80eee0:	defffa04 	addi	sp,sp,-24
  80eee4:	dfc00515 	stw	ra,20(sp)
  80eee8:	df000415 	stw	fp,16(sp)
  80eeec:	df000404 	addi	fp,sp,16
  80eef0:	e13ffd15 	stw	r4,-12(fp)
  80eef4:	e17ffe15 	stw	r5,-8(fp)
  80eef8:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
  80eefc:	e0bffd17 	ldw	r2,-12(fp)
  80ef00:	10800017 	ldw	r2,0(r2)
  80ef04:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_read(&dev->state, buffer, space,
  80ef08:	e0bffc17 	ldw	r2,-16(fp)
  80ef0c:	10c00a04 	addi	r3,r2,40
  80ef10:	e0bffd17 	ldw	r2,-12(fp)
  80ef14:	10800217 	ldw	r2,8(r2)
  80ef18:	100f883a 	mov	r7,r2
  80ef1c:	e1bfff17 	ldw	r6,-4(fp)
  80ef20:	e17ffe17 	ldw	r5,-8(fp)
  80ef24:	1809883a 	mov	r4,r3
  80ef28:	080f5080 	call	80f508 <altera_avalon_jtag_uart_read>
      fd->fd_flags);
}
  80ef2c:	e037883a 	mov	sp,fp
  80ef30:	dfc00117 	ldw	ra,4(sp)
  80ef34:	df000017 	ldw	fp,0(sp)
  80ef38:	dec00204 	addi	sp,sp,8
  80ef3c:	f800283a 	ret

0080ef40 <altera_avalon_jtag_uart_write_fd>:

int 
altera_avalon_jtag_uart_write_fd(alt_fd* fd, const char* buffer, int space)
{
  80ef40:	defffa04 	addi	sp,sp,-24
  80ef44:	dfc00515 	stw	ra,20(sp)
  80ef48:	df000415 	stw	fp,16(sp)
  80ef4c:	df000404 	addi	fp,sp,16
  80ef50:	e13ffd15 	stw	r4,-12(fp)
  80ef54:	e17ffe15 	stw	r5,-8(fp)
  80ef58:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
  80ef5c:	e0bffd17 	ldw	r2,-12(fp)
  80ef60:	10800017 	ldw	r2,0(r2)
  80ef64:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_write(&dev->state, buffer, space,
  80ef68:	e0bffc17 	ldw	r2,-16(fp)
  80ef6c:	10c00a04 	addi	r3,r2,40
  80ef70:	e0bffd17 	ldw	r2,-12(fp)
  80ef74:	10800217 	ldw	r2,8(r2)
  80ef78:	100f883a 	mov	r7,r2
  80ef7c:	e1bfff17 	ldw	r6,-4(fp)
  80ef80:	e17ffe17 	ldw	r5,-8(fp)
  80ef84:	1809883a 	mov	r4,r3
  80ef88:	080f7240 	call	80f724 <altera_avalon_jtag_uart_write>
      fd->fd_flags);
}
  80ef8c:	e037883a 	mov	sp,fp
  80ef90:	dfc00117 	ldw	ra,4(sp)
  80ef94:	df000017 	ldw	fp,0(sp)
  80ef98:	dec00204 	addi	sp,sp,8
  80ef9c:	f800283a 	ret

0080efa0 <altera_avalon_jtag_uart_close_fd>:

#ifndef ALTERA_AVALON_JTAG_UART_SMALL

int 
altera_avalon_jtag_uart_close_fd(alt_fd* fd)
{
  80efa0:	defffc04 	addi	sp,sp,-16
  80efa4:	dfc00315 	stw	ra,12(sp)
  80efa8:	df000215 	stw	fp,8(sp)
  80efac:	df000204 	addi	fp,sp,8
  80efb0:	e13fff15 	stw	r4,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
  80efb4:	e0bfff17 	ldw	r2,-4(fp)
  80efb8:	10800017 	ldw	r2,0(r2)
  80efbc:	e0bffe15 	stw	r2,-8(fp)

    return altera_avalon_jtag_uart_close(&dev->state, fd->fd_flags);
  80efc0:	e0bffe17 	ldw	r2,-8(fp)
  80efc4:	10c00a04 	addi	r3,r2,40
  80efc8:	e0bfff17 	ldw	r2,-4(fp)
  80efcc:	10800217 	ldw	r2,8(r2)
  80efd0:	100b883a 	mov	r5,r2
  80efd4:	1809883a 	mov	r4,r3
  80efd8:	080f3b00 	call	80f3b0 <altera_avalon_jtag_uart_close>
}
  80efdc:	e037883a 	mov	sp,fp
  80efe0:	dfc00117 	ldw	ra,4(sp)
  80efe4:	df000017 	ldw	fp,0(sp)
  80efe8:	dec00204 	addi	sp,sp,8
  80efec:	f800283a 	ret

0080eff0 <altera_avalon_jtag_uart_ioctl_fd>:

int 
altera_avalon_jtag_uart_ioctl_fd(alt_fd* fd, int req, void* arg)
{
  80eff0:	defffa04 	addi	sp,sp,-24
  80eff4:	dfc00515 	stw	ra,20(sp)
  80eff8:	df000415 	stw	fp,16(sp)
  80effc:	df000404 	addi	fp,sp,16
  80f000:	e13ffd15 	stw	r4,-12(fp)
  80f004:	e17ffe15 	stw	r5,-8(fp)
  80f008:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev;
  80f00c:	e0bffd17 	ldw	r2,-12(fp)
  80f010:	10800017 	ldw	r2,0(r2)
  80f014:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_ioctl(&dev->state, req, arg);
  80f018:	e0bffc17 	ldw	r2,-16(fp)
  80f01c:	10800a04 	addi	r2,r2,40
  80f020:	e1bfff17 	ldw	r6,-4(fp)
  80f024:	e17ffe17 	ldw	r5,-8(fp)
  80f028:	1009883a 	mov	r4,r2
  80f02c:	080f4180 	call	80f418 <altera_avalon_jtag_uart_ioctl>
}
  80f030:	e037883a 	mov	sp,fp
  80f034:	dfc00117 	ldw	ra,4(sp)
  80f038:	df000017 	ldw	fp,0(sp)
  80f03c:	dec00204 	addi	sp,sp,8
  80f040:	f800283a 	ret

0080f044 <altera_avalon_jtag_uart_init>:
 * Return 1 on sucessful IRQ register and 0 on failure.
 */

void altera_avalon_jtag_uart_init(altera_avalon_jtag_uart_state* sp, 
                                  int irq_controller_id, int irq)
{
  80f044:	defffa04 	addi	sp,sp,-24
  80f048:	dfc00515 	stw	ra,20(sp)
  80f04c:	df000415 	stw	fp,16(sp)
  80f050:	df000404 	addi	fp,sp,16
  80f054:	e13ffd15 	stw	r4,-12(fp)
  80f058:	e17ffe15 	stw	r5,-8(fp)
  80f05c:	e1bfff15 	stw	r6,-4(fp)
  ALT_FLAG_CREATE(&sp->events, 0);
  ALT_SEM_CREATE(&sp->read_lock, 1);
  ALT_SEM_CREATE(&sp->write_lock, 1);

  /* enable read interrupts at the device */
  sp->irq_enable = ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
  80f060:	e0bffd17 	ldw	r2,-12(fp)
  80f064:	00c00044 	movi	r3,1
  80f068:	10c00815 	stw	r3,32(r2)

  IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable); 
  80f06c:	e0bffd17 	ldw	r2,-12(fp)
  80f070:	10800017 	ldw	r2,0(r2)
  80f074:	10800104 	addi	r2,r2,4
  80f078:	1007883a 	mov	r3,r2
  80f07c:	e0bffd17 	ldw	r2,-12(fp)
  80f080:	10800817 	ldw	r2,32(r2)
  80f084:	18800035 	stwio	r2,0(r3)
  
  /* register the interrupt handler */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
  alt_ic_isr_register(irq_controller_id, irq, altera_avalon_jtag_uart_irq, 
  80f088:	e0bffe17 	ldw	r2,-8(fp)
  80f08c:	e0ffff17 	ldw	r3,-4(fp)
  80f090:	d8000015 	stw	zero,0(sp)
  80f094:	e1fffd17 	ldw	r7,-12(fp)
  80f098:	01802074 	movhi	r6,129
  80f09c:	31bc4104 	addi	r6,r6,-3836
  80f0a0:	180b883a 	mov	r5,r3
  80f0a4:	1009883a 	mov	r4,r2
  80f0a8:	080fd700 	call	80fd70 <alt_ic_isr_register>
#else
  alt_irq_register(irq, sp, altera_avalon_jtag_uart_irq);
#endif  

  /* Register an alarm to go off every second to check for presence of host */
  sp->host_inactive = 0;
  80f0ac:	e0bffd17 	ldw	r2,-12(fp)
  80f0b0:	10000915 	stw	zero,36(r2)

  if (alt_alarm_start(&sp->alarm, alt_ticks_per_second(), 
  80f0b4:	e0bffd17 	ldw	r2,-12(fp)
  80f0b8:	10800204 	addi	r2,r2,8
  80f0bc:	d0f6c817 	ldw	r3,-9440(gp)
  80f0c0:	e1fffd17 	ldw	r7,-12(fp)
  80f0c4:	01802074 	movhi	r6,129
  80f0c8:	31bcc404 	addi	r6,r6,-3312
  80f0cc:	180b883a 	mov	r5,r3
  80f0d0:	1009883a 	mov	r4,r2
  80f0d4:	080fa3c0 	call	80fa3c <alt_alarm_start>
  80f0d8:	1000040e 	bge	r2,zero,80f0ec <altera_avalon_jtag_uart_init+0xa8>
    &altera_avalon_jtag_uart_timeout, sp) < 0)
  {
    /* If we can't set the alarm then record "don't know if host present" 
     * and behave as though the host is present.
     */
    sp->timeout = INT_MAX;
  80f0dc:	e0fffd17 	ldw	r3,-12(fp)
  80f0e0:	00a00034 	movhi	r2,32768
  80f0e4:	10bfffc4 	addi	r2,r2,-1
  80f0e8:	18800115 	stw	r2,4(r3)
  }

  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ALARM_REGISTER(sp, sp->base);
}
  80f0ec:	0001883a 	nop
  80f0f0:	e037883a 	mov	sp,fp
  80f0f4:	dfc00117 	ldw	ra,4(sp)
  80f0f8:	df000017 	ldw	fp,0(sp)
  80f0fc:	dec00204 	addi	sp,sp,8
  80f100:	f800283a 	ret

0080f104 <altera_avalon_jtag_uart_irq>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void altera_avalon_jtag_uart_irq(void* context)
#else
static void altera_avalon_jtag_uart_irq(void* context, alt_u32 id)
#endif
{
  80f104:	defff804 	addi	sp,sp,-32
  80f108:	df000715 	stw	fp,28(sp)
  80f10c:	df000704 	addi	fp,sp,28
  80f110:	e13fff15 	stw	r4,-4(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state*) context;
  80f114:	e0bfff17 	ldw	r2,-4(fp)
  80f118:	e0bffb15 	stw	r2,-20(fp)
  unsigned int base = sp->base;
  80f11c:	e0bffb17 	ldw	r2,-20(fp)
  80f120:	10800017 	ldw	r2,0(r2)
  80f124:	e0bffc15 	stw	r2,-16(fp)
  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ISR_FUNCTION(base, sp);

  for ( ; ; )
  {
    unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
  80f128:	e0bffc17 	ldw	r2,-16(fp)
  80f12c:	10800104 	addi	r2,r2,4
  80f130:	10800037 	ldwio	r2,0(r2)
  80f134:	e0bffd15 	stw	r2,-12(fp)

    /* Return once nothing more to do */
    if ((control & (ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK | ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)) == 0)
  80f138:	e0bffd17 	ldw	r2,-12(fp)
  80f13c:	1080c00c 	andi	r2,r2,768
  80f140:	10006d26 	beq	r2,zero,80f2f8 <altera_avalon_jtag_uart_irq+0x1f4>
      break;

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK)
  80f144:	e0bffd17 	ldw	r2,-12(fp)
  80f148:	1080400c 	andi	r2,r2,256
  80f14c:	10003526 	beq	r2,zero,80f224 <altera_avalon_jtag_uart_irq+0x120>
    {
      /* process a read irq.  Start by assuming that there is data in the
       * receive FIFO (otherwise why would we have been interrupted?)
       */
      unsigned int data = 1 << ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_OFST;
  80f150:	00800074 	movhi	r2,1
  80f154:	e0bff915 	stw	r2,-28(fp)
      for ( ; ; )
      {
        /* Check whether there is space in the buffer.  If not then we must not
         * read any characters from the buffer as they will be lost.
         */
        unsigned int next = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
  80f158:	e0bffb17 	ldw	r2,-20(fp)
  80f15c:	10800a17 	ldw	r2,40(r2)
  80f160:	10800044 	addi	r2,r2,1
  80f164:	1081ffcc 	andi	r2,r2,2047
  80f168:	e0bffe15 	stw	r2,-8(fp)
        if (next == sp->rx_out)
  80f16c:	e0bffb17 	ldw	r2,-20(fp)
  80f170:	10c00b17 	ldw	r3,44(r2)
  80f174:	e0bffe17 	ldw	r2,-8(fp)
  80f178:	18801526 	beq	r3,r2,80f1d0 <altera_avalon_jtag_uart_irq+0xcc>
          break;

        /* Try to remove a character from the FIFO and find out whether there
         * are any more characters remaining.
         */
        data = IORD_ALTERA_AVALON_JTAG_UART_DATA(base);
  80f17c:	e0bffc17 	ldw	r2,-16(fp)
  80f180:	10800037 	ldwio	r2,0(r2)
  80f184:	e0bff915 	stw	r2,-28(fp)
        
        if ((data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK) == 0)
  80f188:	e0bff917 	ldw	r2,-28(fp)
  80f18c:	10a0000c 	andi	r2,r2,32768
  80f190:	10001126 	beq	r2,zero,80f1d8 <altera_avalon_jtag_uart_irq+0xd4>
          break;

        sp->rx_buf[sp->rx_in] = (data & ALTERA_AVALON_JTAG_UART_DATA_DATA_MSK) >> ALTERA_AVALON_JTAG_UART_DATA_DATA_OFST;
  80f194:	e0bffb17 	ldw	r2,-20(fp)
  80f198:	10800a17 	ldw	r2,40(r2)
  80f19c:	e0fff917 	ldw	r3,-28(fp)
  80f1a0:	1809883a 	mov	r4,r3
  80f1a4:	e0fffb17 	ldw	r3,-20(fp)
  80f1a8:	1885883a 	add	r2,r3,r2
  80f1ac:	10800e04 	addi	r2,r2,56
  80f1b0:	11000005 	stb	r4,0(r2)
        sp->rx_in = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
  80f1b4:	e0bffb17 	ldw	r2,-20(fp)
  80f1b8:	10800a17 	ldw	r2,40(r2)
  80f1bc:	10800044 	addi	r2,r2,1
  80f1c0:	10c1ffcc 	andi	r3,r2,2047
  80f1c4:	e0bffb17 	ldw	r2,-20(fp)
  80f1c8:	10c00a15 	stw	r3,40(r2)

        /* Post an event to notify jtag_uart_read that a character has been read */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_READ_RDY, OS_FLAG_SET);
      }
  80f1cc:	003fe206 	br	80f158 <__alt_data_end+0xff80f158>
        /* Check whether there is space in the buffer.  If not then we must not
         * read any characters from the buffer as they will be lost.
         */
        unsigned int next = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
        if (next == sp->rx_out)
          break;
  80f1d0:	0001883a 	nop
  80f1d4:	00000106 	br	80f1dc <altera_avalon_jtag_uart_irq+0xd8>
         * are any more characters remaining.
         */
        data = IORD_ALTERA_AVALON_JTAG_UART_DATA(base);
        
        if ((data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK) == 0)
          break;
  80f1d8:	0001883a 	nop

        /* Post an event to notify jtag_uart_read that a character has been read */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_READ_RDY, OS_FLAG_SET);
      }

      if (data & ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_MSK)
  80f1dc:	e0bff917 	ldw	r2,-28(fp)
  80f1e0:	10bfffec 	andhi	r2,r2,65535
  80f1e4:	10000f26 	beq	r2,zero,80f224 <altera_avalon_jtag_uart_irq+0x120>
      {
        /* If there is still data available here then the buffer is full 
         * so turn off receive interrupts until some space becomes available.
         */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
  80f1e8:	e0bffb17 	ldw	r2,-20(fp)
  80f1ec:	10c00817 	ldw	r3,32(r2)
  80f1f0:	00bfff84 	movi	r2,-2
  80f1f4:	1886703a 	and	r3,r3,r2
  80f1f8:	e0bffb17 	ldw	r2,-20(fp)
  80f1fc:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(base, sp->irq_enable);
  80f200:	e0bffc17 	ldw	r2,-16(fp)
  80f204:	10800104 	addi	r2,r2,4
  80f208:	1007883a 	mov	r3,r2
  80f20c:	e0bffb17 	ldw	r2,-20(fp)
  80f210:	10800817 	ldw	r2,32(r2)
  80f214:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
  80f218:	e0bffc17 	ldw	r2,-16(fp)
  80f21c:	10800104 	addi	r2,r2,4
  80f220:	10800037 	ldwio	r2,0(r2)
      }
    }

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
  80f224:	e0bffd17 	ldw	r2,-12(fp)
  80f228:	1080800c 	andi	r2,r2,512
  80f22c:	103fbe26 	beq	r2,zero,80f128 <__alt_data_end+0xff80f128>
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;
  80f230:	e0bffd17 	ldw	r2,-12(fp)
  80f234:	1004d43a 	srli	r2,r2,16
  80f238:	e0bffa15 	stw	r2,-24(fp)

      while (space > 0 && sp->tx_out != sp->tx_in)
  80f23c:	00001406 	br	80f290 <altera_avalon_jtag_uart_irq+0x18c>
      {
        IOWR_ALTERA_AVALON_JTAG_UART_DATA(base, sp->tx_buf[sp->tx_out]);
  80f240:	e0bffc17 	ldw	r2,-16(fp)
  80f244:	e0fffb17 	ldw	r3,-20(fp)
  80f248:	18c00d17 	ldw	r3,52(r3)
  80f24c:	e13ffb17 	ldw	r4,-20(fp)
  80f250:	20c7883a 	add	r3,r4,r3
  80f254:	18c20e04 	addi	r3,r3,2104
  80f258:	18c00003 	ldbu	r3,0(r3)
  80f25c:	18c03fcc 	andi	r3,r3,255
  80f260:	18c0201c 	xori	r3,r3,128
  80f264:	18ffe004 	addi	r3,r3,-128
  80f268:	10c00035 	stwio	r3,0(r2)

        sp->tx_out = (sp->tx_out + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
  80f26c:	e0bffb17 	ldw	r2,-20(fp)
  80f270:	10800d17 	ldw	r2,52(r2)
  80f274:	10800044 	addi	r2,r2,1
  80f278:	10c1ffcc 	andi	r3,r2,2047
  80f27c:	e0bffb17 	ldw	r2,-20(fp)
  80f280:	10c00d15 	stw	r3,52(r2)

        /* Post an event to notify jtag_uart_write that a character has been written */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
  80f284:	e0bffa17 	ldw	r2,-24(fp)
  80f288:	10bfffc4 	addi	r2,r2,-1
  80f28c:	e0bffa15 	stw	r2,-24(fp)
    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;

      while (space > 0 && sp->tx_out != sp->tx_in)
  80f290:	e0bffa17 	ldw	r2,-24(fp)
  80f294:	10000526 	beq	r2,zero,80f2ac <altera_avalon_jtag_uart_irq+0x1a8>
  80f298:	e0bffb17 	ldw	r2,-20(fp)
  80f29c:	10c00d17 	ldw	r3,52(r2)
  80f2a0:	e0bffb17 	ldw	r2,-20(fp)
  80f2a4:	10800c17 	ldw	r2,48(r2)
  80f2a8:	18bfe51e 	bne	r3,r2,80f240 <__alt_data_end+0xff80f240>
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
      }

      if (space > 0)
  80f2ac:	e0bffa17 	ldw	r2,-24(fp)
  80f2b0:	103f9d26 	beq	r2,zero,80f128 <__alt_data_end+0xff80f128>
      {
        /* If we don't have any more data available then turn off the TX interrupt */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
  80f2b4:	e0bffb17 	ldw	r2,-20(fp)
  80f2b8:	10c00817 	ldw	r3,32(r2)
  80f2bc:	00bfff44 	movi	r2,-3
  80f2c0:	1886703a 	and	r3,r3,r2
  80f2c4:	e0bffb17 	ldw	r2,-20(fp)
  80f2c8:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
  80f2cc:	e0bffb17 	ldw	r2,-20(fp)
  80f2d0:	10800017 	ldw	r2,0(r2)
  80f2d4:	10800104 	addi	r2,r2,4
  80f2d8:	1007883a 	mov	r3,r2
  80f2dc:	e0bffb17 	ldw	r2,-20(fp)
  80f2e0:	10800817 	ldw	r2,32(r2)
  80f2e4:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
  80f2e8:	e0bffc17 	ldw	r2,-16(fp)
  80f2ec:	10800104 	addi	r2,r2,4
  80f2f0:	10800037 	ldwio	r2,0(r2)
      }
    }
  }
  80f2f4:	003f8c06 	br	80f128 <__alt_data_end+0xff80f128>
  {
    unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);

    /* Return once nothing more to do */
    if ((control & (ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK | ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)) == 0)
      break;
  80f2f8:	0001883a 	nop
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
      }
    }
  }
}
  80f2fc:	0001883a 	nop
  80f300:	e037883a 	mov	sp,fp
  80f304:	df000017 	ldw	fp,0(sp)
  80f308:	dec00104 	addi	sp,sp,4
  80f30c:	f800283a 	ret

0080f310 <altera_avalon_jtag_uart_timeout>:
 * Timeout routine is called every second
 */

static alt_u32 
altera_avalon_jtag_uart_timeout(void* context) 
{
  80f310:	defff804 	addi	sp,sp,-32
  80f314:	df000715 	stw	fp,28(sp)
  80f318:	df000704 	addi	fp,sp,28
  80f31c:	e13ffb15 	stw	r4,-20(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state *) context;
  80f320:	e0bffb17 	ldw	r2,-20(fp)
  80f324:	e0bff915 	stw	r2,-28(fp)

  unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base);
  80f328:	e0bff917 	ldw	r2,-28(fp)
  80f32c:	10800017 	ldw	r2,0(r2)
  80f330:	10800104 	addi	r2,r2,4
  80f334:	10800037 	ldwio	r2,0(r2)
  80f338:	e0bffa15 	stw	r2,-24(fp)

  if (control & ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK)
  80f33c:	e0bffa17 	ldw	r2,-24(fp)
  80f340:	1081000c 	andi	r2,r2,1024
  80f344:	10000b26 	beq	r2,zero,80f374 <altera_avalon_jtag_uart_timeout+0x64>
  {
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable | ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK);
  80f348:	e0bff917 	ldw	r2,-28(fp)
  80f34c:	10800017 	ldw	r2,0(r2)
  80f350:	10800104 	addi	r2,r2,4
  80f354:	1007883a 	mov	r3,r2
  80f358:	e0bff917 	ldw	r2,-28(fp)
  80f35c:	10800817 	ldw	r2,32(r2)
  80f360:	10810014 	ori	r2,r2,1024
  80f364:	18800035 	stwio	r2,0(r3)
    sp->host_inactive = 0;
  80f368:	e0bff917 	ldw	r2,-28(fp)
  80f36c:	10000915 	stw	zero,36(r2)
  80f370:	00000a06 	br	80f39c <altera_avalon_jtag_uart_timeout+0x8c>
  }
  else if (sp->host_inactive < INT_MAX - 2) {
  80f374:	e0bff917 	ldw	r2,-28(fp)
  80f378:	10c00917 	ldw	r3,36(r2)
  80f37c:	00a00034 	movhi	r2,32768
  80f380:	10bfff04 	addi	r2,r2,-4
  80f384:	10c00536 	bltu	r2,r3,80f39c <altera_avalon_jtag_uart_timeout+0x8c>
    sp->host_inactive++;
  80f388:	e0bff917 	ldw	r2,-28(fp)
  80f38c:	10800917 	ldw	r2,36(r2)
  80f390:	10c00044 	addi	r3,r2,1
  80f394:	e0bff917 	ldw	r2,-28(fp)
  80f398:	10c00915 	stw	r3,36(r2)
  80f39c:	d0b6c817 	ldw	r2,-9440(gp)
      ALT_FLAG_POST (sp->events, ALT_JTAG_UART_TIMEOUT, OS_FLAG_SET);
    }
  }

  return alt_ticks_per_second();
}
  80f3a0:	e037883a 	mov	sp,fp
  80f3a4:	df000017 	ldw	fp,0(sp)
  80f3a8:	dec00104 	addi	sp,sp,4
  80f3ac:	f800283a 	ret

0080f3b0 <altera_avalon_jtag_uart_close>:
 * The close routine is not implemented for the small driver; instead it will
 * map to null. This is because the small driver simply waits while characters
 * are transmitted; there is no interrupt-serviced buffer to empty 
 */
int altera_avalon_jtag_uart_close(altera_avalon_jtag_uart_state* sp, int flags)
{
  80f3b0:	defffd04 	addi	sp,sp,-12
  80f3b4:	df000215 	stw	fp,8(sp)
  80f3b8:	df000204 	addi	fp,sp,8
  80f3bc:	e13ffe15 	stw	r4,-8(fp)
  80f3c0:	e17fff15 	stw	r5,-4(fp)
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
  80f3c4:	00000506 	br	80f3dc <altera_avalon_jtag_uart_close+0x2c>
    if (flags & O_NONBLOCK) {
  80f3c8:	e0bfff17 	ldw	r2,-4(fp)
  80f3cc:	1090000c 	andi	r2,r2,16384
  80f3d0:	10000226 	beq	r2,zero,80f3dc <altera_avalon_jtag_uart_close+0x2c>
      return -EWOULDBLOCK; 
  80f3d4:	00bffd44 	movi	r2,-11
  80f3d8:	00000b06 	br	80f408 <altera_avalon_jtag_uart_close+0x58>
{
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
  80f3dc:	e0bffe17 	ldw	r2,-8(fp)
  80f3e0:	10c00d17 	ldw	r3,52(r2)
  80f3e4:	e0bffe17 	ldw	r2,-8(fp)
  80f3e8:	10800c17 	ldw	r2,48(r2)
  80f3ec:	18800526 	beq	r3,r2,80f404 <altera_avalon_jtag_uart_close+0x54>
  80f3f0:	e0bffe17 	ldw	r2,-8(fp)
  80f3f4:	10c00917 	ldw	r3,36(r2)
  80f3f8:	e0bffe17 	ldw	r2,-8(fp)
  80f3fc:	10800117 	ldw	r2,4(r2)
  80f400:	18bff136 	bltu	r3,r2,80f3c8 <__alt_data_end+0xff80f3c8>
    if (flags & O_NONBLOCK) {
      return -EWOULDBLOCK; 
    }
  }

  return 0;
  80f404:	0005883a 	mov	r2,zero
}
  80f408:	e037883a 	mov	sp,fp
  80f40c:	df000017 	ldw	fp,0(sp)
  80f410:	dec00104 	addi	sp,sp,4
  80f414:	f800283a 	ret

0080f418 <altera_avalon_jtag_uart_ioctl>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_ioctl(altera_avalon_jtag_uart_state* sp, int req,
  void* arg)
{
  80f418:	defffa04 	addi	sp,sp,-24
  80f41c:	df000515 	stw	fp,20(sp)
  80f420:	df000504 	addi	fp,sp,20
  80f424:	e13ffd15 	stw	r4,-12(fp)
  80f428:	e17ffe15 	stw	r5,-8(fp)
  80f42c:	e1bfff15 	stw	r6,-4(fp)
  int rc = -ENOTTY;
  80f430:	00bff9c4 	movi	r2,-25
  80f434:	e0bffb15 	stw	r2,-20(fp)

  switch (req)
  80f438:	e0bffe17 	ldw	r2,-8(fp)
  80f43c:	10da8060 	cmpeqi	r3,r2,27137
  80f440:	1800031e 	bne	r3,zero,80f450 <altera_avalon_jtag_uart_ioctl+0x38>
  80f444:	109a80a0 	cmpeqi	r2,r2,27138
  80f448:	1000181e 	bne	r2,zero,80f4ac <altera_avalon_jtag_uart_ioctl+0x94>
      rc = 0;
    }
    break;

  default:
    break;
  80f44c:	00002906 	br	80f4f4 <altera_avalon_jtag_uart_ioctl+0xdc>

  switch (req)
  {
  case TIOCSTIMEOUT:
    /* Set the time to wait until assuming host is not connected */
    if (sp->timeout != INT_MAX)
  80f450:	e0bffd17 	ldw	r2,-12(fp)
  80f454:	10c00117 	ldw	r3,4(r2)
  80f458:	00a00034 	movhi	r2,32768
  80f45c:	10bfffc4 	addi	r2,r2,-1
  80f460:	18802126 	beq	r3,r2,80f4e8 <altera_avalon_jtag_uart_ioctl+0xd0>
    {
      int timeout = *((int *)arg);
  80f464:	e0bfff17 	ldw	r2,-4(fp)
  80f468:	10800017 	ldw	r2,0(r2)
  80f46c:	e0bffc15 	stw	r2,-16(fp)
      sp->timeout = (timeout >= 2 && timeout < INT_MAX) ? timeout : INT_MAX - 1;
  80f470:	e0bffc17 	ldw	r2,-16(fp)
  80f474:	10800090 	cmplti	r2,r2,2
  80f478:	1000061e 	bne	r2,zero,80f494 <altera_avalon_jtag_uart_ioctl+0x7c>
  80f47c:	e0fffc17 	ldw	r3,-16(fp)
  80f480:	00a00034 	movhi	r2,32768
  80f484:	10bfffc4 	addi	r2,r2,-1
  80f488:	18800226 	beq	r3,r2,80f494 <altera_avalon_jtag_uart_ioctl+0x7c>
  80f48c:	e0bffc17 	ldw	r2,-16(fp)
  80f490:	00000206 	br	80f49c <altera_avalon_jtag_uart_ioctl+0x84>
  80f494:	00a00034 	movhi	r2,32768
  80f498:	10bfff84 	addi	r2,r2,-2
  80f49c:	e0fffd17 	ldw	r3,-12(fp)
  80f4a0:	18800115 	stw	r2,4(r3)
      rc = 0;
  80f4a4:	e03ffb15 	stw	zero,-20(fp)
    }
    break;
  80f4a8:	00000f06 	br	80f4e8 <altera_avalon_jtag_uart_ioctl+0xd0>

  case TIOCGCONNECTED:
    /* Find out whether host is connected */
    if (sp->timeout != INT_MAX)
  80f4ac:	e0bffd17 	ldw	r2,-12(fp)
  80f4b0:	10c00117 	ldw	r3,4(r2)
  80f4b4:	00a00034 	movhi	r2,32768
  80f4b8:	10bfffc4 	addi	r2,r2,-1
  80f4bc:	18800c26 	beq	r3,r2,80f4f0 <altera_avalon_jtag_uart_ioctl+0xd8>
    {
      *((int *)arg) = (sp->host_inactive < sp->timeout) ? 1 : 0;
  80f4c0:	e0bffd17 	ldw	r2,-12(fp)
  80f4c4:	10c00917 	ldw	r3,36(r2)
  80f4c8:	e0bffd17 	ldw	r2,-12(fp)
  80f4cc:	10800117 	ldw	r2,4(r2)
  80f4d0:	1885803a 	cmpltu	r2,r3,r2
  80f4d4:	10c03fcc 	andi	r3,r2,255
  80f4d8:	e0bfff17 	ldw	r2,-4(fp)
  80f4dc:	10c00015 	stw	r3,0(r2)
      rc = 0;
  80f4e0:	e03ffb15 	stw	zero,-20(fp)
    }
    break;
  80f4e4:	00000206 	br	80f4f0 <altera_avalon_jtag_uart_ioctl+0xd8>
    {
      int timeout = *((int *)arg);
      sp->timeout = (timeout >= 2 && timeout < INT_MAX) ? timeout : INT_MAX - 1;
      rc = 0;
    }
    break;
  80f4e8:	0001883a 	nop
  80f4ec:	00000106 	br	80f4f4 <altera_avalon_jtag_uart_ioctl+0xdc>
    if (sp->timeout != INT_MAX)
    {
      *((int *)arg) = (sp->host_inactive < sp->timeout) ? 1 : 0;
      rc = 0;
    }
    break;
  80f4f0:	0001883a 	nop

  default:
    break;
  }

  return rc;
  80f4f4:	e0bffb17 	ldw	r2,-20(fp)
}
  80f4f8:	e037883a 	mov	sp,fp
  80f4fc:	df000017 	ldw	fp,0(sp)
  80f500:	dec00104 	addi	sp,sp,4
  80f504:	f800283a 	ret

0080f508 <altera_avalon_jtag_uart_read>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_read(altera_avalon_jtag_uart_state* sp, 
  char * buffer, int space, int flags)
{
  80f508:	defff304 	addi	sp,sp,-52
  80f50c:	dfc00c15 	stw	ra,48(sp)
  80f510:	df000b15 	stw	fp,44(sp)
  80f514:	df000b04 	addi	fp,sp,44
  80f518:	e13ffc15 	stw	r4,-16(fp)
  80f51c:	e17ffd15 	stw	r5,-12(fp)
  80f520:	e1bffe15 	stw	r6,-8(fp)
  80f524:	e1ffff15 	stw	r7,-4(fp)
  char * ptr = buffer;
  80f528:	e0bffd17 	ldw	r2,-12(fp)
  80f52c:	e0bff515 	stw	r2,-44(fp)
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
  80f530:	00004706 	br	80f650 <altera_avalon_jtag_uart_read+0x148>
    unsigned int in, out;

    /* Read as much data as possible */
    do
    {
      in  = sp->rx_in;
  80f534:	e0bffc17 	ldw	r2,-16(fp)
  80f538:	10800a17 	ldw	r2,40(r2)
  80f53c:	e0bff715 	stw	r2,-36(fp)
      out = sp->rx_out;
  80f540:	e0bffc17 	ldw	r2,-16(fp)
  80f544:	10800b17 	ldw	r2,44(r2)
  80f548:	e0bff815 	stw	r2,-32(fp)

      if (in >= out)
  80f54c:	e0fff717 	ldw	r3,-36(fp)
  80f550:	e0bff817 	ldw	r2,-32(fp)
  80f554:	18800536 	bltu	r3,r2,80f56c <altera_avalon_jtag_uart_read+0x64>
        n = in - out;
  80f558:	e0fff717 	ldw	r3,-36(fp)
  80f55c:	e0bff817 	ldw	r2,-32(fp)
  80f560:	1885c83a 	sub	r2,r3,r2
  80f564:	e0bff615 	stw	r2,-40(fp)
  80f568:	00000406 	br	80f57c <altera_avalon_jtag_uart_read+0x74>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - out;
  80f56c:	00c20004 	movi	r3,2048
  80f570:	e0bff817 	ldw	r2,-32(fp)
  80f574:	1885c83a 	sub	r2,r3,r2
  80f578:	e0bff615 	stw	r2,-40(fp)

      if (n == 0)
  80f57c:	e0bff617 	ldw	r2,-40(fp)
  80f580:	10001e26 	beq	r2,zero,80f5fc <altera_avalon_jtag_uart_read+0xf4>
        break; /* No more data available */

      if (n > space)
  80f584:	e0fffe17 	ldw	r3,-8(fp)
  80f588:	e0bff617 	ldw	r2,-40(fp)
  80f58c:	1880022e 	bgeu	r3,r2,80f598 <altera_avalon_jtag_uart_read+0x90>
        n = space;
  80f590:	e0bffe17 	ldw	r2,-8(fp)
  80f594:	e0bff615 	stw	r2,-40(fp)

      memcpy(ptr, sp->rx_buf + out, n);
  80f598:	e0bffc17 	ldw	r2,-16(fp)
  80f59c:	10c00e04 	addi	r3,r2,56
  80f5a0:	e0bff817 	ldw	r2,-32(fp)
  80f5a4:	1885883a 	add	r2,r3,r2
  80f5a8:	e1bff617 	ldw	r6,-40(fp)
  80f5ac:	100b883a 	mov	r5,r2
  80f5b0:	e13ff517 	ldw	r4,-44(fp)
  80f5b4:	08085c80 	call	8085c8 <memcpy>
      ptr   += n;
  80f5b8:	e0fff517 	ldw	r3,-44(fp)
  80f5bc:	e0bff617 	ldw	r2,-40(fp)
  80f5c0:	1885883a 	add	r2,r3,r2
  80f5c4:	e0bff515 	stw	r2,-44(fp)
      space -= n;
  80f5c8:	e0fffe17 	ldw	r3,-8(fp)
  80f5cc:	e0bff617 	ldw	r2,-40(fp)
  80f5d0:	1885c83a 	sub	r2,r3,r2
  80f5d4:	e0bffe15 	stw	r2,-8(fp)

      sp->rx_out = (out + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
  80f5d8:	e0fff817 	ldw	r3,-32(fp)
  80f5dc:	e0bff617 	ldw	r2,-40(fp)
  80f5e0:	1885883a 	add	r2,r3,r2
  80f5e4:	10c1ffcc 	andi	r3,r2,2047
  80f5e8:	e0bffc17 	ldw	r2,-16(fp)
  80f5ec:	10c00b15 	stw	r3,44(r2)
    }
    while (space > 0);
  80f5f0:	e0bffe17 	ldw	r2,-8(fp)
  80f5f4:	00bfcf16 	blt	zero,r2,80f534 <__alt_data_end+0xff80f534>
  80f5f8:	00000106 	br	80f600 <altera_avalon_jtag_uart_read+0xf8>
        n = in - out;
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - out;

      if (n == 0)
        break; /* No more data available */
  80f5fc:	0001883a 	nop
      sp->rx_out = (out + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
    }
    while (space > 0);

    /* If we read any data then return it */
    if (ptr != buffer)
  80f600:	e0fff517 	ldw	r3,-44(fp)
  80f604:	e0bffd17 	ldw	r2,-12(fp)
  80f608:	1880141e 	bne	r3,r2,80f65c <altera_avalon_jtag_uart_read+0x154>
      break;

    /* If in non-blocking mode then return error */
    if (flags & O_NONBLOCK)
  80f60c:	e0bfff17 	ldw	r2,-4(fp)
  80f610:	1090000c 	andi	r2,r2,16384
  80f614:	1000131e 	bne	r2,zero,80f664 <altera_avalon_jtag_uart_read+0x15c>
      while (in == sp->rx_in && sp->host_inactive < sp->timeout)
        ;
    }
#else
    /* No OS: Always spin */
    while (in == sp->rx_in && sp->host_inactive < sp->timeout)
  80f618:	0001883a 	nop
  80f61c:	e0bffc17 	ldw	r2,-16(fp)
  80f620:	10c00a17 	ldw	r3,40(r2)
  80f624:	e0bff717 	ldw	r2,-36(fp)
  80f628:	1880051e 	bne	r3,r2,80f640 <altera_avalon_jtag_uart_read+0x138>
  80f62c:	e0bffc17 	ldw	r2,-16(fp)
  80f630:	10c00917 	ldw	r3,36(r2)
  80f634:	e0bffc17 	ldw	r2,-16(fp)
  80f638:	10800117 	ldw	r2,4(r2)
  80f63c:	18bff736 	bltu	r3,r2,80f61c <__alt_data_end+0xff80f61c>
      ;
#endif /* __ucosii__ */

    if (in == sp->rx_in)
  80f640:	e0bffc17 	ldw	r2,-16(fp)
  80f644:	10c00a17 	ldw	r3,40(r2)
  80f648:	e0bff717 	ldw	r2,-36(fp)
  80f64c:	18800726 	beq	r3,r2,80f66c <altera_avalon_jtag_uart_read+0x164>
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
  80f650:	e0bffe17 	ldw	r2,-8(fp)
  80f654:	00bfb716 	blt	zero,r2,80f534 <__alt_data_end+0xff80f534>
  80f658:	00000506 	br	80f670 <altera_avalon_jtag_uart_read+0x168>
    }
    while (space > 0);

    /* If we read any data then return it */
    if (ptr != buffer)
      break;
  80f65c:	0001883a 	nop
  80f660:	00000306 	br	80f670 <altera_avalon_jtag_uart_read+0x168>

    /* If in non-blocking mode then return error */
    if (flags & O_NONBLOCK)
      break;
  80f664:	0001883a 	nop
  80f668:	00000106 	br	80f670 <altera_avalon_jtag_uart_read+0x168>
    while (in == sp->rx_in && sp->host_inactive < sp->timeout)
      ;
#endif /* __ucosii__ */

    if (in == sp->rx_in)
      break;
  80f66c:	0001883a 	nop
   * semaphore so that other threads can access the buffer.
   */

  ALT_SEM_POST (sp->read_lock);

  if (ptr != buffer)
  80f670:	e0fff517 	ldw	r3,-44(fp)
  80f674:	e0bffd17 	ldw	r2,-12(fp)
  80f678:	18801826 	beq	r3,r2,80f6dc <altera_avalon_jtag_uart_read+0x1d4>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  80f67c:	0005303a 	rdctl	r2,status
  80f680:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  80f684:	e0fffb17 	ldw	r3,-20(fp)
  80f688:	00bfff84 	movi	r2,-2
  80f68c:	1884703a 	and	r2,r3,r2
  80f690:	1001703a 	wrctl	status,r2
  
  return context;
  80f694:	e0bffb17 	ldw	r2,-20(fp)
  {
    /* If we read any data then there is space in the buffer so enable interrupts */
    context = alt_irq_disable_all();
  80f698:	e0bffa15 	stw	r2,-24(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
  80f69c:	e0bffc17 	ldw	r2,-16(fp)
  80f6a0:	10800817 	ldw	r2,32(r2)
  80f6a4:	10c00054 	ori	r3,r2,1
  80f6a8:	e0bffc17 	ldw	r2,-16(fp)
  80f6ac:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
  80f6b0:	e0bffc17 	ldw	r2,-16(fp)
  80f6b4:	10800017 	ldw	r2,0(r2)
  80f6b8:	10800104 	addi	r2,r2,4
  80f6bc:	1007883a 	mov	r3,r2
  80f6c0:	e0bffc17 	ldw	r2,-16(fp)
  80f6c4:	10800817 	ldw	r2,32(r2)
  80f6c8:	18800035 	stwio	r2,0(r3)
  80f6cc:	e0bffa17 	ldw	r2,-24(fp)
  80f6d0:	e0bff915 	stw	r2,-28(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  80f6d4:	e0bff917 	ldw	r2,-28(fp)
  80f6d8:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
  }

  if (ptr != buffer)
  80f6dc:	e0fff517 	ldw	r3,-44(fp)
  80f6e0:	e0bffd17 	ldw	r2,-12(fp)
  80f6e4:	18800426 	beq	r3,r2,80f6f8 <altera_avalon_jtag_uart_read+0x1f0>
    return ptr - buffer;
  80f6e8:	e0fff517 	ldw	r3,-44(fp)
  80f6ec:	e0bffd17 	ldw	r2,-12(fp)
  80f6f0:	1885c83a 	sub	r2,r3,r2
  80f6f4:	00000606 	br	80f710 <altera_avalon_jtag_uart_read+0x208>
  else if (flags & O_NONBLOCK)
  80f6f8:	e0bfff17 	ldw	r2,-4(fp)
  80f6fc:	1090000c 	andi	r2,r2,16384
  80f700:	10000226 	beq	r2,zero,80f70c <altera_avalon_jtag_uart_read+0x204>
    return -EWOULDBLOCK;
  80f704:	00bffd44 	movi	r2,-11
  80f708:	00000106 	br	80f710 <altera_avalon_jtag_uart_read+0x208>
  else
    return -EIO;
  80f70c:	00bffec4 	movi	r2,-5
}
  80f710:	e037883a 	mov	sp,fp
  80f714:	dfc00117 	ldw	ra,4(sp)
  80f718:	df000017 	ldw	fp,0(sp)
  80f71c:	dec00204 	addi	sp,sp,8
  80f720:	f800283a 	ret

0080f724 <altera_avalon_jtag_uart_write>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_write(altera_avalon_jtag_uart_state* sp, 
  const char * ptr, int count, int flags)
{
  80f724:	defff304 	addi	sp,sp,-52
  80f728:	dfc00c15 	stw	ra,48(sp)
  80f72c:	df000b15 	stw	fp,44(sp)
  80f730:	df000b04 	addi	fp,sp,44
  80f734:	e13ffc15 	stw	r4,-16(fp)
  80f738:	e17ffd15 	stw	r5,-12(fp)
  80f73c:	e1bffe15 	stw	r6,-8(fp)
  80f740:	e1ffff15 	stw	r7,-4(fp)
  /* Remove warning at optimisation level 03 by seting out to 0 */
  unsigned int in, out=0;
  80f744:	e03ff515 	stw	zero,-44(fp)
  unsigned int n;
  alt_irq_context context;

  const char * start = ptr;
  80f748:	e0bffd17 	ldw	r2,-12(fp)
  80f74c:	e0bff715 	stw	r2,-36(fp)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
  80f750:	00003706 	br	80f830 <altera_avalon_jtag_uart_write+0x10c>
    {
      /* We need a stable value of the out pointer to calculate the space available */
      in  = sp->tx_in;
  80f754:	e0bffc17 	ldw	r2,-16(fp)
  80f758:	10800c17 	ldw	r2,48(r2)
  80f75c:	e0bff915 	stw	r2,-28(fp)
      out = sp->tx_out;
  80f760:	e0bffc17 	ldw	r2,-16(fp)
  80f764:	10800d17 	ldw	r2,52(r2)
  80f768:	e0bff515 	stw	r2,-44(fp)

      if (in < out)
  80f76c:	e0fff917 	ldw	r3,-28(fp)
  80f770:	e0bff517 	ldw	r2,-44(fp)
  80f774:	1880062e 	bgeu	r3,r2,80f790 <altera_avalon_jtag_uart_write+0x6c>
        n = out - 1 - in;
  80f778:	e0fff517 	ldw	r3,-44(fp)
  80f77c:	e0bff917 	ldw	r2,-28(fp)
  80f780:	1885c83a 	sub	r2,r3,r2
  80f784:	10bfffc4 	addi	r2,r2,-1
  80f788:	e0bff615 	stw	r2,-40(fp)
  80f78c:	00000b06 	br	80f7bc <altera_avalon_jtag_uart_write+0x98>
      else if (out > 0)
  80f790:	e0bff517 	ldw	r2,-44(fp)
  80f794:	10000526 	beq	r2,zero,80f7ac <altera_avalon_jtag_uart_write+0x88>
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - in;
  80f798:	00c20004 	movi	r3,2048
  80f79c:	e0bff917 	ldw	r2,-28(fp)
  80f7a0:	1885c83a 	sub	r2,r3,r2
  80f7a4:	e0bff615 	stw	r2,-40(fp)
  80f7a8:	00000406 	br	80f7bc <altera_avalon_jtag_uart_write+0x98>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - 1 - in;
  80f7ac:	00c1ffc4 	movi	r3,2047
  80f7b0:	e0bff917 	ldw	r2,-28(fp)
  80f7b4:	1885c83a 	sub	r2,r3,r2
  80f7b8:	e0bff615 	stw	r2,-40(fp)

      if (n == 0)
  80f7bc:	e0bff617 	ldw	r2,-40(fp)
  80f7c0:	10001e26 	beq	r2,zero,80f83c <altera_avalon_jtag_uart_write+0x118>
        break;

      if (n > count)
  80f7c4:	e0fffe17 	ldw	r3,-8(fp)
  80f7c8:	e0bff617 	ldw	r2,-40(fp)
  80f7cc:	1880022e 	bgeu	r3,r2,80f7d8 <altera_avalon_jtag_uart_write+0xb4>
        n = count;
  80f7d0:	e0bffe17 	ldw	r2,-8(fp)
  80f7d4:	e0bff615 	stw	r2,-40(fp)

      memcpy(sp->tx_buf + in, ptr, n);
  80f7d8:	e0bffc17 	ldw	r2,-16(fp)
  80f7dc:	10c20e04 	addi	r3,r2,2104
  80f7e0:	e0bff917 	ldw	r2,-28(fp)
  80f7e4:	1885883a 	add	r2,r3,r2
  80f7e8:	e1bff617 	ldw	r6,-40(fp)
  80f7ec:	e17ffd17 	ldw	r5,-12(fp)
  80f7f0:	1009883a 	mov	r4,r2
  80f7f4:	08085c80 	call	8085c8 <memcpy>
      ptr   += n;
  80f7f8:	e0fffd17 	ldw	r3,-12(fp)
  80f7fc:	e0bff617 	ldw	r2,-40(fp)
  80f800:	1885883a 	add	r2,r3,r2
  80f804:	e0bffd15 	stw	r2,-12(fp)
      count -= n;
  80f808:	e0fffe17 	ldw	r3,-8(fp)
  80f80c:	e0bff617 	ldw	r2,-40(fp)
  80f810:	1885c83a 	sub	r2,r3,r2
  80f814:	e0bffe15 	stw	r2,-8(fp)

      sp->tx_in = (in + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
  80f818:	e0fff917 	ldw	r3,-28(fp)
  80f81c:	e0bff617 	ldw	r2,-40(fp)
  80f820:	1885883a 	add	r2,r3,r2
  80f824:	10c1ffcc 	andi	r3,r2,2047
  80f828:	e0bffc17 	ldw	r2,-16(fp)
  80f82c:	10c00c15 	stw	r3,48(r2)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
  80f830:	e0bffe17 	ldw	r2,-8(fp)
  80f834:	00bfc716 	blt	zero,r2,80f754 <__alt_data_end+0xff80f754>
  80f838:	00000106 	br	80f840 <altera_avalon_jtag_uart_write+0x11c>
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - in;
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - 1 - in;

      if (n == 0)
        break;
  80f83c:	0001883a 	nop
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  80f840:	0005303a 	rdctl	r2,status
  80f844:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  80f848:	e0fffb17 	ldw	r3,-20(fp)
  80f84c:	00bfff84 	movi	r2,-2
  80f850:	1884703a 	and	r2,r3,r2
  80f854:	1001703a 	wrctl	status,r2
  
  return context;
  80f858:	e0bffb17 	ldw	r2,-20(fp)
     * to enable interrupts if there is no space left in the FIFO
     *
     * For now kick the interrupt routine every time to make it transmit 
     * the data 
     */
    context = alt_irq_disable_all();
  80f85c:	e0bffa15 	stw	r2,-24(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
  80f860:	e0bffc17 	ldw	r2,-16(fp)
  80f864:	10800817 	ldw	r2,32(r2)
  80f868:	10c00094 	ori	r3,r2,2
  80f86c:	e0bffc17 	ldw	r2,-16(fp)
  80f870:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
  80f874:	e0bffc17 	ldw	r2,-16(fp)
  80f878:	10800017 	ldw	r2,0(r2)
  80f87c:	10800104 	addi	r2,r2,4
  80f880:	1007883a 	mov	r3,r2
  80f884:	e0bffc17 	ldw	r2,-16(fp)
  80f888:	10800817 	ldw	r2,32(r2)
  80f88c:	18800035 	stwio	r2,0(r3)
  80f890:	e0bffa17 	ldw	r2,-24(fp)
  80f894:	e0bff815 	stw	r2,-32(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  80f898:	e0bff817 	ldw	r2,-32(fp)
  80f89c:	1001703a 	wrctl	status,r2
    /* 
     * If there is any data left then either return now or block until 
     * some has been sent 
     */
    /* consider: test whether there is anything there while doing this and delay for at most 2s. */
    if (count > 0)
  80f8a0:	e0bffe17 	ldw	r2,-8(fp)
  80f8a4:	0080100e 	bge	zero,r2,80f8e8 <altera_avalon_jtag_uart_write+0x1c4>
    {
      if (flags & O_NONBLOCK)
  80f8a8:	e0bfff17 	ldw	r2,-4(fp)
  80f8ac:	1090000c 	andi	r2,r2,16384
  80f8b0:	1000101e 	bne	r2,zero,80f8f4 <altera_avalon_jtag_uart_write+0x1d0>
      /*
       * No OS present: Always wait for data to be removed from buffer.  Once
       * the interrupt routine has removed some data then we will be able to
       * insert some more.
       */
      while (out == sp->tx_out && sp->host_inactive < sp->timeout)
  80f8b4:	0001883a 	nop
  80f8b8:	e0bffc17 	ldw	r2,-16(fp)
  80f8bc:	10c00d17 	ldw	r3,52(r2)
  80f8c0:	e0bff517 	ldw	r2,-44(fp)
  80f8c4:	1880051e 	bne	r3,r2,80f8dc <altera_avalon_jtag_uart_write+0x1b8>
  80f8c8:	e0bffc17 	ldw	r2,-16(fp)
  80f8cc:	10c00917 	ldw	r3,36(r2)
  80f8d0:	e0bffc17 	ldw	r2,-16(fp)
  80f8d4:	10800117 	ldw	r2,4(r2)
  80f8d8:	18bff736 	bltu	r3,r2,80f8b8 <__alt_data_end+0xff80f8b8>
        ;
#endif /* __ucosii__ */

      if  (sp->host_inactive)
  80f8dc:	e0bffc17 	ldw	r2,-16(fp)
  80f8e0:	10800917 	ldw	r2,36(r2)
  80f8e4:	1000051e 	bne	r2,zero,80f8fc <altera_avalon_jtag_uart_write+0x1d8>
         break;
    }
  }
  while (count > 0);
  80f8e8:	e0bffe17 	ldw	r2,-8(fp)
  80f8ec:	00bfd016 	blt	zero,r2,80f830 <__alt_data_end+0xff80f830>
  80f8f0:	00000306 	br	80f900 <altera_avalon_jtag_uart_write+0x1dc>
     */
    /* consider: test whether there is anything there while doing this and delay for at most 2s. */
    if (count > 0)
    {
      if (flags & O_NONBLOCK)
        break;
  80f8f4:	0001883a 	nop
  80f8f8:	00000106 	br	80f900 <altera_avalon_jtag_uart_write+0x1dc>
      while (out == sp->tx_out && sp->host_inactive < sp->timeout)
        ;
#endif /* __ucosii__ */

      if  (sp->host_inactive)
         break;
  80f8fc:	0001883a 	nop
   * Now that access to the circular buffer is complete, release the write
   * semaphore so that other threads can access the buffer.
   */
  ALT_SEM_POST (sp->write_lock);

  if (ptr != start)
  80f900:	e0fffd17 	ldw	r3,-12(fp)
  80f904:	e0bff717 	ldw	r2,-36(fp)
  80f908:	18800426 	beq	r3,r2,80f91c <altera_avalon_jtag_uart_write+0x1f8>
    return ptr - start;
  80f90c:	e0fffd17 	ldw	r3,-12(fp)
  80f910:	e0bff717 	ldw	r2,-36(fp)
  80f914:	1885c83a 	sub	r2,r3,r2
  80f918:	00000606 	br	80f934 <altera_avalon_jtag_uart_write+0x210>
  else if (flags & O_NONBLOCK)
  80f91c:	e0bfff17 	ldw	r2,-4(fp)
  80f920:	1090000c 	andi	r2,r2,16384
  80f924:	10000226 	beq	r2,zero,80f930 <altera_avalon_jtag_uart_write+0x20c>
    return -EWOULDBLOCK;
  80f928:	00bffd44 	movi	r2,-11
  80f92c:	00000106 	br	80f934 <altera_avalon_jtag_uart_write+0x210>
    sp->tx_out = sp->tx_in = 0;
    return ptr - start + count;
  }
#endif
  else
    return -EIO; /* Host not connected */
  80f930:	00bffec4 	movi	r2,-5
}
  80f934:	e037883a 	mov	sp,fp
  80f938:	dfc00117 	ldw	ra,4(sp)
  80f93c:	df000017 	ldw	fp,0(sp)
  80f940:	dec00204 	addi	sp,sp,8
  80f944:	f800283a 	ret

0080f948 <alt_avalon_timer_sc_irq>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void alt_avalon_timer_sc_irq (void* base)
#else
static void alt_avalon_timer_sc_irq (void* base, alt_u32 id)
#endif
{
  80f948:	defffa04 	addi	sp,sp,-24
  80f94c:	dfc00515 	stw	ra,20(sp)
  80f950:	df000415 	stw	fp,16(sp)
  80f954:	df000404 	addi	fp,sp,16
  80f958:	e13fff15 	stw	r4,-4(fp)
  alt_irq_context cpu_sr;
  
  /* clear the interrupt */
  IOWR_ALTERA_AVALON_TIMER_STATUS (base, 0);
  80f95c:	0007883a 	mov	r3,zero
  80f960:	e0bfff17 	ldw	r2,-4(fp)
  80f964:	10c00035 	stwio	r3,0(r2)
  /* 
   * Dummy read to ensure IRQ is negated before the ISR returns.
   * The control register is read because reading the status
   * register has side-effects per the register map documentation.
   */
  IORD_ALTERA_AVALON_TIMER_CONTROL (base);
  80f968:	e0bfff17 	ldw	r2,-4(fp)
  80f96c:	10800104 	addi	r2,r2,4
  80f970:	10800037 	ldwio	r2,0(r2)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  80f974:	0005303a 	rdctl	r2,status
  80f978:	e0bffd15 	stw	r2,-12(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  80f97c:	e0fffd17 	ldw	r3,-12(fp)
  80f980:	00bfff84 	movi	r2,-2
  80f984:	1884703a 	and	r2,r3,r2
  80f988:	1001703a 	wrctl	status,r2
  
  return context;
  80f98c:	e0bffd17 	ldw	r2,-12(fp)

  /* 
   * Notify the system of a clock tick. disable interrupts 
   * during this time to safely support ISR preemption
   */
  cpu_sr = alt_irq_disable_all();
  80f990:	e0bffc15 	stw	r2,-16(fp)
  alt_tick ();
  80f994:	08104400 	call	810440 <alt_tick>
  80f998:	e0bffc17 	ldw	r2,-16(fp)
  80f99c:	e0bffe15 	stw	r2,-8(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  80f9a0:	e0bffe17 	ldw	r2,-8(fp)
  80f9a4:	1001703a 	wrctl	status,r2
  alt_irq_enable_all(cpu_sr);
}
  80f9a8:	0001883a 	nop
  80f9ac:	e037883a 	mov	sp,fp
  80f9b0:	dfc00117 	ldw	ra,4(sp)
  80f9b4:	df000017 	ldw	fp,0(sp)
  80f9b8:	dec00204 	addi	sp,sp,8
  80f9bc:	f800283a 	ret

0080f9c0 <alt_avalon_timer_sc_init>:
 * auto-generated alt_sys_init() function.
 */

void alt_avalon_timer_sc_init (void* base, alt_u32 irq_controller_id, 
                                alt_u32 irq, alt_u32 freq)
{
  80f9c0:	defff804 	addi	sp,sp,-32
  80f9c4:	dfc00715 	stw	ra,28(sp)
  80f9c8:	df000615 	stw	fp,24(sp)
  80f9cc:	df000604 	addi	fp,sp,24
  80f9d0:	e13ffc15 	stw	r4,-16(fp)
  80f9d4:	e17ffd15 	stw	r5,-12(fp)
  80f9d8:	e1bffe15 	stw	r6,-8(fp)
  80f9dc:	e1ffff15 	stw	r7,-4(fp)
  80f9e0:	e0bfff17 	ldw	r2,-4(fp)
  80f9e4:	e0bffb15 	stw	r2,-20(fp)
 * in order to initialise the value of the clock frequency.
 */

static ALT_INLINE int ALT_ALWAYS_INLINE alt_sysclk_init (alt_u32 nticks)
{
  if (! _alt_tick_rate)
  80f9e8:	d0b6c817 	ldw	r2,-9440(gp)
  80f9ec:	1000021e 	bne	r2,zero,80f9f8 <alt_avalon_timer_sc_init+0x38>
  {
    _alt_tick_rate = nticks;
  80f9f0:	e0bffb17 	ldw	r2,-20(fp)
  80f9f4:	d0b6c815 	stw	r2,-9440(gp)
  
  alt_sysclk_init (freq);
  
  /* set to free running mode */
  
  IOWR_ALTERA_AVALON_TIMER_CONTROL (base, 
  80f9f8:	e0bffc17 	ldw	r2,-16(fp)
  80f9fc:	10800104 	addi	r2,r2,4
  80fa00:	00c001c4 	movi	r3,7
  80fa04:	10c00035 	stwio	r3,0(r2)
            ALTERA_AVALON_TIMER_CONTROL_CONT_MSK |
            ALTERA_AVALON_TIMER_CONTROL_START_MSK);

  /* register the interrupt handler, and enable the interrupt */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
  alt_ic_isr_register(irq_controller_id, irq, alt_avalon_timer_sc_irq, 
  80fa08:	d8000015 	stw	zero,0(sp)
  80fa0c:	e1fffc17 	ldw	r7,-16(fp)
  80fa10:	01802074 	movhi	r6,129
  80fa14:	31be5204 	addi	r6,r6,-1720
  80fa18:	e17ffe17 	ldw	r5,-8(fp)
  80fa1c:	e13ffd17 	ldw	r4,-12(fp)
  80fa20:	080fd700 	call	80fd70 <alt_ic_isr_register>
                      base, NULL);
#else
  alt_irq_register (irq, base, alt_avalon_timer_sc_irq);
#endif  
}
  80fa24:	0001883a 	nop
  80fa28:	e037883a 	mov	sp,fp
  80fa2c:	dfc00117 	ldw	ra,4(sp)
  80fa30:	df000017 	ldw	fp,0(sp)
  80fa34:	dec00204 	addi	sp,sp,8
  80fa38:	f800283a 	ret

0080fa3c <alt_alarm_start>:
 */ 

int alt_alarm_start (alt_alarm* alarm, alt_u32 nticks,
                     alt_u32 (*callback) (void* context),
                     void* context)
{
  80fa3c:	defff504 	addi	sp,sp,-44
  80fa40:	df000a15 	stw	fp,40(sp)
  80fa44:	df000a04 	addi	fp,sp,40
  80fa48:	e13ffc15 	stw	r4,-16(fp)
  80fa4c:	e17ffd15 	stw	r5,-12(fp)
  80fa50:	e1bffe15 	stw	r6,-8(fp)
  80fa54:	e1ffff15 	stw	r7,-4(fp)
  alt_irq_context irq_context;
  alt_u32 current_nticks = 0;
  80fa58:	e03ff615 	stw	zero,-40(fp)
 * Obtain the system clock rate in ticks/s. 
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_ticks_per_second (void)
{
  return _alt_tick_rate;
  80fa5c:	d0b6c817 	ldw	r2,-9440(gp)
  
  if (alt_ticks_per_second ())
  80fa60:	10003c26 	beq	r2,zero,80fb54 <alt_alarm_start+0x118>
  {
    if (alarm)
  80fa64:	e0bffc17 	ldw	r2,-16(fp)
  80fa68:	10003826 	beq	r2,zero,80fb4c <alt_alarm_start+0x110>
    {
      alarm->callback = callback;
  80fa6c:	e0bffc17 	ldw	r2,-16(fp)
  80fa70:	e0fffe17 	ldw	r3,-8(fp)
  80fa74:	10c00315 	stw	r3,12(r2)
      alarm->context  = context;
  80fa78:	e0bffc17 	ldw	r2,-16(fp)
  80fa7c:	e0ffff17 	ldw	r3,-4(fp)
  80fa80:	10c00515 	stw	r3,20(r2)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  80fa84:	0005303a 	rdctl	r2,status
  80fa88:	e0bff915 	stw	r2,-28(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  80fa8c:	e0fff917 	ldw	r3,-28(fp)
  80fa90:	00bfff84 	movi	r2,-2
  80fa94:	1884703a 	and	r2,r3,r2
  80fa98:	1001703a 	wrctl	status,r2
  
  return context;
  80fa9c:	e0bff917 	ldw	r2,-28(fp)
 
      irq_context = alt_irq_disable_all ();
  80faa0:	e0bff815 	stw	r2,-32(fp)
 * alt_nticks() returns the elapsed number of system clock ticks since reset.
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_nticks (void)
{
  return _alt_nticks;
  80faa4:	d0b6c917 	ldw	r2,-9436(gp)
      
      current_nticks = alt_nticks();
  80faa8:	e0bff615 	stw	r2,-40(fp)
      
      alarm->time = nticks + current_nticks + 1; 
  80faac:	e0fffd17 	ldw	r3,-12(fp)
  80fab0:	e0bff617 	ldw	r2,-40(fp)
  80fab4:	1885883a 	add	r2,r3,r2
  80fab8:	10c00044 	addi	r3,r2,1
  80fabc:	e0bffc17 	ldw	r2,-16(fp)
  80fac0:	10c00215 	stw	r3,8(r2)
      /* 
       * If the desired alarm time causes a roll-over, set the rollover
       * flag. This will prevent the subsequent tick event from causing
       * an alarm too early.
       */
      if(alarm->time < current_nticks)
  80fac4:	e0bffc17 	ldw	r2,-16(fp)
  80fac8:	10c00217 	ldw	r3,8(r2)
  80facc:	e0bff617 	ldw	r2,-40(fp)
  80fad0:	1880042e 	bgeu	r3,r2,80fae4 <alt_alarm_start+0xa8>
      {
        alarm->rollover = 1;
  80fad4:	e0bffc17 	ldw	r2,-16(fp)
  80fad8:	00c00044 	movi	r3,1
  80fadc:	10c00405 	stb	r3,16(r2)
  80fae0:	00000206 	br	80faec <alt_alarm_start+0xb0>
      }
      else
      {
        alarm->rollover = 0;
  80fae4:	e0bffc17 	ldw	r2,-16(fp)
  80fae8:	10000405 	stb	zero,16(r2)
      }
    
      alt_llist_insert (&alt_alarm_list, &alarm->llist);
  80faec:	e0bffc17 	ldw	r2,-16(fp)
  80faf0:	d0e00e04 	addi	r3,gp,-32712
  80faf4:	e0fffa15 	stw	r3,-24(fp)
  80faf8:	e0bffb15 	stw	r2,-20(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
  80fafc:	e0bffb17 	ldw	r2,-20(fp)
  80fb00:	e0fffa17 	ldw	r3,-24(fp)
  80fb04:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
  80fb08:	e0bffa17 	ldw	r2,-24(fp)
  80fb0c:	10c00017 	ldw	r3,0(r2)
  80fb10:	e0bffb17 	ldw	r2,-20(fp)
  80fb14:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
  80fb18:	e0bffa17 	ldw	r2,-24(fp)
  80fb1c:	10800017 	ldw	r2,0(r2)
  80fb20:	e0fffb17 	ldw	r3,-20(fp)
  80fb24:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
  80fb28:	e0bffa17 	ldw	r2,-24(fp)
  80fb2c:	e0fffb17 	ldw	r3,-20(fp)
  80fb30:	10c00015 	stw	r3,0(r2)
  80fb34:	e0bff817 	ldw	r2,-32(fp)
  80fb38:	e0bff715 	stw	r2,-36(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  80fb3c:	e0bff717 	ldw	r2,-36(fp)
  80fb40:	1001703a 	wrctl	status,r2
      alt_irq_enable_all (irq_context);

      return 0;
  80fb44:	0005883a 	mov	r2,zero
  80fb48:	00000306 	br	80fb58 <alt_alarm_start+0x11c>
    }
    else
    {
      return -EINVAL;
  80fb4c:	00bffa84 	movi	r2,-22
  80fb50:	00000106 	br	80fb58 <alt_alarm_start+0x11c>
    }
  }
  else
  {
    return -ENOTSUP;
  80fb54:	00bfde84 	movi	r2,-134
  }
}
  80fb58:	e037883a 	mov	sp,fp
  80fb5c:	df000017 	ldw	fp,0(sp)
  80fb60:	dec00104 	addi	sp,sp,4
  80fb64:	f800283a 	ret

0080fb68 <alt_dcache_flush_all>:
/*
 * alt_dcache_flush_all() is called to flush the entire data cache.
 */

void alt_dcache_flush_all (void)
{
  80fb68:	defffe04 	addi	sp,sp,-8
  80fb6c:	df000115 	stw	fp,4(sp)
  80fb70:	df000104 	addi	fp,sp,4
#if NIOS2_DCACHE_SIZE > 0
  char* i;
  
  for (i = (char*) 0; i < (char*) NIOS2_DCACHE_SIZE; i+= NIOS2_DCACHE_LINE_SIZE)
  80fb74:	e03fff15 	stw	zero,-4(fp)
  80fb78:	00000506 	br	80fb90 <alt_dcache_flush_all+0x28>
  { 
    __asm__ volatile ("flushd (%0)" :: "r" (i));
  80fb7c:	e0bfff17 	ldw	r2,-4(fp)
  80fb80:	1000003b 	flushd	0(r2)
void alt_dcache_flush_all (void)
{
#if NIOS2_DCACHE_SIZE > 0
  char* i;
  
  for (i = (char*) 0; i < (char*) NIOS2_DCACHE_SIZE; i+= NIOS2_DCACHE_LINE_SIZE)
  80fb84:	e0bfff17 	ldw	r2,-4(fp)
  80fb88:	10800804 	addi	r2,r2,32
  80fb8c:	e0bfff15 	stw	r2,-4(fp)
  80fb90:	e0bfff17 	ldw	r2,-4(fp)
  80fb94:	10820030 	cmpltui	r2,r2,2048
  80fb98:	103ff81e 	bne	r2,zero,80fb7c <__alt_data_end+0xff80fb7c>
  { 
    __asm__ volatile ("flushd (%0)" :: "r" (i));
  }
#endif /* NIOS2_DCACHE_SIZE > 0 */
}
  80fb9c:	0001883a 	nop
  80fba0:	e037883a 	mov	sp,fp
  80fba4:	df000017 	ldw	fp,0(sp)
  80fba8:	dec00104 	addi	sp,sp,4
  80fbac:	f800283a 	ret

0080fbb0 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
  80fbb0:	defffe04 	addi	sp,sp,-8
  80fbb4:	dfc00115 	stw	ra,4(sp)
  80fbb8:	df000015 	stw	fp,0(sp)
  80fbbc:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
  80fbc0:	d0a00b17 	ldw	r2,-32724(gp)
  80fbc4:	10000326 	beq	r2,zero,80fbd4 <alt_get_errno+0x24>
  80fbc8:	d0a00b17 	ldw	r2,-32724(gp)
  80fbcc:	103ee83a 	callr	r2
  80fbd0:	00000106 	br	80fbd8 <alt_get_errno+0x28>
  80fbd4:	d0b6c304 	addi	r2,gp,-9460
}
  80fbd8:	e037883a 	mov	sp,fp
  80fbdc:	dfc00117 	ldw	ra,4(sp)
  80fbe0:	df000017 	ldw	fp,0(sp)
  80fbe4:	dec00204 	addi	sp,sp,8
  80fbe8:	f800283a 	ret

0080fbec <alt_dev_llist_insert>:
/*
 *
 */

int alt_dev_llist_insert (alt_dev_llist* dev, alt_llist* list)
{
  80fbec:	defffa04 	addi	sp,sp,-24
  80fbf0:	dfc00515 	stw	ra,20(sp)
  80fbf4:	df000415 	stw	fp,16(sp)
  80fbf8:	df000404 	addi	fp,sp,16
  80fbfc:	e13ffe15 	stw	r4,-8(fp)
  80fc00:	e17fff15 	stw	r5,-4(fp)
  /*
   * check that the device exists, and that it has a valid name.
   */

  if (!dev || !dev->name)
  80fc04:	e0bffe17 	ldw	r2,-8(fp)
  80fc08:	10000326 	beq	r2,zero,80fc18 <alt_dev_llist_insert+0x2c>
  80fc0c:	e0bffe17 	ldw	r2,-8(fp)
  80fc10:	10800217 	ldw	r2,8(r2)
  80fc14:	1000061e 	bne	r2,zero,80fc30 <alt_dev_llist_insert+0x44>
  {
    ALT_ERRNO = EINVAL;
  80fc18:	080fbb00 	call	80fbb0 <alt_get_errno>
  80fc1c:	1007883a 	mov	r3,r2
  80fc20:	00800584 	movi	r2,22
  80fc24:	18800015 	stw	r2,0(r3)
    return -EINVAL;
  80fc28:	00bffa84 	movi	r2,-22
  80fc2c:	00001306 	br	80fc7c <alt_dev_llist_insert+0x90>
  
  /*
   * register the device.
   */
  
  alt_llist_insert(list, &dev->llist);
  80fc30:	e0bffe17 	ldw	r2,-8(fp)
  80fc34:	e0ffff17 	ldw	r3,-4(fp)
  80fc38:	e0fffc15 	stw	r3,-16(fp)
  80fc3c:	e0bffd15 	stw	r2,-12(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
  80fc40:	e0bffd17 	ldw	r2,-12(fp)
  80fc44:	e0fffc17 	ldw	r3,-16(fp)
  80fc48:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
  80fc4c:	e0bffc17 	ldw	r2,-16(fp)
  80fc50:	10c00017 	ldw	r3,0(r2)
  80fc54:	e0bffd17 	ldw	r2,-12(fp)
  80fc58:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
  80fc5c:	e0bffc17 	ldw	r2,-16(fp)
  80fc60:	10800017 	ldw	r2,0(r2)
  80fc64:	e0fffd17 	ldw	r3,-12(fp)
  80fc68:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
  80fc6c:	e0bffc17 	ldw	r2,-16(fp)
  80fc70:	e0fffd17 	ldw	r3,-12(fp)
  80fc74:	10c00015 	stw	r3,0(r2)

  return 0;  
  80fc78:	0005883a 	mov	r2,zero
}
  80fc7c:	e037883a 	mov	sp,fp
  80fc80:	dfc00117 	ldw	ra,4(sp)
  80fc84:	df000017 	ldw	fp,0(sp)
  80fc88:	dec00204 	addi	sp,sp,8
  80fc8c:	f800283a 	ret

0080fc90 <_do_ctors>:
/*
 * Run the C++ static constructors.
 */

void _do_ctors(void)
{
  80fc90:	defffd04 	addi	sp,sp,-12
  80fc94:	dfc00215 	stw	ra,8(sp)
  80fc98:	df000115 	stw	fp,4(sp)
  80fc9c:	df000104 	addi	fp,sp,4
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
  80fca0:	00802074 	movhi	r2,129
  80fca4:	10832204 	addi	r2,r2,3208
  80fca8:	e0bfff15 	stw	r2,-4(fp)
  80fcac:	00000606 	br	80fcc8 <_do_ctors+0x38>
        (*ctor) (); 
  80fcb0:	e0bfff17 	ldw	r2,-4(fp)
  80fcb4:	10800017 	ldw	r2,0(r2)
  80fcb8:	103ee83a 	callr	r2

void _do_ctors(void)
{
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
  80fcbc:	e0bfff17 	ldw	r2,-4(fp)
  80fcc0:	10bfff04 	addi	r2,r2,-4
  80fcc4:	e0bfff15 	stw	r2,-4(fp)
  80fcc8:	e0ffff17 	ldw	r3,-4(fp)
  80fccc:	00802074 	movhi	r2,129
  80fcd0:	10832304 	addi	r2,r2,3212
  80fcd4:	18bff62e 	bgeu	r3,r2,80fcb0 <__alt_data_end+0xff80fcb0>
        (*ctor) (); 
}
  80fcd8:	0001883a 	nop
  80fcdc:	e037883a 	mov	sp,fp
  80fce0:	dfc00117 	ldw	ra,4(sp)
  80fce4:	df000017 	ldw	fp,0(sp)
  80fce8:	dec00204 	addi	sp,sp,8
  80fcec:	f800283a 	ret

0080fcf0 <_do_dtors>:
/*
 * Run the C++ static destructors.
 */

void _do_dtors(void)
{
  80fcf0:	defffd04 	addi	sp,sp,-12
  80fcf4:	dfc00215 	stw	ra,8(sp)
  80fcf8:	df000115 	stw	fp,4(sp)
  80fcfc:	df000104 	addi	fp,sp,4
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
  80fd00:	00802074 	movhi	r2,129
  80fd04:	10832204 	addi	r2,r2,3208
  80fd08:	e0bfff15 	stw	r2,-4(fp)
  80fd0c:	00000606 	br	80fd28 <_do_dtors+0x38>
        (*dtor) (); 
  80fd10:	e0bfff17 	ldw	r2,-4(fp)
  80fd14:	10800017 	ldw	r2,0(r2)
  80fd18:	103ee83a 	callr	r2

void _do_dtors(void)
{
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
  80fd1c:	e0bfff17 	ldw	r2,-4(fp)
  80fd20:	10bfff04 	addi	r2,r2,-4
  80fd24:	e0bfff15 	stw	r2,-4(fp)
  80fd28:	e0ffff17 	ldw	r3,-4(fp)
  80fd2c:	00802074 	movhi	r2,129
  80fd30:	10832304 	addi	r2,r2,3212
  80fd34:	18bff62e 	bgeu	r3,r2,80fd10 <__alt_data_end+0xff80fd10>
        (*dtor) (); 
}
  80fd38:	0001883a 	nop
  80fd3c:	e037883a 	mov	sp,fp
  80fd40:	dfc00117 	ldw	ra,4(sp)
  80fd44:	df000017 	ldw	fp,0(sp)
  80fd48:	dec00204 	addi	sp,sp,8
  80fd4c:	f800283a 	ret

0080fd50 <alt_icache_flush_all>:
/*
 * alt_icache_flush_all() is called to flush the entire instruction cache.
 */

void alt_icache_flush_all (void)
{
  80fd50:	deffff04 	addi	sp,sp,-4
  80fd54:	df000015 	stw	fp,0(sp)
  80fd58:	d839883a 	mov	fp,sp
#if NIOS2_ICACHE_SIZE > 0
  alt_icache_flush (0, NIOS2_ICACHE_SIZE);
#endif
}
  80fd5c:	0001883a 	nop
  80fd60:	e037883a 	mov	sp,fp
  80fd64:	df000017 	ldw	fp,0(sp)
  80fd68:	dec00104 	addi	sp,sp,4
  80fd6c:	f800283a 	ret

0080fd70 <alt_ic_isr_register>:
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
  80fd70:	defff904 	addi	sp,sp,-28
  80fd74:	dfc00615 	stw	ra,24(sp)
  80fd78:	df000515 	stw	fp,20(sp)
  80fd7c:	df000504 	addi	fp,sp,20
  80fd80:	e13ffc15 	stw	r4,-16(fp)
  80fd84:	e17ffd15 	stw	r5,-12(fp)
  80fd88:	e1bffe15 	stw	r6,-8(fp)
  80fd8c:	e1ffff15 	stw	r7,-4(fp)
    return alt_iic_isr_register(ic_id, irq, isr, isr_context, flags);
  80fd90:	e0800217 	ldw	r2,8(fp)
  80fd94:	d8800015 	stw	r2,0(sp)
  80fd98:	e1ffff17 	ldw	r7,-4(fp)
  80fd9c:	e1bffe17 	ldw	r6,-8(fp)
  80fda0:	e17ffd17 	ldw	r5,-12(fp)
  80fda4:	e13ffc17 	ldw	r4,-16(fp)
  80fda8:	080ff200 	call	80ff20 <alt_iic_isr_register>
}  
  80fdac:	e037883a 	mov	sp,fp
  80fdb0:	dfc00117 	ldw	ra,4(sp)
  80fdb4:	df000017 	ldw	fp,0(sp)
  80fdb8:	dec00204 	addi	sp,sp,8
  80fdbc:	f800283a 	ret

0080fdc0 <alt_ic_irq_enable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_enable (alt_u32 ic_id, alt_u32 irq)
{
  80fdc0:	defff904 	addi	sp,sp,-28
  80fdc4:	df000615 	stw	fp,24(sp)
  80fdc8:	df000604 	addi	fp,sp,24
  80fdcc:	e13ffe15 	stw	r4,-8(fp)
  80fdd0:	e17fff15 	stw	r5,-4(fp)
  80fdd4:	e0bfff17 	ldw	r2,-4(fp)
  80fdd8:	e0bffa15 	stw	r2,-24(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  80fddc:	0005303a 	rdctl	r2,status
  80fde0:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  80fde4:	e0fffb17 	ldw	r3,-20(fp)
  80fde8:	00bfff84 	movi	r2,-2
  80fdec:	1884703a 	and	r2,r3,r2
  80fdf0:	1001703a 	wrctl	status,r2
  
  return context;
  80fdf4:	e0bffb17 	ldw	r2,-20(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_enable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
  80fdf8:	e0bffc15 	stw	r2,-16(fp)

  alt_irq_active |= (1 << id);
  80fdfc:	00c00044 	movi	r3,1
  80fe00:	e0bffa17 	ldw	r2,-24(fp)
  80fe04:	1884983a 	sll	r2,r3,r2
  80fe08:	1007883a 	mov	r3,r2
  80fe0c:	d0b6c717 	ldw	r2,-9444(gp)
  80fe10:	1884b03a 	or	r2,r3,r2
  80fe14:	d0b6c715 	stw	r2,-9444(gp)
  NIOS2_WRITE_IENABLE (alt_irq_active);
  80fe18:	d0b6c717 	ldw	r2,-9444(gp)
  80fe1c:	100170fa 	wrctl	ienable,r2
  80fe20:	e0bffc17 	ldw	r2,-16(fp)
  80fe24:	e0bffd15 	stw	r2,-12(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  80fe28:	e0bffd17 	ldw	r2,-12(fp)
  80fe2c:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
  80fe30:	0005883a 	mov	r2,zero
    return alt_irq_enable(irq);
  80fe34:	0001883a 	nop
}
  80fe38:	e037883a 	mov	sp,fp
  80fe3c:	df000017 	ldw	fp,0(sp)
  80fe40:	dec00104 	addi	sp,sp,4
  80fe44:	f800283a 	ret

0080fe48 <alt_ic_irq_disable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_disable(alt_u32 ic_id, alt_u32 irq)
{
  80fe48:	defff904 	addi	sp,sp,-28
  80fe4c:	df000615 	stw	fp,24(sp)
  80fe50:	df000604 	addi	fp,sp,24
  80fe54:	e13ffe15 	stw	r4,-8(fp)
  80fe58:	e17fff15 	stw	r5,-4(fp)
  80fe5c:	e0bfff17 	ldw	r2,-4(fp)
  80fe60:	e0bffa15 	stw	r2,-24(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  80fe64:	0005303a 	rdctl	r2,status
  80fe68:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  80fe6c:	e0fffb17 	ldw	r3,-20(fp)
  80fe70:	00bfff84 	movi	r2,-2
  80fe74:	1884703a 	and	r2,r3,r2
  80fe78:	1001703a 	wrctl	status,r2
  
  return context;
  80fe7c:	e0bffb17 	ldw	r2,-20(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_disable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
  80fe80:	e0bffc15 	stw	r2,-16(fp)

  alt_irq_active &= ~(1 << id);
  80fe84:	00c00044 	movi	r3,1
  80fe88:	e0bffa17 	ldw	r2,-24(fp)
  80fe8c:	1884983a 	sll	r2,r3,r2
  80fe90:	0084303a 	nor	r2,zero,r2
  80fe94:	1007883a 	mov	r3,r2
  80fe98:	d0b6c717 	ldw	r2,-9444(gp)
  80fe9c:	1884703a 	and	r2,r3,r2
  80fea0:	d0b6c715 	stw	r2,-9444(gp)
  NIOS2_WRITE_IENABLE (alt_irq_active);
  80fea4:	d0b6c717 	ldw	r2,-9444(gp)
  80fea8:	100170fa 	wrctl	ienable,r2
  80feac:	e0bffc17 	ldw	r2,-16(fp)
  80feb0:	e0bffd15 	stw	r2,-12(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  80feb4:	e0bffd17 	ldw	r2,-12(fp)
  80feb8:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
  80febc:	0005883a 	mov	r2,zero
    return alt_irq_disable(irq);
  80fec0:	0001883a 	nop
}
  80fec4:	e037883a 	mov	sp,fp
  80fec8:	df000017 	ldw	fp,0(sp)
  80fecc:	dec00104 	addi	sp,sp,4
  80fed0:	f800283a 	ret

0080fed4 <alt_ic_irq_enabled>:
  * @param irq              IRQ number
  * @return                 Zero if corresponding interrupt is disabled and
  *                         non-zero otherwise.
  */
alt_u32 alt_ic_irq_enabled(alt_u32 ic_id, alt_u32 irq)
{
  80fed4:	defffc04 	addi	sp,sp,-16
  80fed8:	df000315 	stw	fp,12(sp)
  80fedc:	df000304 	addi	fp,sp,12
  80fee0:	e13ffe15 	stw	r4,-8(fp)
  80fee4:	e17fff15 	stw	r5,-4(fp)
    alt_u32 irq_enabled;

    NIOS2_READ_IENABLE(irq_enabled);
  80fee8:	000530fa 	rdctl	r2,ienable
  80feec:	e0bffd15 	stw	r2,-12(fp)

    return (irq_enabled & (1 << irq)) ? 1: 0;
  80fef0:	00c00044 	movi	r3,1
  80fef4:	e0bfff17 	ldw	r2,-4(fp)
  80fef8:	1884983a 	sll	r2,r3,r2
  80fefc:	1007883a 	mov	r3,r2
  80ff00:	e0bffd17 	ldw	r2,-12(fp)
  80ff04:	1884703a 	and	r2,r3,r2
  80ff08:	1004c03a 	cmpne	r2,r2,zero
  80ff0c:	10803fcc 	andi	r2,r2,255
}
  80ff10:	e037883a 	mov	sp,fp
  80ff14:	df000017 	ldw	fp,0(sp)
  80ff18:	dec00104 	addi	sp,sp,4
  80ff1c:	f800283a 	ret

0080ff20 <alt_iic_isr_register>:
  * @param flags            
  * @return                 0 if successful, else error (-1)
  */
int alt_iic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
  80ff20:	defff504 	addi	sp,sp,-44
  80ff24:	dfc00a15 	stw	ra,40(sp)
  80ff28:	df000915 	stw	fp,36(sp)
  80ff2c:	df000904 	addi	fp,sp,36
  80ff30:	e13ffc15 	stw	r4,-16(fp)
  80ff34:	e17ffd15 	stw	r5,-12(fp)
  80ff38:	e1bffe15 	stw	r6,-8(fp)
  80ff3c:	e1ffff15 	stw	r7,-4(fp)
  int rc = -EINVAL;  
  80ff40:	00bffa84 	movi	r2,-22
  80ff44:	e0bff715 	stw	r2,-36(fp)
  int id = irq;             /* IRQ interpreted as the interrupt ID. */
  80ff48:	e0bffd17 	ldw	r2,-12(fp)
  80ff4c:	e0bff815 	stw	r2,-32(fp)
  alt_irq_context status;

  if (id < ALT_NIRQ)
  80ff50:	e0bff817 	ldw	r2,-32(fp)
  80ff54:	10800808 	cmpgei	r2,r2,32
  80ff58:	1000271e 	bne	r2,zero,80fff8 <alt_iic_isr_register+0xd8>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  80ff5c:	0005303a 	rdctl	r2,status
  80ff60:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  80ff64:	e0fffb17 	ldw	r3,-20(fp)
  80ff68:	00bfff84 	movi	r2,-2
  80ff6c:	1884703a 	and	r2,r3,r2
  80ff70:	1001703a 	wrctl	status,r2
  
  return context;
  80ff74:	e0bffb17 	ldw	r2,-20(fp)
     * interrupts are disabled while the handler tables are updated to ensure
     * that an interrupt doesn't occur while the tables are in an inconsistant
     * state.
     */

    status = alt_irq_disable_all();
  80ff78:	e0bffa15 	stw	r2,-24(fp)

    alt_irq[id].handler = isr;
  80ff7c:	008020b4 	movhi	r2,130
  80ff80:	10b15d04 	addi	r2,r2,-14988
  80ff84:	e0fff817 	ldw	r3,-32(fp)
  80ff88:	180690fa 	slli	r3,r3,3
  80ff8c:	10c5883a 	add	r2,r2,r3
  80ff90:	e0fffe17 	ldw	r3,-8(fp)
  80ff94:	10c00015 	stw	r3,0(r2)
    alt_irq[id].context = isr_context;
  80ff98:	008020b4 	movhi	r2,130
  80ff9c:	10b15d04 	addi	r2,r2,-14988
  80ffa0:	e0fff817 	ldw	r3,-32(fp)
  80ffa4:	180690fa 	slli	r3,r3,3
  80ffa8:	10c5883a 	add	r2,r2,r3
  80ffac:	10800104 	addi	r2,r2,4
  80ffb0:	e0ffff17 	ldw	r3,-4(fp)
  80ffb4:	10c00015 	stw	r3,0(r2)

    rc = (isr) ? alt_ic_irq_enable(ic_id, id) : alt_ic_irq_disable(ic_id, id);
  80ffb8:	e0bffe17 	ldw	r2,-8(fp)
  80ffbc:	10000526 	beq	r2,zero,80ffd4 <alt_iic_isr_register+0xb4>
  80ffc0:	e0bff817 	ldw	r2,-32(fp)
  80ffc4:	100b883a 	mov	r5,r2
  80ffc8:	e13ffc17 	ldw	r4,-16(fp)
  80ffcc:	080fdc00 	call	80fdc0 <alt_ic_irq_enable>
  80ffd0:	00000406 	br	80ffe4 <alt_iic_isr_register+0xc4>
  80ffd4:	e0bff817 	ldw	r2,-32(fp)
  80ffd8:	100b883a 	mov	r5,r2
  80ffdc:	e13ffc17 	ldw	r4,-16(fp)
  80ffe0:	080fe480 	call	80fe48 <alt_ic_irq_disable>
  80ffe4:	e0bff715 	stw	r2,-36(fp)
  80ffe8:	e0bffa17 	ldw	r2,-24(fp)
  80ffec:	e0bff915 	stw	r2,-28(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  80fff0:	e0bff917 	ldw	r2,-28(fp)
  80fff4:	1001703a 	wrctl	status,r2

    alt_irq_enable_all(status);
  }

  return rc; 
  80fff8:	e0bff717 	ldw	r2,-36(fp)
}
  80fffc:	e037883a 	mov	sp,fp
  810000:	dfc00117 	ldw	ra,4(sp)
  810004:	df000017 	ldw	fp,0(sp)
  810008:	dec00204 	addi	sp,sp,8
  81000c:	f800283a 	ret

00810010 <alt_open_fd>:
 * If the device can not be succesfully opened, then the input file descriptor
 * remains unchanged.
 */

static void alt_open_fd(alt_fd* fd, const char* name, int flags, int mode)
{
  810010:	defff904 	addi	sp,sp,-28
  810014:	dfc00615 	stw	ra,24(sp)
  810018:	df000515 	stw	fp,20(sp)
  81001c:	df000504 	addi	fp,sp,20
  810020:	e13ffc15 	stw	r4,-16(fp)
  810024:	e17ffd15 	stw	r5,-12(fp)
  810028:	e1bffe15 	stw	r6,-8(fp)
  81002c:	e1ffff15 	stw	r7,-4(fp)
  int old;

  old = open (name, flags, mode);
  810030:	e1bfff17 	ldw	r6,-4(fp)
  810034:	e17ffe17 	ldw	r5,-8(fp)
  810038:	e13ffd17 	ldw	r4,-12(fp)
  81003c:	08102500 	call	810250 <open>
  810040:	e0bffb15 	stw	r2,-20(fp)

  if (old >= 0)
  810044:	e0bffb17 	ldw	r2,-20(fp)
  810048:	10001c16 	blt	r2,zero,8100bc <alt_open_fd+0xac>
  {
    fd->dev      = alt_fd_list[old].dev;
  81004c:	00802074 	movhi	r2,129
  810050:	10961004 	addi	r2,r2,22592
  810054:	e0fffb17 	ldw	r3,-20(fp)
  810058:	18c00324 	muli	r3,r3,12
  81005c:	10c5883a 	add	r2,r2,r3
  810060:	10c00017 	ldw	r3,0(r2)
  810064:	e0bffc17 	ldw	r2,-16(fp)
  810068:	10c00015 	stw	r3,0(r2)
    fd->priv     = alt_fd_list[old].priv;
  81006c:	00802074 	movhi	r2,129
  810070:	10961004 	addi	r2,r2,22592
  810074:	e0fffb17 	ldw	r3,-20(fp)
  810078:	18c00324 	muli	r3,r3,12
  81007c:	10c5883a 	add	r2,r2,r3
  810080:	10800104 	addi	r2,r2,4
  810084:	10c00017 	ldw	r3,0(r2)
  810088:	e0bffc17 	ldw	r2,-16(fp)
  81008c:	10c00115 	stw	r3,4(r2)
    fd->fd_flags = alt_fd_list[old].fd_flags;
  810090:	00802074 	movhi	r2,129
  810094:	10961004 	addi	r2,r2,22592
  810098:	e0fffb17 	ldw	r3,-20(fp)
  81009c:	18c00324 	muli	r3,r3,12
  8100a0:	10c5883a 	add	r2,r2,r3
  8100a4:	10800204 	addi	r2,r2,8
  8100a8:	10c00017 	ldw	r3,0(r2)
  8100ac:	e0bffc17 	ldw	r2,-16(fp)
  8100b0:	10c00215 	stw	r3,8(r2)

    alt_release_fd (old);
  8100b4:	e13ffb17 	ldw	r4,-20(fp)
  8100b8:	080eb140 	call	80eb14 <alt_release_fd>
  }
} 
  8100bc:	0001883a 	nop
  8100c0:	e037883a 	mov	sp,fp
  8100c4:	dfc00117 	ldw	ra,4(sp)
  8100c8:	df000017 	ldw	fp,0(sp)
  8100cc:	dec00204 	addi	sp,sp,8
  8100d0:	f800283a 	ret

008100d4 <alt_io_redirect>:
 */
 
void alt_io_redirect(const char* stdout_dev, 
                     const char* stdin_dev, 
                     const char* stderr_dev)
{
  8100d4:	defffb04 	addi	sp,sp,-20
  8100d8:	dfc00415 	stw	ra,16(sp)
  8100dc:	df000315 	stw	fp,12(sp)
  8100e0:	df000304 	addi	fp,sp,12
  8100e4:	e13ffd15 	stw	r4,-12(fp)
  8100e8:	e17ffe15 	stw	r5,-8(fp)
  8100ec:	e1bfff15 	stw	r6,-4(fp)
  /* Redirect the channels */

  alt_open_fd (&alt_fd_list[STDOUT_FILENO], stdout_dev, O_WRONLY, 0777);
  8100f0:	01c07fc4 	movi	r7,511
  8100f4:	01800044 	movi	r6,1
  8100f8:	e17ffd17 	ldw	r5,-12(fp)
  8100fc:	01002074 	movhi	r4,129
  810100:	21161304 	addi	r4,r4,22604
  810104:	08100100 	call	810010 <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDIN_FILENO], stdin_dev, O_RDONLY, 0777);
  810108:	01c07fc4 	movi	r7,511
  81010c:	000d883a 	mov	r6,zero
  810110:	e17ffe17 	ldw	r5,-8(fp)
  810114:	01002074 	movhi	r4,129
  810118:	21161004 	addi	r4,r4,22592
  81011c:	08100100 	call	810010 <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDERR_FILENO], stderr_dev, O_WRONLY, 0777);
  810120:	01c07fc4 	movi	r7,511
  810124:	01800044 	movi	r6,1
  810128:	e17fff17 	ldw	r5,-4(fp)
  81012c:	01002074 	movhi	r4,129
  810130:	21161604 	addi	r4,r4,22616
  810134:	08100100 	call	810010 <alt_open_fd>
}  
  810138:	0001883a 	nop
  81013c:	e037883a 	mov	sp,fp
  810140:	dfc00117 	ldw	ra,4(sp)
  810144:	df000017 	ldw	fp,0(sp)
  810148:	dec00204 	addi	sp,sp,8
  81014c:	f800283a 	ret

00810150 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
  810150:	defffe04 	addi	sp,sp,-8
  810154:	dfc00115 	stw	ra,4(sp)
  810158:	df000015 	stw	fp,0(sp)
  81015c:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
  810160:	d0a00b17 	ldw	r2,-32724(gp)
  810164:	10000326 	beq	r2,zero,810174 <alt_get_errno+0x24>
  810168:	d0a00b17 	ldw	r2,-32724(gp)
  81016c:	103ee83a 	callr	r2
  810170:	00000106 	br	810178 <alt_get_errno+0x28>
  810174:	d0b6c304 	addi	r2,gp,-9460
}
  810178:	e037883a 	mov	sp,fp
  81017c:	dfc00117 	ldw	ra,4(sp)
  810180:	df000017 	ldw	fp,0(sp)
  810184:	dec00204 	addi	sp,sp,8
  810188:	f800283a 	ret

0081018c <alt_file_locked>:
 * performed for devices. Filesystems are required to handle the ioctl() call
 * themselves, and report the error from the filesystems open() function. 
 */ 

static int alt_file_locked (alt_fd* fd)
{
  81018c:	defffd04 	addi	sp,sp,-12
  810190:	df000215 	stw	fp,8(sp)
  810194:	df000204 	addi	fp,sp,8
  810198:	e13fff15 	stw	r4,-4(fp)

  /*
   * Mark the file descriptor as belonging to a device.
   */

  fd->fd_flags |= ALT_FD_DEV;
  81019c:	e0bfff17 	ldw	r2,-4(fp)
  8101a0:	10800217 	ldw	r2,8(r2)
  8101a4:	10d00034 	orhi	r3,r2,16384
  8101a8:	e0bfff17 	ldw	r2,-4(fp)
  8101ac:	10c00215 	stw	r3,8(r2)
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
  8101b0:	e03ffe15 	stw	zero,-8(fp)
  8101b4:	00001d06 	br	81022c <alt_file_locked+0xa0>
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
  8101b8:	00802074 	movhi	r2,129
  8101bc:	10961004 	addi	r2,r2,22592
  8101c0:	e0fffe17 	ldw	r3,-8(fp)
  8101c4:	18c00324 	muli	r3,r3,12
  8101c8:	10c5883a 	add	r2,r2,r3
  8101cc:	10c00017 	ldw	r3,0(r2)
  8101d0:	e0bfff17 	ldw	r2,-4(fp)
  8101d4:	10800017 	ldw	r2,0(r2)
  8101d8:	1880111e 	bne	r3,r2,810220 <alt_file_locked+0x94>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
  8101dc:	00802074 	movhi	r2,129
  8101e0:	10961004 	addi	r2,r2,22592
  8101e4:	e0fffe17 	ldw	r3,-8(fp)
  8101e8:	18c00324 	muli	r3,r3,12
  8101ec:	10c5883a 	add	r2,r2,r3
  8101f0:	10800204 	addi	r2,r2,8
  8101f4:	10800017 	ldw	r2,0(r2)
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
  8101f8:	1000090e 	bge	r2,zero,810220 <alt_file_locked+0x94>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
        (&alt_fd_list[i] != fd))
  8101fc:	e0bffe17 	ldw	r2,-8(fp)
  810200:	10c00324 	muli	r3,r2,12
  810204:	00802074 	movhi	r2,129
  810208:	10961004 	addi	r2,r2,22592
  81020c:	1887883a 	add	r3,r3,r2
   */

  for (i = 0; i <= alt_max_fd; i++)
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
  810210:	e0bfff17 	ldw	r2,-4(fp)
  810214:	18800226 	beq	r3,r2,810220 <alt_file_locked+0x94>
        (&alt_fd_list[i] != fd))
    {
      return -EACCES;
  810218:	00bffcc4 	movi	r2,-13
  81021c:	00000806 	br	810240 <alt_file_locked+0xb4>
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
  810220:	e0bffe17 	ldw	r2,-8(fp)
  810224:	10800044 	addi	r2,r2,1
  810228:	e0bffe15 	stw	r2,-8(fp)
  81022c:	d0a00a17 	ldw	r2,-32728(gp)
  810230:	1007883a 	mov	r3,r2
  810234:	e0bffe17 	ldw	r2,-8(fp)
  810238:	18bfdf2e 	bgeu	r3,r2,8101b8 <__alt_data_end+0xff8101b8>
    }
  }
  
  /* The device is not locked */
 
  return 0;
  81023c:	0005883a 	mov	r2,zero
}
  810240:	e037883a 	mov	sp,fp
  810244:	df000017 	ldw	fp,0(sp)
  810248:	dec00104 	addi	sp,sp,4
  81024c:	f800283a 	ret

00810250 <open>:
 *
 * ALT_OPEN is mapped onto the open() system call in alt_syscall.h
 */
 
int ALT_OPEN (const char* file, int flags, int mode)
{ 
  810250:	defff604 	addi	sp,sp,-40
  810254:	dfc00915 	stw	ra,36(sp)
  810258:	df000815 	stw	fp,32(sp)
  81025c:	df000804 	addi	fp,sp,32
  810260:	e13ffd15 	stw	r4,-12(fp)
  810264:	e17ffe15 	stw	r5,-8(fp)
  810268:	e1bfff15 	stw	r6,-4(fp)
  alt_dev* dev;
  alt_fd*  fd;
  int index  = -1;
  81026c:	00bfffc4 	movi	r2,-1
  810270:	e0bff915 	stw	r2,-28(fp)
  int status = -ENODEV;
  810274:	00bffb44 	movi	r2,-19
  810278:	e0bffa15 	stw	r2,-24(fp)
  int isafs = 0;
  81027c:	e03ffb15 	stw	zero,-20(fp)
  /* 
   * Check the device list, to see if a device with a matching name is 
   * registered.
   */
  
  if (!(dev = alt_find_dev (file, &alt_dev_list)))
  810280:	d1600804 	addi	r5,gp,-32736
  810284:	e13ffd17 	ldw	r4,-12(fp)
  810288:	081056c0 	call	81056c <alt_find_dev>
  81028c:	e0bff815 	stw	r2,-32(fp)
  810290:	e0bff817 	ldw	r2,-32(fp)
  810294:	1000051e 	bne	r2,zero,8102ac <open+0x5c>
  {
    /* No matching device, so try the filesystem list */

    dev   = alt_find_file (file);
  810298:	e13ffd17 	ldw	r4,-12(fp)
  81029c:	08105fc0 	call	8105fc <alt_find_file>
  8102a0:	e0bff815 	stw	r2,-32(fp)
    isafs = 1;
  8102a4:	00800044 	movi	r2,1
  8102a8:	e0bffb15 	stw	r2,-20(fp)

  /* 
   * If a matching device or filesystem is found, allocate a file descriptor. 
   */

  if (dev)
  8102ac:	e0bff817 	ldw	r2,-32(fp)
  8102b0:	10002926 	beq	r2,zero,810358 <open+0x108>
  {
    if ((index = alt_get_fd (dev)) < 0)
  8102b4:	e13ff817 	ldw	r4,-32(fp)
  8102b8:	08107040 	call	810704 <alt_get_fd>
  8102bc:	e0bff915 	stw	r2,-28(fp)
  8102c0:	e0bff917 	ldw	r2,-28(fp)
  8102c4:	1000030e 	bge	r2,zero,8102d4 <open+0x84>
    {
      status = index;
  8102c8:	e0bff917 	ldw	r2,-28(fp)
  8102cc:	e0bffa15 	stw	r2,-24(fp)
  8102d0:	00002306 	br	810360 <open+0x110>
    }
    else
    {
      fd = &alt_fd_list[index];
  8102d4:	e0bff917 	ldw	r2,-28(fp)
  8102d8:	10c00324 	muli	r3,r2,12
  8102dc:	00802074 	movhi	r2,129
  8102e0:	10961004 	addi	r2,r2,22592
  8102e4:	1885883a 	add	r2,r3,r2
  8102e8:	e0bffc15 	stw	r2,-16(fp)
      fd->fd_flags = (flags & ~ALT_FD_FLAGS_MASK);
  8102ec:	e0fffe17 	ldw	r3,-8(fp)
  8102f0:	00900034 	movhi	r2,16384
  8102f4:	10bfffc4 	addi	r2,r2,-1
  8102f8:	1886703a 	and	r3,r3,r2
  8102fc:	e0bffc17 	ldw	r2,-16(fp)
  810300:	10c00215 	stw	r3,8(r2)
      
      /* If this is a device, ensure it isn't already locked */

      if (isafs || ((status = alt_file_locked (fd)) >= 0))
  810304:	e0bffb17 	ldw	r2,-20(fp)
  810308:	1000051e 	bne	r2,zero,810320 <open+0xd0>
  81030c:	e13ffc17 	ldw	r4,-16(fp)
  810310:	081018c0 	call	81018c <alt_file_locked>
  810314:	e0bffa15 	stw	r2,-24(fp)
  810318:	e0bffa17 	ldw	r2,-24(fp)
  81031c:	10001016 	blt	r2,zero,810360 <open+0x110>
        /* 
         * If the device or filesystem provides an open() callback function,
         * call it now to perform any device/filesystem specific operations.
         */
    
        status = (dev->open) ? dev->open(fd, file, flags, mode): 0;
  810320:	e0bff817 	ldw	r2,-32(fp)
  810324:	10800317 	ldw	r2,12(r2)
  810328:	10000826 	beq	r2,zero,81034c <open+0xfc>
  81032c:	e0bff817 	ldw	r2,-32(fp)
  810330:	10800317 	ldw	r2,12(r2)
  810334:	e1ffff17 	ldw	r7,-4(fp)
  810338:	e1bffe17 	ldw	r6,-8(fp)
  81033c:	e17ffd17 	ldw	r5,-12(fp)
  810340:	e13ffc17 	ldw	r4,-16(fp)
  810344:	103ee83a 	callr	r2
  810348:	00000106 	br	810350 <open+0x100>
  81034c:	0005883a 	mov	r2,zero
  810350:	e0bffa15 	stw	r2,-24(fp)
  810354:	00000206 	br	810360 <open+0x110>
      }
    }
  }
  else
  {
    status = -ENODEV;
  810358:	00bffb44 	movi	r2,-19
  81035c:	e0bffa15 	stw	r2,-24(fp)
  }

  /* Allocation failed, so clean up and return an error */ 

  if (status < 0)
  810360:	e0bffa17 	ldw	r2,-24(fp)
  810364:	1000090e 	bge	r2,zero,81038c <open+0x13c>
  {
    alt_release_fd (index);  
  810368:	e13ff917 	ldw	r4,-28(fp)
  81036c:	080eb140 	call	80eb14 <alt_release_fd>
    ALT_ERRNO = -status;
  810370:	08101500 	call	810150 <alt_get_errno>
  810374:	1007883a 	mov	r3,r2
  810378:	e0bffa17 	ldw	r2,-24(fp)
  81037c:	0085c83a 	sub	r2,zero,r2
  810380:	18800015 	stw	r2,0(r3)
    return -1;
  810384:	00bfffc4 	movi	r2,-1
  810388:	00000106 	br	810390 <open+0x140>
  }
  
  /* return the reference upon success */

  return index;
  81038c:	e0bff917 	ldw	r2,-28(fp)
}
  810390:	e037883a 	mov	sp,fp
  810394:	dfc00117 	ldw	ra,4(sp)
  810398:	df000017 	ldw	fp,0(sp)
  81039c:	dec00204 	addi	sp,sp,8
  8103a0:	f800283a 	ret

008103a4 <alt_alarm_stop>:
 * alarms. Alternatively an alarm can unregister itself by returning zero when 
 * the alarm executes.
 */

void alt_alarm_stop (alt_alarm* alarm)
{
  8103a4:	defffa04 	addi	sp,sp,-24
  8103a8:	df000515 	stw	fp,20(sp)
  8103ac:	df000504 	addi	fp,sp,20
  8103b0:	e13fff15 	stw	r4,-4(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  8103b4:	0005303a 	rdctl	r2,status
  8103b8:	e0bffc15 	stw	r2,-16(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  8103bc:	e0fffc17 	ldw	r3,-16(fp)
  8103c0:	00bfff84 	movi	r2,-2
  8103c4:	1884703a 	and	r2,r3,r2
  8103c8:	1001703a 	wrctl	status,r2
  
  return context;
  8103cc:	e0bffc17 	ldw	r2,-16(fp)
  alt_irq_context irq_context;

  irq_context = alt_irq_disable_all();
  8103d0:	e0bffb15 	stw	r2,-20(fp)
  alt_llist_remove (&alarm->llist);
  8103d4:	e0bfff17 	ldw	r2,-4(fp)
  8103d8:	e0bffd15 	stw	r2,-12(fp)
 * input argument is the element to remove.
 */
     
static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_remove(alt_llist* entry)
{
  entry->next->previous = entry->previous;
  8103dc:	e0bffd17 	ldw	r2,-12(fp)
  8103e0:	10800017 	ldw	r2,0(r2)
  8103e4:	e0fffd17 	ldw	r3,-12(fp)
  8103e8:	18c00117 	ldw	r3,4(r3)
  8103ec:	10c00115 	stw	r3,4(r2)
  entry->previous->next = entry->next;
  8103f0:	e0bffd17 	ldw	r2,-12(fp)
  8103f4:	10800117 	ldw	r2,4(r2)
  8103f8:	e0fffd17 	ldw	r3,-12(fp)
  8103fc:	18c00017 	ldw	r3,0(r3)
  810400:	10c00015 	stw	r3,0(r2)
  /* 
   * Set the entry to point to itself, so that any further calls to
   * alt_llist_remove() are harmless.
   */

  entry->previous = entry;
  810404:	e0bffd17 	ldw	r2,-12(fp)
  810408:	e0fffd17 	ldw	r3,-12(fp)
  81040c:	10c00115 	stw	r3,4(r2)
  entry->next     = entry;
  810410:	e0bffd17 	ldw	r2,-12(fp)
  810414:	e0fffd17 	ldw	r3,-12(fp)
  810418:	10c00015 	stw	r3,0(r2)
  81041c:	e0bffb17 	ldw	r2,-20(fp)
  810420:	e0bffe15 	stw	r2,-8(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  810424:	e0bffe17 	ldw	r2,-8(fp)
  810428:	1001703a 	wrctl	status,r2
  alt_irq_enable_all (irq_context);
}
  81042c:	0001883a 	nop
  810430:	e037883a 	mov	sp,fp
  810434:	df000017 	ldw	fp,0(sp)
  810438:	dec00104 	addi	sp,sp,4
  81043c:	f800283a 	ret

00810440 <alt_tick>:
 * 
 * alt_tick() is expected to run at interrupt level.
 */

void alt_tick (void)
{
  810440:	defffb04 	addi	sp,sp,-20
  810444:	dfc00415 	stw	ra,16(sp)
  810448:	df000315 	stw	fp,12(sp)
  81044c:	df000304 	addi	fp,sp,12
  alt_alarm* next;
  alt_alarm* alarm = (alt_alarm*) alt_alarm_list.next;
  810450:	d0a00e17 	ldw	r2,-32712(gp)
  810454:	e0bffd15 	stw	r2,-12(fp)

  alt_u32    next_callback;

  /* update the tick counter */

  _alt_nticks++;
  810458:	d0b6c917 	ldw	r2,-9436(gp)
  81045c:	10800044 	addi	r2,r2,1
  810460:	d0b6c915 	stw	r2,-9436(gp)

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
  810464:	00002e06 	br	810520 <alt_tick+0xe0>
  {
    next = (alt_alarm*) alarm->llist.next;
  810468:	e0bffd17 	ldw	r2,-12(fp)
  81046c:	10800017 	ldw	r2,0(r2)
  810470:	e0bffe15 	stw	r2,-8(fp)
    /* 
     * Upon the tick-counter rolling over it is safe to clear the 
     * roll-over flag; once the flag is cleared this (or subsequnt)
     * tick events are enabled to generate an alarm event. 
     */
    if ((alarm->rollover) && (_alt_nticks == 0))
  810474:	e0bffd17 	ldw	r2,-12(fp)
  810478:	10800403 	ldbu	r2,16(r2)
  81047c:	10803fcc 	andi	r2,r2,255
  810480:	10000426 	beq	r2,zero,810494 <alt_tick+0x54>
  810484:	d0b6c917 	ldw	r2,-9436(gp)
  810488:	1000021e 	bne	r2,zero,810494 <alt_tick+0x54>
    {
      alarm->rollover = 0;
  81048c:	e0bffd17 	ldw	r2,-12(fp)
  810490:	10000405 	stb	zero,16(r2)
    }
    
    /* if the alarm period has expired, make the callback */    
    if ((alarm->time <= _alt_nticks) && (alarm->rollover == 0))
  810494:	e0bffd17 	ldw	r2,-12(fp)
  810498:	10800217 	ldw	r2,8(r2)
  81049c:	d0f6c917 	ldw	r3,-9436(gp)
  8104a0:	18801d36 	bltu	r3,r2,810518 <alt_tick+0xd8>
  8104a4:	e0bffd17 	ldw	r2,-12(fp)
  8104a8:	10800403 	ldbu	r2,16(r2)
  8104ac:	10803fcc 	andi	r2,r2,255
  8104b0:	1000191e 	bne	r2,zero,810518 <alt_tick+0xd8>
    {
      next_callback = alarm->callback (alarm->context);
  8104b4:	e0bffd17 	ldw	r2,-12(fp)
  8104b8:	10800317 	ldw	r2,12(r2)
  8104bc:	e0fffd17 	ldw	r3,-12(fp)
  8104c0:	18c00517 	ldw	r3,20(r3)
  8104c4:	1809883a 	mov	r4,r3
  8104c8:	103ee83a 	callr	r2
  8104cc:	e0bfff15 	stw	r2,-4(fp)

      /* deactivate the alarm if the return value is zero */

      if (next_callback == 0)
  8104d0:	e0bfff17 	ldw	r2,-4(fp)
  8104d4:	1000031e 	bne	r2,zero,8104e4 <alt_tick+0xa4>
      {
        alt_alarm_stop (alarm);
  8104d8:	e13ffd17 	ldw	r4,-12(fp)
  8104dc:	08103a40 	call	8103a4 <alt_alarm_stop>
  8104e0:	00000d06 	br	810518 <alt_tick+0xd8>
      }
      else
      {
        alarm->time += next_callback;
  8104e4:	e0bffd17 	ldw	r2,-12(fp)
  8104e8:	10c00217 	ldw	r3,8(r2)
  8104ec:	e0bfff17 	ldw	r2,-4(fp)
  8104f0:	1887883a 	add	r3,r3,r2
  8104f4:	e0bffd17 	ldw	r2,-12(fp)
  8104f8:	10c00215 	stw	r3,8(r2)
        /* 
         * If the desired alarm time causes a roll-over, set the rollover
         * flag. This will prevent the subsequent tick event from causing
         * an alarm too early.
         */
        if(alarm->time < _alt_nticks)
  8104fc:	e0bffd17 	ldw	r2,-12(fp)
  810500:	10c00217 	ldw	r3,8(r2)
  810504:	d0b6c917 	ldw	r2,-9436(gp)
  810508:	1880032e 	bgeu	r3,r2,810518 <alt_tick+0xd8>
        {
          alarm->rollover = 1;
  81050c:	e0bffd17 	ldw	r2,-12(fp)
  810510:	00c00044 	movi	r3,1
  810514:	10c00405 	stb	r3,16(r2)
        }
      }
    }
    alarm = next;
  810518:	e0bffe17 	ldw	r2,-8(fp)
  81051c:	e0bffd15 	stw	r2,-12(fp)

  _alt_nticks++;

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
  810520:	e0fffd17 	ldw	r3,-12(fp)
  810524:	d0a00e04 	addi	r2,gp,-32712
  810528:	18bfcf1e 	bne	r3,r2,810468 <__alt_data_end+0xff810468>

  /* 
   * Update the operating system specific timer facilities.
   */

  ALT_OS_TIME_TICK();
  81052c:	0001883a 	nop
}
  810530:	0001883a 	nop
  810534:	e037883a 	mov	sp,fp
  810538:	dfc00117 	ldw	ra,4(sp)
  81053c:	df000017 	ldw	fp,0(sp)
  810540:	dec00204 	addi	sp,sp,8
  810544:	f800283a 	ret

00810548 <altera_nios2_gen2_irq_init>:
/*
 * To initialize the internal interrupt controller, just clear the IENABLE
 * register so that all possible IRQs are disabled.
 */
void altera_nios2_gen2_irq_init(void) 
{
  810548:	deffff04 	addi	sp,sp,-4
  81054c:	df000015 	stw	fp,0(sp)
  810550:	d839883a 	mov	fp,sp
    NIOS2_WRITE_IENABLE(0);
  810554:	000170fa 	wrctl	ienable,zero
}
  810558:	0001883a 	nop
  81055c:	e037883a 	mov	sp,fp
  810560:	df000017 	ldw	fp,0(sp)
  810564:	dec00104 	addi	sp,sp,4
  810568:	f800283a 	ret

0081056c <alt_find_dev>:
 * "name" must be an exact match for the devices registered name for a match to
 * be found.
 */
 
alt_dev* alt_find_dev(const char* name, alt_llist* llist)
{
  81056c:	defffa04 	addi	sp,sp,-24
  810570:	dfc00515 	stw	ra,20(sp)
  810574:	df000415 	stw	fp,16(sp)
  810578:	df000404 	addi	fp,sp,16
  81057c:	e13ffe15 	stw	r4,-8(fp)
  810580:	e17fff15 	stw	r5,-4(fp)
  alt_dev* next = (alt_dev*) llist->next;
  810584:	e0bfff17 	ldw	r2,-4(fp)
  810588:	10800017 	ldw	r2,0(r2)
  81058c:	e0bffc15 	stw	r2,-16(fp)
  alt_32 len;

  len  = strlen(name) + 1;
  810590:	e13ffe17 	ldw	r4,-8(fp)
  810594:	08021140 	call	802114 <strlen>
  810598:	10800044 	addi	r2,r2,1
  81059c:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
  8105a0:	00000d06 	br	8105d8 <alt_find_dev+0x6c>
    /* 
     * memcmp() is used here rather than strcmp() in order to reduce the size
     * of the executable.
     */

    if (!memcmp (next->name, name, len))
  8105a4:	e0bffc17 	ldw	r2,-16(fp)
  8105a8:	10800217 	ldw	r2,8(r2)
  8105ac:	e0fffd17 	ldw	r3,-12(fp)
  8105b0:	180d883a 	mov	r6,r3
  8105b4:	e17ffe17 	ldw	r5,-8(fp)
  8105b8:	1009883a 	mov	r4,r2
  8105bc:	08109440 	call	810944 <memcmp>
  8105c0:	1000021e 	bne	r2,zero,8105cc <alt_find_dev+0x60>
    {
      /* match found */

      return next;
  8105c4:	e0bffc17 	ldw	r2,-16(fp)
  8105c8:	00000706 	br	8105e8 <alt_find_dev+0x7c>
    }
    next = (alt_dev*) next->llist.next;
  8105cc:	e0bffc17 	ldw	r2,-16(fp)
  8105d0:	10800017 	ldw	r2,0(r2)
  8105d4:	e0bffc15 	stw	r2,-16(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
  8105d8:	e0fffc17 	ldw	r3,-16(fp)
  8105dc:	e0bfff17 	ldw	r2,-4(fp)
  8105e0:	18bff01e 	bne	r3,r2,8105a4 <__alt_data_end+0xff8105a4>
    next = (alt_dev*) next->llist.next;
  }
  
  /* No match found */
  
  return NULL;
  8105e4:	0005883a 	mov	r2,zero
}
  8105e8:	e037883a 	mov	sp,fp
  8105ec:	dfc00117 	ldw	ra,4(sp)
  8105f0:	df000017 	ldw	fp,0(sp)
  8105f4:	dec00204 	addi	sp,sp,8
  8105f8:	f800283a 	ret

008105fc <alt_find_file>:
 * either '/' or '\0' is the prefix of the filename. For example the filename:
 * "/myfilesystem/junk.txt" would match: "/myfilesystem", but not: "/myfile". 
 */
 
alt_dev* alt_find_file (const char* name)
{
  8105fc:	defffb04 	addi	sp,sp,-20
  810600:	dfc00415 	stw	ra,16(sp)
  810604:	df000315 	stw	fp,12(sp)
  810608:	df000304 	addi	fp,sp,12
  81060c:	e13fff15 	stw	r4,-4(fp)
  alt_dev* next = (alt_dev*) alt_fs_list.next;   
  810610:	d0a00617 	ldw	r2,-32744(gp)
  810614:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
  810618:	00003106 	br	8106e0 <alt_find_file+0xe4>
  {
    len = strlen(next->name);
  81061c:	e0bffd17 	ldw	r2,-12(fp)
  810620:	10800217 	ldw	r2,8(r2)
  810624:	1009883a 	mov	r4,r2
  810628:	08021140 	call	802114 <strlen>
  81062c:	e0bffe15 	stw	r2,-8(fp)
    
    if (next->name[len-1] == '/')
  810630:	e0bffd17 	ldw	r2,-12(fp)
  810634:	10c00217 	ldw	r3,8(r2)
  810638:	e0bffe17 	ldw	r2,-8(fp)
  81063c:	10bfffc4 	addi	r2,r2,-1
  810640:	1885883a 	add	r2,r3,r2
  810644:	10800003 	ldbu	r2,0(r2)
  810648:	10803fcc 	andi	r2,r2,255
  81064c:	1080201c 	xori	r2,r2,128
  810650:	10bfe004 	addi	r2,r2,-128
  810654:	10800bd8 	cmpnei	r2,r2,47
  810658:	1000031e 	bne	r2,zero,810668 <alt_find_file+0x6c>
    {
      len -= 1;
  81065c:	e0bffe17 	ldw	r2,-8(fp)
  810660:	10bfffc4 	addi	r2,r2,-1
  810664:	e0bffe15 	stw	r2,-8(fp)
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
  810668:	e0bffe17 	ldw	r2,-8(fp)
  81066c:	e0ffff17 	ldw	r3,-4(fp)
  810670:	1885883a 	add	r2,r3,r2
  810674:	10800003 	ldbu	r2,0(r2)
  810678:	10803fcc 	andi	r2,r2,255
  81067c:	1080201c 	xori	r2,r2,128
  810680:	10bfe004 	addi	r2,r2,-128
  810684:	10800be0 	cmpeqi	r2,r2,47
  810688:	1000081e 	bne	r2,zero,8106ac <alt_find_file+0xb0>
  81068c:	e0bffe17 	ldw	r2,-8(fp)
  810690:	e0ffff17 	ldw	r3,-4(fp)
  810694:	1885883a 	add	r2,r3,r2
  810698:	10800003 	ldbu	r2,0(r2)
  81069c:	10803fcc 	andi	r2,r2,255
  8106a0:	1080201c 	xori	r2,r2,128
  8106a4:	10bfe004 	addi	r2,r2,-128
  8106a8:	10000a1e 	bne	r2,zero,8106d4 <alt_find_file+0xd8>
        !memcmp (next->name, name, len))
  8106ac:	e0bffd17 	ldw	r2,-12(fp)
  8106b0:	10800217 	ldw	r2,8(r2)
  8106b4:	e0fffe17 	ldw	r3,-8(fp)
  8106b8:	180d883a 	mov	r6,r3
  8106bc:	e17fff17 	ldw	r5,-4(fp)
  8106c0:	1009883a 	mov	r4,r2
  8106c4:	08109440 	call	810944 <memcmp>
    if (next->name[len-1] == '/')
    {
      len -= 1;
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
  8106c8:	1000021e 	bne	r2,zero,8106d4 <alt_find_file+0xd8>
        !memcmp (next->name, name, len))
    {
      /* match found */

      return next;
  8106cc:	e0bffd17 	ldw	r2,-12(fp)
  8106d0:	00000706 	br	8106f0 <alt_find_file+0xf4>
    }
    next = (alt_dev*) next->llist.next;
  8106d4:	e0bffd17 	ldw	r2,-12(fp)
  8106d8:	10800017 	ldw	r2,0(r2)
  8106dc:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
  8106e0:	e0fffd17 	ldw	r3,-12(fp)
  8106e4:	d0a00604 	addi	r2,gp,-32744
  8106e8:	18bfcc1e 	bne	r3,r2,81061c <__alt_data_end+0xff81061c>
    next = (alt_dev*) next->llist.next;
  }
  
  /* No match found */
  
  return NULL;     
  8106ec:	0005883a 	mov	r2,zero
}
  8106f0:	e037883a 	mov	sp,fp
  8106f4:	dfc00117 	ldw	ra,4(sp)
  8106f8:	df000017 	ldw	fp,0(sp)
  8106fc:	dec00204 	addi	sp,sp,8
  810700:	f800283a 	ret

00810704 <alt_get_fd>:
 * the offset of the file descriptor within the file descriptor array). A
 * negative value indicates failure.
 */

int alt_get_fd (alt_dev* dev)
{
  810704:	defffc04 	addi	sp,sp,-16
  810708:	df000315 	stw	fp,12(sp)
  81070c:	df000304 	addi	fp,sp,12
  810710:	e13fff15 	stw	r4,-4(fp)
  alt_32 i;
  int rc = -EMFILE;
  810714:	00bffa04 	movi	r2,-24
  810718:	e0bffe15 	stw	r2,-8(fp)
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
  81071c:	e03ffd15 	stw	zero,-12(fp)
  810720:	00001906 	br	810788 <alt_get_fd+0x84>
  {
    if (!alt_fd_list[i].dev)
  810724:	00802074 	movhi	r2,129
  810728:	10961004 	addi	r2,r2,22592
  81072c:	e0fffd17 	ldw	r3,-12(fp)
  810730:	18c00324 	muli	r3,r3,12
  810734:	10c5883a 	add	r2,r2,r3
  810738:	10800017 	ldw	r2,0(r2)
  81073c:	10000f1e 	bne	r2,zero,81077c <alt_get_fd+0x78>
    {
      alt_fd_list[i].dev = dev;
  810740:	00802074 	movhi	r2,129
  810744:	10961004 	addi	r2,r2,22592
  810748:	e0fffd17 	ldw	r3,-12(fp)
  81074c:	18c00324 	muli	r3,r3,12
  810750:	10c5883a 	add	r2,r2,r3
  810754:	e0ffff17 	ldw	r3,-4(fp)
  810758:	10c00015 	stw	r3,0(r2)
      if (i > alt_max_fd)
  81075c:	d0e00a17 	ldw	r3,-32728(gp)
  810760:	e0bffd17 	ldw	r2,-12(fp)
  810764:	1880020e 	bge	r3,r2,810770 <alt_get_fd+0x6c>
      {
        alt_max_fd = i;
  810768:	e0bffd17 	ldw	r2,-12(fp)
  81076c:	d0a00a15 	stw	r2,-32728(gp)
      }
      rc = i;
  810770:	e0bffd17 	ldw	r2,-12(fp)
  810774:	e0bffe15 	stw	r2,-8(fp)
      goto alt_get_fd_exit;
  810778:	00000606 	br	810794 <alt_get_fd+0x90>
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
  81077c:	e0bffd17 	ldw	r2,-12(fp)
  810780:	10800044 	addi	r2,r2,1
  810784:	e0bffd15 	stw	r2,-12(fp)
  810788:	e0bffd17 	ldw	r2,-12(fp)
  81078c:	10800810 	cmplti	r2,r2,32
  810790:	103fe41e 	bne	r2,zero,810724 <__alt_data_end+0xff810724>
   * file descriptor pool.
   */

  ALT_SEM_POST(alt_fd_list_lock);

  return rc;
  810794:	e0bffe17 	ldw	r2,-8(fp)
}
  810798:	e037883a 	mov	sp,fp
  81079c:	df000017 	ldw	fp,0(sp)
  8107a0:	dec00104 	addi	sp,sp,4
  8107a4:	f800283a 	ret

008107a8 <alt_exception_cause_generated_bad_addr>:
 * Return: 1: BADADDR (bad_addr argument to handler) is valid
 *         0: BADADDR is not valid
 */
int 
alt_exception_cause_generated_bad_addr(alt_exception_cause cause)
{
  8107a8:	defffe04 	addi	sp,sp,-8
  8107ac:	df000115 	stw	fp,4(sp)
  8107b0:	df000104 	addi	fp,sp,4
  8107b4:	e13fff15 	stw	r4,-4(fp)
  switch (cause) {
  8107b8:	e0bfff17 	ldw	r2,-4(fp)
  8107bc:	10bffe84 	addi	r2,r2,-6
  8107c0:	10c00428 	cmpgeui	r3,r2,16
  8107c4:	18001a1e 	bne	r3,zero,810830 <alt_exception_cause_generated_bad_addr+0x88>
  8107c8:	100690ba 	slli	r3,r2,2
  8107cc:	00802074 	movhi	r2,129
  8107d0:	1081f804 	addi	r2,r2,2016
  8107d4:	1885883a 	add	r2,r3,r2
  8107d8:	10800017 	ldw	r2,0(r2)
  8107dc:	1000683a 	jmp	r2
  8107e0:	00810820 	cmpeqi	r2,zero,1056
  8107e4:	00810820 	cmpeqi	r2,zero,1056
  8107e8:	00810830 	cmpltui	r2,zero,1056
  8107ec:	00810830 	cmpltui	r2,zero,1056
  8107f0:	00810830 	cmpltui	r2,zero,1056
  8107f4:	00810820 	cmpeqi	r2,zero,1056
  8107f8:	00810828 	cmpgeui	r2,zero,1056
  8107fc:	00810830 	cmpltui	r2,zero,1056
  810800:	00810820 	cmpeqi	r2,zero,1056
  810804:	00810820 	cmpeqi	r2,zero,1056
  810808:	00810830 	cmpltui	r2,zero,1056
  81080c:	00810820 	cmpeqi	r2,zero,1056
  810810:	00810828 	cmpgeui	r2,zero,1056
  810814:	00810830 	cmpltui	r2,zero,1056
  810818:	00810830 	cmpltui	r2,zero,1056
  81081c:	00810820 	cmpeqi	r2,zero,1056
  case NIOS2_EXCEPTION_MISALIGNED_TARGET_PC:
  case NIOS2_EXCEPTION_TLB_READ_PERM_VIOLATION:
  case NIOS2_EXCEPTION_TLB_WRITE_PERM_VIOLATION:
  case NIOS2_EXCEPTION_MPU_DATA_REGION_VIOLATION:
  case NIOS2_EXCEPTION_ECC_DATA_ERR:
    return 1;
  810820:	00800044 	movi	r2,1
  810824:	00000306 	br	810834 <alt_exception_cause_generated_bad_addr+0x8c>

  case NIOS2_EXCEPTION_TLB_MISS:
  case NIOS2_EXCEPTION_ECC_TLB_ERR:
    return 0;
  810828:	0005883a 	mov	r2,zero
  81082c:	00000106 	br	810834 <alt_exception_cause_generated_bad_addr+0x8c>

  default:
    return 0;
  810830:	0005883a 	mov	r2,zero
  }
}
  810834:	e037883a 	mov	sp,fp
  810838:	df000017 	ldw	fp,0(sp)
  81083c:	dec00104 	addi	sp,sp,4
  810840:	f800283a 	ret

00810844 <atexit>:
  810844:	200b883a 	mov	r5,r4
  810848:	000f883a 	mov	r7,zero
  81084c:	000d883a 	mov	r6,zero
  810850:	0009883a 	mov	r4,zero
  810854:	08109c01 	jmpi	8109c0 <__register_exitproc>

00810858 <exit>:
  810858:	defffe04 	addi	sp,sp,-8
  81085c:	000b883a 	mov	r5,zero
  810860:	dc000015 	stw	r16,0(sp)
  810864:	dfc00115 	stw	ra,4(sp)
  810868:	2021883a 	mov	r16,r4
  81086c:	0810ad80 	call	810ad8 <__call_exitprocs>
  810870:	00802074 	movhi	r2,129
  810874:	109a8804 	addi	r2,r2,27168
  810878:	11000017 	ldw	r4,0(r2)
  81087c:	20800f17 	ldw	r2,60(r4)
  810880:	10000126 	beq	r2,zero,810888 <exit+0x30>
  810884:	103ee83a 	callr	r2
  810888:	8009883a 	mov	r4,r16
  81088c:	0810c580 	call	810c58 <_exit>

00810890 <_fputs_r>:
  810890:	defff804 	addi	sp,sp,-32
  810894:	dc400615 	stw	r17,24(sp)
  810898:	2023883a 	mov	r17,r4
  81089c:	2809883a 	mov	r4,r5
  8108a0:	dc000515 	stw	r16,20(sp)
  8108a4:	dfc00715 	stw	ra,28(sp)
  8108a8:	3021883a 	mov	r16,r6
  8108ac:	d9400315 	stw	r5,12(sp)
  8108b0:	08021140 	call	802114 <strlen>
  8108b4:	d8800215 	stw	r2,8(sp)
  8108b8:	d8800415 	stw	r2,16(sp)
  8108bc:	d8800304 	addi	r2,sp,12
  8108c0:	d8800015 	stw	r2,0(sp)
  8108c4:	00800044 	movi	r2,1
  8108c8:	d8800115 	stw	r2,4(sp)
  8108cc:	88000226 	beq	r17,zero,8108d8 <_fputs_r+0x48>
  8108d0:	88800e17 	ldw	r2,56(r17)
  8108d4:	10001226 	beq	r2,zero,810920 <_fputs_r+0x90>
  8108d8:	8080030b 	ldhu	r2,12(r16)
  8108dc:	10c8000c 	andi	r3,r2,8192
  8108e0:	1800061e 	bne	r3,zero,8108fc <_fputs_r+0x6c>
  8108e4:	81001917 	ldw	r4,100(r16)
  8108e8:	00f7ffc4 	movi	r3,-8193
  8108ec:	10880014 	ori	r2,r2,8192
  8108f0:	20c6703a 	and	r3,r4,r3
  8108f4:	8080030d 	sth	r2,12(r16)
  8108f8:	80c01915 	stw	r3,100(r16)
  8108fc:	d80d883a 	mov	r6,sp
  810900:	800b883a 	mov	r5,r16
  810904:	8809883a 	mov	r4,r17
  810908:	08073fc0 	call	8073fc <__sfvwrite_r>
  81090c:	dfc00717 	ldw	ra,28(sp)
  810910:	dc400617 	ldw	r17,24(sp)
  810914:	dc000517 	ldw	r16,20(sp)
  810918:	dec00804 	addi	sp,sp,32
  81091c:	f800283a 	ret
  810920:	8809883a 	mov	r4,r17
  810924:	0806f780 	call	806f78 <__sinit>
  810928:	003feb06 	br	8108d8 <__alt_data_end+0xff8108d8>

0081092c <fputs>:
  81092c:	00802074 	movhi	r2,129
  810930:	109a8904 	addi	r2,r2,27172
  810934:	280d883a 	mov	r6,r5
  810938:	200b883a 	mov	r5,r4
  81093c:	11000017 	ldw	r4,0(r2)
  810940:	08108901 	jmpi	810890 <_fputs_r>

00810944 <memcmp>:
  810944:	01c000c4 	movi	r7,3
  810948:	3980192e 	bgeu	r7,r6,8109b0 <memcmp+0x6c>
  81094c:	2144b03a 	or	r2,r4,r5
  810950:	11c4703a 	and	r2,r2,r7
  810954:	10000f26 	beq	r2,zero,810994 <memcmp+0x50>
  810958:	20800003 	ldbu	r2,0(r4)
  81095c:	28c00003 	ldbu	r3,0(r5)
  810960:	10c0151e 	bne	r2,r3,8109b8 <memcmp+0x74>
  810964:	31bfff84 	addi	r6,r6,-2
  810968:	01ffffc4 	movi	r7,-1
  81096c:	00000406 	br	810980 <memcmp+0x3c>
  810970:	20800003 	ldbu	r2,0(r4)
  810974:	28c00003 	ldbu	r3,0(r5)
  810978:	31bfffc4 	addi	r6,r6,-1
  81097c:	10c00e1e 	bne	r2,r3,8109b8 <memcmp+0x74>
  810980:	21000044 	addi	r4,r4,1
  810984:	29400044 	addi	r5,r5,1
  810988:	31fff91e 	bne	r6,r7,810970 <__alt_data_end+0xff810970>
  81098c:	0005883a 	mov	r2,zero
  810990:	f800283a 	ret
  810994:	20c00017 	ldw	r3,0(r4)
  810998:	28800017 	ldw	r2,0(r5)
  81099c:	18bfee1e 	bne	r3,r2,810958 <__alt_data_end+0xff810958>
  8109a0:	31bfff04 	addi	r6,r6,-4
  8109a4:	21000104 	addi	r4,r4,4
  8109a8:	29400104 	addi	r5,r5,4
  8109ac:	39bff936 	bltu	r7,r6,810994 <__alt_data_end+0xff810994>
  8109b0:	303fe91e 	bne	r6,zero,810958 <__alt_data_end+0xff810958>
  8109b4:	003ff506 	br	81098c <__alt_data_end+0xff81098c>
  8109b8:	10c5c83a 	sub	r2,r2,r3
  8109bc:	f800283a 	ret

008109c0 <__register_exitproc>:
  8109c0:	defffa04 	addi	sp,sp,-24
  8109c4:	dc000315 	stw	r16,12(sp)
  8109c8:	04002074 	movhi	r16,129
  8109cc:	841a8804 	addi	r16,r16,27168
  8109d0:	80c00017 	ldw	r3,0(r16)
  8109d4:	dc400415 	stw	r17,16(sp)
  8109d8:	dfc00515 	stw	ra,20(sp)
  8109dc:	18805217 	ldw	r2,328(r3)
  8109e0:	2023883a 	mov	r17,r4
  8109e4:	10003726 	beq	r2,zero,810ac4 <__register_exitproc+0x104>
  8109e8:	10c00117 	ldw	r3,4(r2)
  8109ec:	010007c4 	movi	r4,31
  8109f0:	20c00e16 	blt	r4,r3,810a2c <__register_exitproc+0x6c>
  8109f4:	1a000044 	addi	r8,r3,1
  8109f8:	8800221e 	bne	r17,zero,810a84 <__register_exitproc+0xc4>
  8109fc:	18c00084 	addi	r3,r3,2
  810a00:	18c7883a 	add	r3,r3,r3
  810a04:	18c7883a 	add	r3,r3,r3
  810a08:	12000115 	stw	r8,4(r2)
  810a0c:	10c7883a 	add	r3,r2,r3
  810a10:	19400015 	stw	r5,0(r3)
  810a14:	0005883a 	mov	r2,zero
  810a18:	dfc00517 	ldw	ra,20(sp)
  810a1c:	dc400417 	ldw	r17,16(sp)
  810a20:	dc000317 	ldw	r16,12(sp)
  810a24:	dec00604 	addi	sp,sp,24
  810a28:	f800283a 	ret
  810a2c:	00800034 	movhi	r2,0
  810a30:	10800004 	addi	r2,r2,0
  810a34:	10002626 	beq	r2,zero,810ad0 <__register_exitproc+0x110>
  810a38:	01006404 	movi	r4,400
  810a3c:	d9400015 	stw	r5,0(sp)
  810a40:	d9800115 	stw	r6,4(sp)
  810a44:	d9c00215 	stw	r7,8(sp)
  810a48:	00000000 	call	0 <__alt_mem_sdram-0x800000>
  810a4c:	d9400017 	ldw	r5,0(sp)
  810a50:	d9800117 	ldw	r6,4(sp)
  810a54:	d9c00217 	ldw	r7,8(sp)
  810a58:	10001d26 	beq	r2,zero,810ad0 <__register_exitproc+0x110>
  810a5c:	81000017 	ldw	r4,0(r16)
  810a60:	10000115 	stw	zero,4(r2)
  810a64:	02000044 	movi	r8,1
  810a68:	22405217 	ldw	r9,328(r4)
  810a6c:	0007883a 	mov	r3,zero
  810a70:	12400015 	stw	r9,0(r2)
  810a74:	20805215 	stw	r2,328(r4)
  810a78:	10006215 	stw	zero,392(r2)
  810a7c:	10006315 	stw	zero,396(r2)
  810a80:	883fde26 	beq	r17,zero,8109fc <__alt_data_end+0xff8109fc>
  810a84:	18c9883a 	add	r4,r3,r3
  810a88:	2109883a 	add	r4,r4,r4
  810a8c:	1109883a 	add	r4,r2,r4
  810a90:	21802215 	stw	r6,136(r4)
  810a94:	01800044 	movi	r6,1
  810a98:	12406217 	ldw	r9,392(r2)
  810a9c:	30cc983a 	sll	r6,r6,r3
  810aa0:	4992b03a 	or	r9,r9,r6
  810aa4:	12406215 	stw	r9,392(r2)
  810aa8:	21c04215 	stw	r7,264(r4)
  810aac:	01000084 	movi	r4,2
  810ab0:	893fd21e 	bne	r17,r4,8109fc <__alt_data_end+0xff8109fc>
  810ab4:	11006317 	ldw	r4,396(r2)
  810ab8:	218cb03a 	or	r6,r4,r6
  810abc:	11806315 	stw	r6,396(r2)
  810ac0:	003fce06 	br	8109fc <__alt_data_end+0xff8109fc>
  810ac4:	18805304 	addi	r2,r3,332
  810ac8:	18805215 	stw	r2,328(r3)
  810acc:	003fc606 	br	8109e8 <__alt_data_end+0xff8109e8>
  810ad0:	00bfffc4 	movi	r2,-1
  810ad4:	003fd006 	br	810a18 <__alt_data_end+0xff810a18>

00810ad8 <__call_exitprocs>:
  810ad8:	defff504 	addi	sp,sp,-44
  810adc:	df000915 	stw	fp,36(sp)
  810ae0:	dd400615 	stw	r21,24(sp)
  810ae4:	dc800315 	stw	r18,12(sp)
  810ae8:	dfc00a15 	stw	ra,40(sp)
  810aec:	ddc00815 	stw	r23,32(sp)
  810af0:	dd800715 	stw	r22,28(sp)
  810af4:	dd000515 	stw	r20,20(sp)
  810af8:	dcc00415 	stw	r19,16(sp)
  810afc:	dc400215 	stw	r17,8(sp)
  810b00:	dc000115 	stw	r16,4(sp)
  810b04:	d9000015 	stw	r4,0(sp)
  810b08:	2839883a 	mov	fp,r5
  810b0c:	04800044 	movi	r18,1
  810b10:	057fffc4 	movi	r21,-1
  810b14:	00802074 	movhi	r2,129
  810b18:	109a8804 	addi	r2,r2,27168
  810b1c:	12000017 	ldw	r8,0(r2)
  810b20:	45005217 	ldw	r20,328(r8)
  810b24:	44c05204 	addi	r19,r8,328
  810b28:	a0001c26 	beq	r20,zero,810b9c <__call_exitprocs+0xc4>
  810b2c:	a0800117 	ldw	r2,4(r20)
  810b30:	15ffffc4 	addi	r23,r2,-1
  810b34:	b8000d16 	blt	r23,zero,810b6c <__call_exitprocs+0x94>
  810b38:	14000044 	addi	r16,r2,1
  810b3c:	8421883a 	add	r16,r16,r16
  810b40:	8421883a 	add	r16,r16,r16
  810b44:	84402004 	addi	r17,r16,128
  810b48:	a463883a 	add	r17,r20,r17
  810b4c:	a421883a 	add	r16,r20,r16
  810b50:	e0001e26 	beq	fp,zero,810bcc <__call_exitprocs+0xf4>
  810b54:	80804017 	ldw	r2,256(r16)
  810b58:	e0801c26 	beq	fp,r2,810bcc <__call_exitprocs+0xf4>
  810b5c:	bdffffc4 	addi	r23,r23,-1
  810b60:	843fff04 	addi	r16,r16,-4
  810b64:	8c7fff04 	addi	r17,r17,-4
  810b68:	bd7ff91e 	bne	r23,r21,810b50 <__alt_data_end+0xff810b50>
  810b6c:	00800034 	movhi	r2,0
  810b70:	10800004 	addi	r2,r2,0
  810b74:	10000926 	beq	r2,zero,810b9c <__call_exitprocs+0xc4>
  810b78:	a0800117 	ldw	r2,4(r20)
  810b7c:	1000301e 	bne	r2,zero,810c40 <__call_exitprocs+0x168>
  810b80:	a0800017 	ldw	r2,0(r20)
  810b84:	10003226 	beq	r2,zero,810c50 <__call_exitprocs+0x178>
  810b88:	a009883a 	mov	r4,r20
  810b8c:	98800015 	stw	r2,0(r19)
  810b90:	00000000 	call	0 <__alt_mem_sdram-0x800000>
  810b94:	9d000017 	ldw	r20,0(r19)
  810b98:	a03fe41e 	bne	r20,zero,810b2c <__alt_data_end+0xff810b2c>
  810b9c:	dfc00a17 	ldw	ra,40(sp)
  810ba0:	df000917 	ldw	fp,36(sp)
  810ba4:	ddc00817 	ldw	r23,32(sp)
  810ba8:	dd800717 	ldw	r22,28(sp)
  810bac:	dd400617 	ldw	r21,24(sp)
  810bb0:	dd000517 	ldw	r20,20(sp)
  810bb4:	dcc00417 	ldw	r19,16(sp)
  810bb8:	dc800317 	ldw	r18,12(sp)
  810bbc:	dc400217 	ldw	r17,8(sp)
  810bc0:	dc000117 	ldw	r16,4(sp)
  810bc4:	dec00b04 	addi	sp,sp,44
  810bc8:	f800283a 	ret
  810bcc:	a0800117 	ldw	r2,4(r20)
  810bd0:	80c00017 	ldw	r3,0(r16)
  810bd4:	10bfffc4 	addi	r2,r2,-1
  810bd8:	15c01426 	beq	r2,r23,810c2c <__call_exitprocs+0x154>
  810bdc:	80000015 	stw	zero,0(r16)
  810be0:	183fde26 	beq	r3,zero,810b5c <__alt_data_end+0xff810b5c>
  810be4:	95c8983a 	sll	r4,r18,r23
  810be8:	a0806217 	ldw	r2,392(r20)
  810bec:	a5800117 	ldw	r22,4(r20)
  810bf0:	2084703a 	and	r2,r4,r2
  810bf4:	10000b26 	beq	r2,zero,810c24 <__call_exitprocs+0x14c>
  810bf8:	a0806317 	ldw	r2,396(r20)
  810bfc:	2088703a 	and	r4,r4,r2
  810c00:	20000c1e 	bne	r4,zero,810c34 <__call_exitprocs+0x15c>
  810c04:	89400017 	ldw	r5,0(r17)
  810c08:	d9000017 	ldw	r4,0(sp)
  810c0c:	183ee83a 	callr	r3
  810c10:	a0800117 	ldw	r2,4(r20)
  810c14:	15bfbf1e 	bne	r2,r22,810b14 <__alt_data_end+0xff810b14>
  810c18:	98800017 	ldw	r2,0(r19)
  810c1c:	153fcf26 	beq	r2,r20,810b5c <__alt_data_end+0xff810b5c>
  810c20:	003fbc06 	br	810b14 <__alt_data_end+0xff810b14>
  810c24:	183ee83a 	callr	r3
  810c28:	003ff906 	br	810c10 <__alt_data_end+0xff810c10>
  810c2c:	a5c00115 	stw	r23,4(r20)
  810c30:	003feb06 	br	810be0 <__alt_data_end+0xff810be0>
  810c34:	89000017 	ldw	r4,0(r17)
  810c38:	183ee83a 	callr	r3
  810c3c:	003ff406 	br	810c10 <__alt_data_end+0xff810c10>
  810c40:	a0800017 	ldw	r2,0(r20)
  810c44:	a027883a 	mov	r19,r20
  810c48:	1029883a 	mov	r20,r2
  810c4c:	003fb606 	br	810b28 <__alt_data_end+0xff810b28>
  810c50:	0005883a 	mov	r2,zero
  810c54:	003ffb06 	br	810c44 <__alt_data_end+0xff810c44>

00810c58 <_exit>:
 *
 * ALT_EXIT is mapped onto the _exit() system call in alt_syscall.h
 */

void ALT_EXIT (int exit_code)
{
  810c58:	defffd04 	addi	sp,sp,-12
  810c5c:	df000215 	stw	fp,8(sp)
  810c60:	df000204 	addi	fp,sp,8
  810c64:	e13fff15 	stw	r4,-4(fp)
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Entering _exit() function.\r\n");
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Exit code from main was %d.\r\n",exit_code);
  /* Stop all other threads */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Calling ALT_OS_STOP().\r\n");
  ALT_OS_STOP();
  810c68:	0001883a 	nop
  810c6c:	e0bfff17 	ldw	r2,-4(fp)
  810c70:	e0bffe15 	stw	r2,-8(fp)
/*
 * Routine called on exit.
 */
static ALT_INLINE ALT_ALWAYS_INLINE void alt_sim_halt(int exit_code)
{
  register int r2 asm ("r2") = exit_code;
  810c74:	e0bffe17 	ldw	r2,-8(fp)
  __asm__ volatile ("\n0:\n\taddi %0,%0, -1\n\tbgt %0,zero,0b" : : "r" (ALT_CPU_FREQ/100) ); /* Delay for >30ms */

  __asm__ volatile ("break 2" : : "r"(r2), "r"(r3) ALT_GMON_DATA );

#else /* !DEBUG_STUB */
  if (r2) {
  810c78:	10000226 	beq	r2,zero,810c84 <_exit+0x2c>
    ALT_SIM_FAIL();
  810c7c:	002af070 	cmpltui	zero,zero,43969
  810c80:	00000106 	br	810c88 <_exit+0x30>
  } else {
    ALT_SIM_PASS();
  810c84:	002af0b0 	cmpltui	zero,zero,43970
  ALT_SIM_HALT(exit_code);

  /* spin forever, since there's no where to go back to */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Spinning forever.\r\n");
  while (1);
  810c88:	003fff06 	br	810c88 <__alt_data_end+0xff810c88>
